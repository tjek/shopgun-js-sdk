{"version":3,"file":"index.cjs.js","sources":["../../../../vendor/gator.ts","../../../../lib/util.ts","../../../../lib/kits/core/request.ts","../../../../lib/translations.ts","../../../../lib/key-codes.ts","../../../../lib/kits/core-ui/popover.ts","../../../../lib/kits/core-ui/single-choice-popover.ts","../../../../lib/kits/paged-publication/controls.ts","../../../../lib/verso-browser/animation.ts","../../../../lib/verso-browser/page_spread.ts","../../../../lib/verso-browser/vendor/hammer/Input.js","../../../../lib/verso-browser/vendor/hammer/input/touch.js","../../../../lib/verso-browser/vendor/hammer/input/mouse.js","../../../../lib/verso-browser/vendor/hammer/input/pointerevent.js","../../../../lib/verso-browser/vendor/hammer/input/touchmouse.js","../../../../lib/verso-browser/vendor/hammer/Recognizer.js","../../../../lib/verso-browser/vendor/hammer/utils/prefixed.js","../../../../lib/verso-browser/vendor/hammer/TouchAction.js","../../../../lib/verso-browser/vendor/hammer/Manager.js","../../../../lib/verso-browser/vendor/hammer/recognizers/attribute.js","../../../../lib/verso-browser/vendor/hammer/recognizers/pan.js","../../../../lib/verso-browser/vendor/hammer/recognizers/pinch.js","../../../../lib/verso-browser/vendor/hammer/recognizers/press.js","../../../../lib/verso-browser/vendor/hammer/recognizers/tap.js","../../../../lib/verso-browser/verso.ts","../../../../lib/kits/paged-publication/page-spread.ts","../../../../lib/kits/paged-publication/page-spreads.ts","../../../../lib/kits/paged-publication/core.ts","../../../../lib/kits/paged-publication/event-tracking.ts","../../../../lib/kits/paged-publication/hotspots.ts","../../../../lib/kits/paged-publication/viewer.ts","../../../../lib/kits/paged-publication/bootstrapper.ts"],"sourcesContent":["const _getMatcher = (element: Element) =>\n    element.matches ||\n    element.webkitMatchesSelector || // @ts-expect-error\n    element.mozMatchesSelector || // @ts-expect-error\n    element.msMatchesSelector || // @ts-expect-error\n    element.oMatchesSelector ||\n    Function.prototype;\n\nlet _level = 0;\nfunction _matchesSelector(\n    element: HTMLElement,\n    selector: string,\n    boundElement: HTMLElement\n) {\n    if (element === boundElement) return;\n\n    if (_getMatcher(element).call(element, selector)) return element;\n\n    if (element.parentElement) {\n        _level++;\n        return _matchesSelector(element.parentElement, selector, boundElement);\n    }\n}\nconst handlersBySelectorByTypeByInstance = {};\nfunction _bind(\n    this: {element: HTMLElement; id: number},\n    events: string | string[],\n    selector: string | number,\n    callback: any,\n    remove: boolean\n): void {\n    if (!(events instanceof Array)) events = [events];\n\n    const id = this.id;\n    let handlersBySelectorByType = handlersBySelectorByTypeByInstance[this.id];\n    for (let k = 0; k < events.length; k++) {\n        const type = events[k];\n        if (remove) {\n            // if there are no events tied to this element at all\n            // then don't do anything\n            if (!handlersBySelectorByType) return;\n\n            // if there is no event type specified then remove all events\n            // example: Gator(element).off()\n            if (!type) {\n                Object.keys(handlersBySelectorByType).forEach((handleType) => {\n                    handlersBySelectorByType[handleType] = {};\n                });\n\n                return;\n            }\n\n            // if no callback or selector is specified remove all events of this type\n            // example: Gator(element).off('click')\n            if (!callback && !selector) {\n                handlersBySelectorByType[type] = {};\n                return;\n            }\n\n            // if a selector is specified but no callback remove all events\n            // for this selector\n            // example: Gator(element).off('click', '.sub-element')\n            if (!callback) {\n                delete handlersBySelectorByType[type][selector];\n                return;\n            }\n\n            // if we have specified an event type, selector, and callback then we\n            // need to make sure there are callbacks tied to this selector to\n            // begin with.  if there aren't then we can stop here\n            if (!handlersBySelectorByType[type][selector]) return;\n\n            // if there are then loop through all the callbacks and if we find\n            // one that matches remove it from the array\n            for (\n                let i = 0;\n                i < handlersBySelectorByType[type][selector].length;\n                i++\n            ) {\n                const handlers = handlersBySelectorByType[type][selector];\n                if (handlers[i] === callback) {\n                    handlers.splice(i, 1);\n                    break;\n                }\n            }\n            continue;\n        }\n\n        if (!handlersBySelectorByType || !handlersBySelectorByType[type])\n            this.element.addEventListener(\n                type,\n                (e) => {\n                    const handlersBySelector = handlersBySelectorByType[type];\n                    if (!handlersBySelector) return;\n\n                    const target = e.target;\n                    const matches = {};\n\n                    // find all events that match\n                    _level = 0;\n                    Object.keys(handlersBySelector).forEach(\n                        (handlerSelector) => {\n                            if (target instanceof HTMLElement) {\n                                const match = _matchesSelector(\n                                    target,\n                                    handlerSelector,\n                                    instances[id].element\n                                );\n\n                                if (match) {\n                                    _level++;\n                                    handlersBySelector[handlerSelector].match =\n                                        match;\n                                    matches[_level] =\n                                        handlersBySelector[handlerSelector];\n                                }\n                            }\n                        }\n                    );\n\n                    // stopPropagation() fails to set cancelBubble to true in Webkit\n                    // @see http://code.google.com/p/chromium/issues/detail?id=162270\n                    e.stopPropagation = function () {\n                        e.cancelBubble = true;\n                    };\n\n                    for (let i = 0; i <= _level; i++) {\n                        if (matches[i]) {\n                            for (let j = 0; j < matches[i].length; j++) {\n                                if (\n                                    matches[i][j].call(matches[i].match, e) ===\n                                    false\n                                ) {\n                                    e.preventDefault();\n                                    e.stopPropagation();\n                                    return;\n                                }\n\n                                if (e.cancelBubble) return;\n                            }\n                        }\n                    }\n                },\n                type == 'blur' || type == 'focus'\n            );\n\n        if (!handlersBySelectorByType) {\n            handlersBySelectorByTypeByInstance[id] = {};\n            handlersBySelectorByType = handlersBySelectorByTypeByInstance[id];\n        }\n\n        if (!handlersBySelectorByType[type]) {\n            handlersBySelectorByType[type] = {};\n        }\n\n        if (!handlersBySelectorByType[type][selector])\n            handlersBySelectorByType[type][selector] = [];\n\n        handlersBySelectorByType[type][selector].push(callback);\n    }\n}\n\nlet _id = 0;\nconst instances = {};\nfunction Gator(\n    this: {element: HTMLElement; id: number},\n    element: HTMLElement,\n    id?: number\n) {\n    // called as function\n    if (!(this instanceof Gator)) {\n        // only keep one Gator instance per node to make sure that\n        // we don't create a ton of new objects if you want to delegate\n        // multiple events from the same node\n        //\n        // for example: Gator(document).on(...\n        for (const key in instances) {\n            if (instances[key].element === element) return instances[key];\n        }\n\n        _id++;\n        return (instances[_id] = new (Gator as (\n            element: HTMLElement,\n            id?: number\n        ) => void)(element, _id));\n    }\n\n    this.element = element;\n    this.id = id!;\n}\n\nGator.prototype.on = function (\n    events: string | string[],\n    selector: string,\n    callback: any\n) {\n    _bind.call(this, events, selector, callback);\n};\n\nGator.prototype.off = function (\n    events: string | string[],\n    selector: string,\n    callback: any\n) {\n    _bind.call(this, events, selector, callback, true);\n};\n\nexport default Gator;\n","import Gator from '../vendor/gator';\n\nexport const isBrowser = () =>\n    typeof window === 'object' && typeof document === 'object';\n\nexport const isNode = () => typeof process === 'object';\n\nexport function error(\n    err: Error & {code?: string; time?: Date; statusCode?: number},\n    options?: {\n        message?: string;\n        code?: string;\n        name?: string;\n        stack?: string;\n        statusCode?: number;\n    }\n) {\n    err.message = err.message;\n\n    if (typeof options === 'string') {\n        err.message = options;\n    } else if (typeof options === 'object' && options) {\n        for (const key in options) err[key] = options[key];\n\n        if (options.message) err.message = options.message;\n\n        if (options.code || options.message) {\n            err.code = options.code || options.name;\n        }\n        if (options.stack) err.stack = options.stack;\n\n        if (options.statusCode) err.statusCode = options.statusCode;\n    }\n\n    err.name = options?.name || err.name || err.code || 'Error';\n    err.time = new Date();\n\n    return err;\n}\n\nexport function getQueryParam(field, url?: string) {\n    const reg = new RegExp('[?&]' + field + '=([^&#]*)', 'i');\n    const string = reg.exec(url || window.location.href);\n\n    return string ? string[1] : undefined;\n}\n\nexport function throttle<F extends (...args) => void>(\n    fn: F,\n    threshold = 250,\n    scope?: Object\n): F {\n    let last: number | undefined;\n    let deferTimer: NodeJS.Timeout;\n\n    return function () {\n        const context = scope || this;\n        const now = new Date().getTime();\n        const args = arguments;\n\n        if (last && now < last + threshold) {\n            clearTimeout(deferTimer);\n\n            deferTimer = setTimeout(() => {\n                last = now;\n\n                fn.apply(context, args);\n            }, threshold);\n        } else {\n            last = now;\n            fn.apply(context, args);\n        }\n    } as F;\n}\n\nexport const on = (\n    el: HTMLElement,\n    events: string | string[],\n    selector: string,\n    callback: (event: any) => void\n) =>\n    //@ts-expect-error\n    Gator(el).on(events, selector, callback);\n\nexport const off = (\n    el: HTMLElement,\n    events?: string | string[],\n    selector?: string,\n    callback?: (event: any) => void\n) =>\n    //@ts-expect-error\n    Gator(el).off(events, selector, callback);\n","import fetch from 'cross-fetch';\nimport {error} from '../../util';\n\nasync function request<T>(\n    {\n        coreUrl,\n        url: rawUrl = '',\n        apiKey,\n        qs,\n        method = 'get',\n        headers,\n        body\n    }: {\n        coreUrl?: string;\n        url: string | URL;\n        apiKey?: string;\n        qs?: Record<string, string | number | undefined>;\n        method?: RequestInit['method'];\n        headers?: Record<string, string>;\n        body?: RequestInit['body'];\n    },\n    callback?: (error: Error | null, result?: T | null) => void\n): Promise<Awaited<T>> {\n    try {\n        const url = new URL(rawUrl, coreUrl);\n\n        if (!apiKey) {\n            throw new Error(\n                '`apiKey` needs to be configured, please see README'\n            );\n        }\n\n        // @ts-expect-error\n        for (const key in qs) url.searchParams.append(key, qs[key]);\n\n        const response = await fetch(String(url), {\n            method,\n            body,\n            headers: {\n                Accept: 'application/json',\n                ...headers,\n                'X-Api-Key': apiKey\n            },\n            credentials: 'same-origin'\n        });\n        if (\n            (response.status >= 200 && response.status < 300) ||\n            response.status === 304\n        ) {\n            const json = await response.json();\n\n            callback?.(null, json);\n\n            return json;\n        }\n        throw error(new Error('Core API error'), {\n            code: 'CoreAPIError',\n            statusCode: response.status\n        });\n    } catch (error) {\n        callback?.(error);\n\n        throw error;\n    }\n}\n\nexport default request;\n","import Mustache from 'mustache';\nconst pairs = {\n    'paged_publication.hotspot_picker.header': 'Which offer did you mean?',\n    'incito_publication.product_picker.header': 'Which product?'\n};\n\nexport function t(key: string, view?: any) {\n    const template = pairs[key] ?? '';\n\n    return Mustache.render(template, view);\n}\n\nexport function update(translations: Record<string, string>) {\n    for (const key in translations) pairs[key] = translations[key];\n}\n","export const ESC = 27;\nexport const ARROW_RIGHT = 39;\nexport const ARROW_LEFT = 37;\nexport const SPACE = 32;\nexport const NUMBER_ONE = 49;\n","import MicroEvent from 'microevent';\nimport Mustache from 'mustache';\nimport * as keyCodes from '../../key-codes';\nimport {off, on} from '../../util';\nimport './popover.styl';\n\nconst defaultTemplate = `\\\n<div class=\"sgn-popover__background\" data-close></div>\n<div class=\"sgn-popover__menu\">\n    {{#header}}\n        <div class=\"sgn-popover__header\">{{header}}</div>\n    {{/header}}\n    <div class=\"sgn-popover__content\">\n        <ul>\n            {{#singleChoiceItems}}\n                <li data-index=\"{{index}}\">\n                    <p class=\"sgn-popover-item__title\">{{item.title}}</p>\n                    {{#item.subtitle}}\n                        <p class=\"sgn-popover-item__subtitle\">{{item.subtitle}}</p>\n                    {{/item.subtitle}}\n                </li>\n            {{/singleChoiceItems}}\n        </ul>\n    </div>\n</div>\\\n`;\n\ninterface PopoverOptions {\n    header?: string;\n    singleChoiceItems?: any;\n    template?: string;\n    x: number;\n    y: number;\n}\nclass Popover extends MicroEvent {\n    el = document.createElement('div');\n    backgroundEl = document.createElement('div');\n    options: PopoverOptions;\n    constructor(options: PopoverOptions) {\n        super();\n        this.options = options;\n    }\n\n    render() {\n        const {header, singleChoiceItems, template} = this.options;\n\n        this.el.className = 'sgn-popover';\n        this.el.setAttribute('tabindex', '-1');\n        this.el.innerHTML = Mustache.render(template || defaultTemplate, {\n            header,\n            singleChoiceItems: singleChoiceItems?.map((item, index) => ({\n                item,\n                index\n            }))\n        });\n\n        this.position();\n        this.addEventListeners();\n\n        return this;\n    }\n\n    destroy() {\n        off(this.el);\n\n        window.removeEventListener('resize', this.resize, false);\n        window.removeEventListener('scroll', this.scroll, false);\n\n        if (this.el.parentNode) {\n            this.el.parentNode.removeChild(this.el);\n\n            this.trigger('destroyed');\n        }\n    }\n\n    position() {\n        let top = this.options.y;\n        let left = this.options.x;\n\n        const menuEl =\n            this.el.querySelector<HTMLDivElement>('.sgn-popover__menu');\n\n        if (menuEl && this.el.parentElement) {\n            const width = menuEl.offsetWidth;\n            const height = menuEl.offsetHeight;\n            const parentWidth = this.el.parentElement.offsetWidth;\n            const parentHeight = this.el.parentElement.offsetHeight;\n            const boundingRect = this.el.parentElement.getBoundingClientRect();\n\n            top -= boundingRect.top;\n            left -= boundingRect.left;\n\n            top -= window.pageYOffset;\n            left -= window.pageXOffset;\n\n            menuEl.style.top =\n                top + height > parentHeight\n                    ? parentHeight - height + 'px'\n                    : top + 'px';\n\n            menuEl.style.left =\n                left + width > parentWidth\n                    ? parentWidth - width + 'px'\n                    : left + 'px';\n        }\n    }\n\n    addEventListeners() {\n        const trigger = this.trigger.bind(this);\n\n        this.el.addEventListener('keyup', this.keyUp);\n\n        on(this.el, 'click', '[data-index]', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            trigger('selected', {index: this.dataset.index});\n        });\n\n        on(this.el, 'click', '[data-close]', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.destroy();\n        });\n\n        on(this.el, 'click', '.sgn-popover__menu', (e) => {\n            e.stopPropagation();\n        });\n\n        window.addEventListener('resize', this.resize, false);\n        window.addEventListener('scroll', this.scroll, false);\n    }\n\n    keyUp = (e) => {\n        if (e.keyCode === keyCodes.ESC) this.destroy();\n    };\n\n    resize = () => {\n        this.destroy();\n    };\n\n    scroll = () => {\n        this.destroy();\n    };\n}\n\nexport default Popover;\n","import Popover from './popover';\n\nexport default function singleChoicePopover(\n    {\n        items,\n        el,\n        header,\n        x,\n        y\n    }: {items; el: HTMLElement; header?: string; x: number; y: number},\n    callback\n) {\n    let popover: Popover | undefined;\n\n    if (items.length === 1) {\n        callback(items[0]);\n    } else if (items.length > 1) {\n        popover = new Popover({header, x, y, singleChoiceItems: items});\n\n        popover.bind('selected', (e) => {\n            callback(items[e.index]);\n\n            popover?.destroy();\n        });\n\n        popover.bind('destroyed', () => {\n            el.focus();\n        });\n\n        el.appendChild(popover.el);\n        popover.render().el.focus();\n    }\n\n    return {\n        destroy() {\n            popover?.destroy();\n        }\n    };\n}\n","import MicroEvent from 'microevent';\nimport * as keyCodes from '../../key-codes';\nimport {throttle} from '../../util';\n\nconst visibilityClassName = 'sgn-pp--hidden';\ninterface PagedPublicationControlsInit {\n    keyboard: boolean;\n}\nclass PagedPublicationControls extends MicroEvent {\n    options: PagedPublicationControlsInit;\n    root: HTMLElement;\n    progress: HTMLElement | null;\n    progressBar: HTMLElement | null;\n    progressLabel: HTMLElement | null;\n    prevControl: HTMLElement | null;\n    nextControl: HTMLElement | null;\n    close: HTMLElement | null;\n    keyDownHandler: typeof this.keyDown;\n    // @ts-expect-error\n    constructor(el: HTMLElement, options: PagedPublicationControlsInit = {}) {\n        super();\n        this.options = options;\n        this.root = el;\n        this.progress = el.querySelector('.sgn-pp__progress');\n        this.progressBar = el.querySelector('.sgn-pp-progress__bar');\n        this.progressLabel = el.querySelector('.sgn-pp__progress-label');\n        this.prevControl = el.querySelector(\n            '.sgn-pp__control[data-direction=prev]'\n        );\n        this.nextControl = el.querySelector(\n            '.sgn-pp__control[data-direction=next]'\n        );\n        this.close = el.querySelector('.sgn-pp--close');\n\n        this.keyDownHandler = throttle(this.keyDown, 150, this);\n        if (this.options.keyboard === true) {\n            this.root.addEventListener('keydown', this.keyDownHandler, false);\n        }\n        this.prevControl?.addEventListener(\n            'mousedown',\n            this.prevClicked,\n            false\n        );\n        this.nextControl?.addEventListener(\n            'mousedown',\n            this.nextClicked,\n            false\n        );\n        this.close?.addEventListener('mousedown', this.closeClicked, false);\n\n        this.bind('beforeNavigation', this.beforeNavigation);\n        this.bind('destroyed', this.destroy);\n    }\n\n    destroy = () => {\n        if (this.options.keyboard === true) {\n            this.root.removeEventListener(\n                'keydown',\n                this.keyDownHandler,\n                false\n            );\n        }\n        this.prevControl?.removeEventListener(\n            'mousedown',\n            this.prevClicked,\n            false\n        );\n\n        this.nextControl?.removeEventListener(\n            'mousedown',\n            this.nextClicked,\n            false\n        );\n\n        this.close?.removeEventListener('mousedown', this.closeClicked, false);\n    };\n\n    beforeNavigation = (e) => {\n        const showProgress =\n            typeof e.progressLabel === 'string' && e.progressLabel.length > 0;\n\n        if (this.progress && this.progressBar) {\n            this.progressBar.style.width = `${e.progress}%`;\n\n            if (showProgress) {\n                this.progress.classList.remove(visibilityClassName);\n            } else {\n                this.progress.classList.add(visibilityClassName);\n            }\n        }\n\n        if (this.progressLabel) {\n            if (showProgress) {\n                this.progressLabel.textContent = e.progressLabel;\n                this.progressLabel.classList.remove(visibilityClassName);\n            } else {\n                this.progressLabel.classList.add(visibilityClassName);\n            }\n        }\n\n        if (this.prevControl) {\n            if (e.verso.newPosition === 0) {\n                this.prevControl.classList.add(visibilityClassName);\n            } else {\n                this.prevControl.classList.remove(visibilityClassName);\n            }\n        }\n\n        if (this.nextControl) {\n            if (e.verso.newPosition === e.pageSpreadCount - 1) {\n                this.nextControl.classList.add(visibilityClassName);\n            } else {\n                this.nextControl.classList.remove(visibilityClassName);\n            }\n        }\n    };\n\n    prevClicked = (e: MouseEvent) => {\n        e.preventDefault();\n\n        this.trigger('prev');\n    };\n\n    nextClicked = (e: MouseEvent) => {\n        e.preventDefault();\n\n        this.trigger('next');\n    };\n\n    closeClicked = (e: MouseEvent) => {\n        e.preventDefault();\n\n        this.trigger('close');\n    };\n\n    keyDown = (e: KeyboardEvent) => {\n        const {keyCode} = e;\n\n        if (keyCodes.ARROW_LEFT === keyCode) {\n            this.trigger('prev', {duration: 0});\n        } else if (\n            keyCodes.ARROW_RIGHT === keyCode ||\n            keyCodes.SPACE === keyCode\n        ) {\n            this.trigger('next', {duration: 0});\n        } else if (keyCodes.NUMBER_ONE === keyCode) {\n            this.trigger('first', {duration: 0});\n        }\n    };\n}\n\nexport default PagedPublicationControls;\n","export default class Animation {\n    run = 0;\n    el: HTMLElement;\n    constructor(el: HTMLElement) {\n        this.el = el;\n    }\n\n    animate(\n        // @ts-expect-error\n        {\n            x = 0,\n            y = 0,\n            scale = 1,\n            easing = 'ease-out',\n            duration = 0\n        }: {\n            x: string | number;\n            y?: string | number;\n            scale?: number;\n            easing?: string;\n            duration?: number;\n        } = {},\n        callback?: () => void\n    ) {\n        const run = ++this.run;\n        const transform = `translateX(${x}) translateY(${y}) scale(${scale})`;\n\n        if (this.el.style.transform === transform) {\n            callback?.();\n        } else if (duration > 0) {\n            const transitionEnd = () => {\n                if (run !== this.run) return;\n\n                this.el.removeEventListener('transitionend', transitionEnd);\n                this.el.style.transition = 'none';\n\n                callback?.();\n            };\n\n            this.el.addEventListener('transitionend', transitionEnd, false);\n\n            this.el.style.transition = `transform ${easing} ${duration}ms`;\n            this.el.style.transform = transform;\n        } else {\n            this.el.style.transition = 'none';\n            this.el.style.transform = transform;\n\n            callback?.();\n        }\n\n        return this;\n    }\n}\n","import './page_spread.styl';\n\ntype Complete<T> = {\n    [P in keyof Required<T>]: Pick<T, P> extends Required<Pick<T, P>>\n        ? T[P]\n        : T[P] | undefined;\n};\n\ninterface PageSpreadInit {\n    id?: string;\n    type?: string;\n    pageIds: string[];\n    width: number;\n    left: number;\n    maxZoomScale: number;\n}\nexport default class PageSpread {\n    visibility = 'gone';\n    positioned = false;\n    active = false;\n    el: HTMLElement;\n    options: PageSpreadInit;\n    id?: string;\n    type?: string;\n    pageIds: string[];\n    width: number;\n    left: number;\n    maxZoomScale: number;\n    // @ts-expect-error\n    constructor(el: HTMLElement, options: PageSpreadInit = {}) {\n        this.el = el;\n        this.options = options;\n        this.id = this.options.id;\n        this.type = this.options.type;\n        this.pageIds = this.options.pageIds;\n        this.width = this.options.width;\n        this.left = this.options.left;\n        this.maxZoomScale = this.options.maxZoomScale;\n    }\n\n    isZoomable() {\n        return (\n            this.getMaxZoomScale() > 1 &&\n            this.getEl().dataset.zoomable !== 'false'\n        );\n    }\n\n    isScrollable() {\n        return this.getEl().classList.contains('verso--scrollable');\n    }\n\n    getEl() {\n        return this.el;\n    }\n\n    getOverlayEls() {\n        return this.getEl().querySelectorAll<HTMLElement>('.verso__overlay');\n    }\n\n    getPageEls() {\n        return this.getEl().querySelectorAll<HTMLElement>('.verso__page');\n    }\n\n    getRect() {\n        return this.getEl().getBoundingClientRect();\n    }\n\n    getContentRect() {\n        const rect: {\n            top: null | number;\n            left: null | number;\n            right: null | number;\n            bottom: null | number;\n            width: null | number;\n            height: null | number;\n        } = {\n            top: null,\n            left: null,\n            right: null,\n            bottom: null,\n            width: null,\n            height: null\n        };\n\n        const pageEls = this.getPageEls();\n        for (let idx = 0; idx < pageEls.length; idx++) {\n            const pageEl = pageEls[idx];\n            const pageRect = pageEl.getBoundingClientRect();\n\n            if (rect.top == null || pageRect.top < rect.top) {\n                rect.top = pageRect.top;\n            }\n            if (rect.left == null || pageRect.left < rect.left) {\n                rect.left = pageRect.left;\n            }\n            if (rect.right == null || pageRect.right > rect.right) {\n                rect.right = pageRect.right;\n            }\n            if (rect.bottom == null || pageRect.bottom > rect.bottom) {\n                rect.bottom = pageRect.bottom;\n            }\n        }\n\n        rect.top = rect.top ?? 0;\n        rect.left = rect.left ?? 0;\n        rect.right = rect.right ?? 0;\n        rect.bottom = rect.bottom ?? 0;\n        rect.width = rect.right - rect.left;\n        rect.height = rect.bottom - rect.top;\n\n        return rect as {\n            top: number;\n            left: number;\n            right: number;\n            bottom: number;\n            width: number;\n            height: number;\n        };\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    getPageIds() {\n        return this.pageIds;\n    }\n\n    getWidth() {\n        return this.width;\n    }\n\n    getLeft() {\n        return this.left;\n    }\n\n    getMaxZoomScale() {\n        return this.maxZoomScale;\n    }\n\n    getVisibility() {\n        return this.visibility;\n    }\n\n    setVisibility(visibility) {\n        if (this.visibility !== visibility) {\n            this.getEl().style.display =\n                visibility === 'visible' ? 'block' : 'none';\n\n            this.visibility = visibility;\n        }\n\n        return this;\n    }\n\n    position() {\n        if (!this.positioned) {\n            this.getEl().style.left = `${this.getLeft()}%`;\n\n            this.positioned = true;\n        }\n\n        return this;\n    }\n\n    activate() {\n        this.active = true;\n        // @ts-expect-error\n        this.getEl().dataset.active = this.active;\n    }\n\n    deactivate() {\n        this.active = false;\n        // @ts-expect-error\n        this.getEl().dataset.active = this.active;\n    }\n}\n","export const INPUT_TYPE_TOUCH = 'touch';\nexport const INPUT_TYPE_MOUSE = 'mouse';\n\nconst COMPUTE_INTERVAL = 25;\n\nexport const INPUT_START = 1;\nexport const INPUT_MOVE = 2;\nexport const INPUT_END = 4;\nexport const INPUT_CANCEL = 8;\n\nexport const DIRECTION_NONE = 1;\nexport const DIRECTION_LEFT = 2;\nexport const DIRECTION_RIGHT = 4;\nexport const DIRECTION_UP = 8;\nexport const DIRECTION_DOWN = 16;\n\nexport const DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nexport const DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nexport const DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nconst PROPS_XY = ['x', 'y'];\nconst PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\nexport const TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\n/**\n * @private\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nexport function getDistance(p1, p2, props = PROPS_XY) {\n    const x = p2[props[0]] - p1[props[0]];\n    const y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * @private\n * direction cons to string\n * @param {constant} direction\n * @returns {String}\n */\nexport function directionStr(direction) {\n    if (direction === DIRECTION_DOWN) return 'down';\n\n    if (direction === DIRECTION_UP) return 'up';\n\n    if (direction === DIRECTION_LEFT) return 'left';\n\n    if (direction === DIRECTION_RIGHT) return 'right';\n\n    return '';\n}\n\nfunction getAngle(p1, p2, props = PROPS_XY) {\n    const x = p2[props[0]] - p1[props[0]];\n    const y = p2[props[1]] - p1[props[1]];\n    return (Math.atan2(y, x) * 180) / Math.PI;\n}\n\nfunction getCenter(pointers) {\n    let x = 0;\n    let y = 0;\n    pointers.forEach((pointer) => {\n        x += pointer.clientX;\n        y += pointer.clientY;\n    });\n\n    return {\n        x: Math.round(x / pointers.length),\n        y: Math.round(y / pointers.length)\n    };\n}\n\nconst getRotation = (start, end) =>\n    getAngle(end[1], end[0], PROPS_CLIENT_XY) +\n    getAngle(start[1], start[0], PROPS_CLIENT_XY);\n\nconst getScale = (start, end) =>\n    getDistance(end[0], end[1], PROPS_CLIENT_XY) /\n    getDistance(start[0], start[1], PROPS_CLIENT_XY);\n\nconst getDirection = (x, y) =>\n    x === y\n        ? DIRECTION_NONE\n        : Math.abs(x) >= Math.abs(y)\n        ? x < 0\n            ? DIRECTION_LEFT\n            : DIRECTION_RIGHT\n        : y < 0\n        ? DIRECTION_UP\n        : DIRECTION_DOWN;\n\nconst getVelocity = (deltaTime, x, y) => ({\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n});\n\n/**\n * @private\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    const last = session.lastInterval || input;\n    const deltaTime = input.timeStamp - last.timeStamp;\n    let velocity;\n    let velocityX;\n    let velocityY;\n    let direction;\n\n    if (\n        input.eventType !== INPUT_CANCEL &&\n        (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)\n    ) {\n        const deltaX = input.deltaX - last.deltaX;\n        const deltaY = input.deltaY - last.deltaY;\n\n        const v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = Math.abs(v.x) > Math.abs(v.y) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\nfunction computeDeltaXY(session, input) {\n    const {center} = input;\n    // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;\n    // jscs throwing error on defalut destructured values and without defaults tests fail\n    let offset = session.offsetDelta || {};\n    let prevDelta = session.prevDelta || {};\n    const prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * @private\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    const pointers = input.pointers.map(({clientX, clientY}) => ({\n        clientX: Math.round(clientX),\n        clientY: Math.round(clientY)\n    }));\n\n    return {\n        timeStamp: Date.now(),\n        pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * @private\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    const {session} = manager;\n    const {pointers} = input;\n    const {length: pointersLength} = pointers;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) session.firstInput = simpleCloneInputData(input);\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    const {firstInput, firstMultiple} = session;\n    const offsetCenter = firstMultiple\n        ? firstMultiple.center\n        : firstInput.center;\n\n    input.center = getCenter(pointers);\n    input.timeStamp = Date.now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, input.center);\n    input.distance = getDistance(offsetCenter, input.center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    const overallVelocity = getVelocity(\n        input.deltaTime,\n        input.deltaX,\n        input.deltaY\n    );\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity =\n        Math.abs(overallVelocity.x) > Math.abs(overallVelocity.y)\n            ? overallVelocity.x\n            : overallVelocity.y;\n\n    input.scale = firstMultiple\n        ? getScale(firstMultiple.pointers, pointers)\n        : 1;\n    input.rotation = firstMultiple\n        ? getRotation(firstMultiple.pointers, pointers)\n        : 0;\n\n    input.maxPointers = !session.prevInput\n        ? input.pointers.length\n        : input.pointers.length > session.prevInput.maxPointers\n        ? input.pointers.length\n        : session.prevInput.maxPointers;\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    input.target = manager.element.contains(input.srcEvent.target)\n        ? input.srcEvent.target\n        : manager.element;\n}\n\n/**\n * @private\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    const pointersLen = input.pointers.length;\n    const changedPointersLen = input.changedPointers.length;\n    const isFirst =\n        eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n    const isFinal =\n        eventType & (INPUT_END | INPUT_CANCEL) &&\n        pointersLen - changedPointersLen === 0;\n\n    input.isFirst = Boolean(isFirst);\n    input.isFinal = Boolean(isFinal);\n\n    if (isFirst) manager.session = {};\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\nconst addEventListeners = (target, types, handler) =>\n    types\n        .trim()\n        .split(/\\s+/g)\n        .forEach((type) => {\n            target.addEventListener(type, handler, false);\n        });\n\nconst removeEventListeners = (target, types, handler) =>\n    types\n        .trim()\n        .split(/\\s+/g)\n        .forEach((type) => {\n            target.removeEventListener(type, handler, false);\n        });\n\n/**\n * @private\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    const {defaultView, parentWindow} = element.ownerDocument || element;\n    return (\n        defaultView || parentWindow || (typeof window !== 'undefined' && window)\n    );\n}\n\n/**\n * @private\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nexport default class Input {\n    constructor(manager) {\n        this.manager = manager;\n        this.callback = inputHandler;\n        this.element = manager.element;\n        this.target = manager.options.inputTarget;\n\n        // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n        // so when disabled the input events are completely bypassed.\n        this.domHandler = (ev) => {\n            if (manager.options.enable) this.handler(ev);\n        };\n    }\n    /**\n     * @private\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler() {}\n\n    /**\n     * @private\n     * bind the events\n     */\n    init() {\n        const {element, evEl, evTarget, evWin, domHandler, target} = this;\n\n        if (evEl) addEventListeners(element, evEl, domHandler);\n\n        if (evTarget) addEventListeners(target, evTarget, domHandler);\n\n        if (evWin) {\n            addEventListeners(getWindowForElement(element), evWin, domHandler);\n        }\n    }\n\n    /**\n     * @private\n     * unbind the events\n     */\n    destroy() {\n        const {element, evEl, evTarget, evWin, domHandler, target} = this;\n\n        if (evEl) removeEventListeners(element, evEl, domHandler);\n\n        if (evTarget) removeEventListeners(target, evTarget, domHandler);\n\n        if (evWin) {\n            removeEventListeners(\n                getWindowForElement(element),\n                evWin,\n                domHandler\n            );\n        }\n    }\n}\n","import Input, {\n    INPUT_CANCEL,\n    INPUT_END,\n    INPUT_MOVE,\n    INPUT_START,\n    INPUT_TYPE_TOUCH,\n    TOUCH_INPUT_MAP\n} from '../Input';\n\n/**\n * @private\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nexport default class TouchInput extends Input {\n    evTarget = 'touchstart touchmove touchend touchcancel';\n    targetIds = {};\n    constructor() {\n        super(...arguments);\n\n        this.init();\n    }\n\n    handler(ev) {\n        const type = TOUCH_INPUT_MAP[ev.type];\n        const touches = this.getTouches(ev, type);\n        if (!touches) return;\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n    getTouches(ev, type) {\n        const allTouches = Array.from(ev.touches);\n        const {targetIds} = this;\n\n        // when there is only one touch, the process can be simplified\n        if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n            targetIds[allTouches[0].identifier] = true;\n            return [allTouches, allTouches];\n        }\n\n        // get target touches from touches\n        const targetTouches = allTouches.filter((touch) =>\n            this.target.contains(touch.target)\n        );\n\n        // collect touches\n        if (type === INPUT_START) {\n            targetTouches.forEach((targetTouch) => {\n                targetIds[targetTouch.identifier] = true;\n            });\n        }\n\n        // filter changed touches to only contain touches that exist in the collected target ids\n        const changedTargetTouches = [];\n        Array.from(ev.changedTouches).forEach((changedTouch) => {\n            if (targetIds[changedTouch.identifier]) {\n                changedTargetTouches.push(changedTouch);\n            }\n\n            // cleanup removed touches\n            if (type & (INPUT_END | INPUT_CANCEL)) {\n                delete targetIds[changedTouch.identifier];\n            }\n        });\n\n        if (!changedTargetTouches.length) return;\n\n        return [\n            targetTouches\n                .concat(changedTargetTouches)\n                .filter(\n                    (item, i, list) =>\n                        list.findIndex(\n                            ({identifier}) => identifier === item.identifier\n                        ) === i\n                ),\n            changedTargetTouches\n        ];\n    }\n}\n","import Input, {\n    INPUT_END,\n    INPUT_MOVE,\n    INPUT_START,\n    INPUT_TYPE_MOUSE\n} from '../Input';\n\nconst MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nconst MOUSE_ELEMENT_EVENTS = 'mousedown';\nconst MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * @private\n * Mouse events input\n * @constructor\n * @extends Input\n */\nexport default class MouseInput extends Input {\n    evEl = MOUSE_ELEMENT_EVENTS;\n    evWin = MOUSE_WINDOW_EVENTS;\n    pressed = false; // mousedown state\n    constructor() {\n        super(...arguments);\n\n        this.init();\n    }\n\n    /**\n     * @private\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler(ev) {\n        let eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) this.pressed = true;\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) eventType = INPUT_END;\n\n        // mouse must be down\n        if (!this.pressed) return;\n\n        if (eventType & INPUT_END) this.pressed = false;\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n}\n","import Input, {\n    INPUT_CANCEL,\n    INPUT_END,\n    INPUT_MOVE,\n    INPUT_START,\n    INPUT_TYPE_TOUCH\n} from '../Input';\n\nconst POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\nconst POINTER_ELEMENT_EVENTS = 'pointerdown';\nconst POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n/**\n * @private\n * Pointer events input\n * @constructor\n * @extends Input\n */\nexport default class PointerEventInput extends Input {\n    evEl = POINTER_ELEMENT_EVENTS;\n    evWin = POINTER_WINDOW_EVENTS;\n    constructor() {\n        super(...arguments);\n\n        this.store = this.manager.session.pointerEvents = [];\n\n        this.init();\n    }\n\n    /**\n     * @private\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler(ev) {\n        const {store} = this;\n        let removePointer = false;\n\n        const eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        const eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        const pointerType = ev.pointerType;\n\n        const isTouch = pointerType === INPUT_TYPE_TOUCH;\n\n        // get index of the event in the store\n        let storeIndex = store.findIndex(\n            ({pointerId}) => pointerId === ev.pointerId\n        );\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) return;\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType,\n            srcEvent: ev\n        });\n\n        // remove from the store\n        if (removePointer) store.splice(storeIndex, 1);\n    }\n}\n","import Input, {\n    INPUT_CANCEL,\n    INPUT_END,\n    INPUT_START,\n    INPUT_TYPE_MOUSE,\n    INPUT_TYPE_TOUCH\n} from '../Input';\nimport MouseInput from './mouse';\nimport TouchInput from './touch';\n\n/**\n * @private\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nconst DEDUP_TIMEOUT = 2500;\nconst DEDUP_DISTANCE = 25;\n\nexport default class TouchMouseInput extends Input {\n    primaryTouch = null;\n    lastTouches = [];\n    constructor() {\n        super(...arguments);\n\n        this.touch = new TouchInput(this.manager, this.handler);\n        this.mouse = new MouseInput(this.manager, this.handler);\n\n        this.init();\n    }\n\n    /**\n     * @private\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler = (manager, inputEvent, inputData) => {\n        const isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;\n        const isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;\n\n        if (\n            isMouse &&\n            inputData.sourceCapabilities &&\n            inputData.sourceCapabilities.firesTouchEvents\n        ) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            if (inputEvent & INPUT_START) {\n                this.primaryTouch = inputData.changedPointers[0].identifier;\n                this.setLastTouch(inputData);\n            } else if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n                this.setLastTouch(inputData);\n            }\n        } else if (isMouse && this.isSyntheticEvent(inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    };\n\n    /**\n     * @private\n     * remove the event listeners\n     */\n    destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n\n    isSyntheticEvent({srcEvent: {clientX, clientY}}) {\n        return this.lastTouches.some(\n            ({x, y}) =>\n                Math.abs(clientX - x) <= DEDUP_DISTANCE &&\n                Math.abs(clientY - y) <= DEDUP_DISTANCE\n        );\n    }\n\n    setLastTouch({changedPointers: [{identifier, clientX, clientY}]}) {\n        if (identifier === this.primaryTouch) {\n            const lastTouch = {x: clientX, y: clientY};\n            this.lastTouches.push(lastTouch);\n            const lts = this.lastTouches;\n            setTimeout(() => {\n                const i = lts.indexOf(lastTouch);\n                if (i > -1) lts.splice(i, 1);\n            }, DEDUP_TIMEOUT);\n        }\n    }\n}\n","export const STATE_POSSIBLE = 1;\nexport const STATE_BEGAN = 2;\nexport const STATE_CHANGED = 4;\nexport const STATE_ENDED = 8;\nexport const STATE_RECOGNIZED = STATE_ENDED;\nexport const STATE_CANCELLED = 16;\nexport const STATE_FAILED = 32;\n\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) return 'cancel';\n\n    if (state & STATE_ENDED) return 'end';\n\n    if (state & STATE_CHANGED) return 'move';\n\n    if (state & STATE_BEGAN) return 'start';\n\n    return '';\n}\n\n/**\n * @private\n * get a unique id\n * @returns {number} uniqueId\n */\nlet _uniqueId = 1;\nconst uniqueId = () => _uniqueId++;\n\n/**\n * @private\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n\n/**\n * @private\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nexport default class Recognizer {\n    id = uniqueId();\n    manager = null;\n    state = STATE_POSSIBLE;\n    simultaneous = {};\n    requireFail = [];\n    constructor(options) {\n        this.options = {...this.defaults, ...options};\n        this.options.enable = this.options.enable ?? true;\n    }\n\n    /**\n     * @private\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set(options) {\n        Object.assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        if (this.manager) this.manager.touchAction.update();\n\n        return this;\n    }\n\n    /**\n     * @private\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit(input) {\n        const {manager, options, state} = this;\n\n        const emit = (event) => manager.emit(event, input);\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) emit(options.event + stateStr(state));\n\n        emit(this.options.event); // simple 'eventName' events\n\n        // additional event(panleft, panright, pinchin, pinchout...)\n        if (input.additionalEvent) emit(input.additionalEvent);\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) emit(options.event + stateStr(state));\n    }\n\n    /**\n     * @private\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n\n        // is is enabled and allow recognizing?\n        if (!this.options.enable) {\n            this.reset();\n            this.state = STATE_FAILED;\n\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        const inputDataClone = {...inputData};\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (\n            this.state &\n            (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)\n        ) {\n            this.emit(inputDataClone);\n        }\n    }\n\n    /**\n     * @private\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {constant} STATE\n     */\n\n    /* jshint ignore:start */\n    process() {}\n    /* jshint ignore:end */\n\n    /**\n     * @private\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction() {}\n\n    /**\n     * @private\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset() {}\n}\n","const VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n/**\n * @private\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nexport default function prefixed(obj, property) {\n    const camelProp = property[0].toUpperCase() + property.slice(1);\n\n    return VENDOR_PREFIXES.find(\n        (prefix) => (prefix ? prefix + camelProp : property) in obj\n    );\n}\n","import {DIRECTION_HORIZONTAL, DIRECTION_VERTICAL} from './Input';\nimport prefixed from './utils/prefixed';\n\nconst PREFIXED_TOUCH_ACTION =\n    typeof document !== 'undefined' &&\n    prefixed(document.createElement('div').style, 'touchAction');\n\n// magical touchAction value\nexport const TOUCH_ACTION_COMPUTE = 'compute';\nexport const TOUCH_ACTION_AUTO = 'auto';\nexport const TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nexport const TOUCH_ACTION_PAN_X = 'pan-x';\nexport const TOUCH_ACTION_PAN_Y = 'pan-y';\nexport const TOUCH_ACTION_NONE = 'none';\nconst actions = [\n    'auto',\n    'manipulation',\n    'pan-y',\n    'pan-x',\n    'pan-x pan-y',\n    'none'\n];\nconst cssSupports = typeof window !== 'undefined' && window.CSS?.supports;\nconst TOUCH_ACTION_MAP =\n    PREFIXED_TOUCH_ACTION &&\n    actions.reduce((touchMap, val) => {\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? cssSupports('touch-action', val) : true;\n\n        return touchMap;\n    }, {});\n\nfunction cleanTouchActions(actions) {\n    // none\n    if (actions.includes(TOUCH_ACTION_NONE)) return TOUCH_ACTION_NONE;\n\n    const hasPanX = actions.includes(TOUCH_ACTION_PAN_X);\n    const hasPanY = actions.includes(TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) return TOUCH_ACTION_NONE;\n\n    // pan-x OR pan-y\n    if (hasPanX) return TOUCH_ACTION_PAN_X;\n\n    if (hasPanY) return TOUCH_ACTION_PAN_Y;\n\n    // manipulation\n    const hasManipulation = actions.includes(TOUCH_ACTION_MANIPULATION);\n    if (hasManipulation) return TOUCH_ACTION_MANIPULATION;\n\n    return TOUCH_ACTION_AUTO;\n}\n\n/**\n * @private\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nexport default class TouchAction {\n    constructor(manager, value) {\n        this.manager = manager;\n        this.set(value);\n    }\n\n    /**\n     * @private\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set(value) {\n        // find out the touch-action by the event handlers\n        if (value === TOUCH_ACTION_COMPUTE) value = this.compute();\n\n        if (\n            PREFIXED_TOUCH_ACTION &&\n            this.manager.element.style &&\n            TOUCH_ACTION_MAP[value]\n        ) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    }\n\n    /**\n     * @private\n     * just re-set the touchAction value\n     */\n    update() {\n        this.set(this.manager.options.touchAction);\n    }\n\n    /**\n     * @private\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute() {\n        return cleanTouchActions(\n            this.manager.recognizers\n                .reduce(\n                    (actions, recognizer) =>\n                        recognizer.options.enable\n                            ? actions.concat(recognizer.getTouchAction())\n                            : actions,\n                    []\n                )\n                .join(' ')\n        );\n    }\n\n    /**\n     * @private\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults({\n        srcEvent,\n        pointers,\n        distance,\n        deltaTime,\n        offsetDirection\n    }) {\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) return srcEvent.preventDefault();\n\n        const hasNone =\n            this.actions.includes(TOUCH_ACTION_NONE) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n\n        // do not prevent defaults if this is a tap gesture\n        if (hasNone && pointers.length === 1 && distance < 2 && deltaTime < 250)\n            return;\n\n        const hasPanY =\n            this.actions.includes(TOUCH_ACTION_PAN_Y) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        const hasPanX =\n            this.actions.includes(TOUCH_ACTION_PAN_X) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n        if (hasPanX && hasPanY) return;\n\n        if (\n            hasNone ||\n            (hasPanY && offsetDirection & DIRECTION_HORIZONTAL) ||\n            (hasPanX && offsetDirection & DIRECTION_VERTICAL)\n        ) {\n            this.manager.session.prevented = true;\n            srcEvent.preventDefault();\n        }\n    }\n}\n","import MouseInput from './input/mouse';\nimport PointerEventInput from './input/pointerevent';\nimport TouchInput from './input/touch';\nimport TouchMouseInput from './input/touchmouse';\nimport Recognizer, {\n    STATE_BEGAN,\n    STATE_CHANGED,\n    STATE_ENDED,\n    STATE_RECOGNIZED\n} from './Recognizer';\nimport TouchAction, {TOUCH_ACTION_COMPUTE} from './TouchAction';\nimport prefixed from './utils/prefixed';\n\nconst SUPPORT_TOUCH = typeof window !== 'undefined' && 'ontouchstart' in window;\nconst SUPPORT_ONLY_TOUCH =\n    SUPPORT_TOUCH &&\n    /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent);\nconst SUPPORT_POINTER_EVENTS =\n    typeof window !== 'undefined' && Boolean(prefixed(window, 'PointerEvent'));\n\n/**\n * @private\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    const {inputClass} = manager.options;\n\n    if (inputClass) return new inputClass(manager);\n\n    if (SUPPORT_POINTER_EVENTS) return new PointerEventInput(manager);\n\n    if (SUPPORT_ONLY_TOUCH) return new TouchInput(manager);\n\n    if (!SUPPORT_TOUCH) return new MouseInput(manager);\n\n    return new TouchMouseInput(manager);\n}\n\nconst defaults = {\n    /**\n     * @private\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * @private\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @private\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * @private\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * @private\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * @private\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * @private\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * @private\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * @private\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * @private\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * @private\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\n/**\n * @private\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nexport default class Manager {\n    handlers = {};\n    session = {};\n    recognizers = [];\n    oldCssProps = {};\n    constructor(element, options) {\n        this.options = {...defaults, ...options};\n        this.options.inputTarget = this.options.inputTarget || element;\n\n        this.element = element;\n        this.input = createInputInstance(this);\n        this.touchAction = new TouchAction(this, this.options.touchAction);\n\n        this.toggleCssProps(true);\n\n        this.options.recognizers.forEach(({0: ctor, 1: opts}) => {\n            this.add(new ctor(opts));\n        }, this);\n    }\n\n    /**\n     * @private\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set(options) {\n        Object.assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) this.touchAction.update();\n\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n\n        return this;\n    }\n\n    /**\n     * @private\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize(inputData) {\n        const {session} = this;\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        let {curRecognizer} = session;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (\n            !curRecognizer ||\n            (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)\n        ) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        this.recognizers.forEach((recognizer) => {\n            // find out if we are allowed try to recognize the input for this one.\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            if (!curRecognizer || recognizer === curRecognizer) {\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (\n                !curRecognizer &&\n                recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)\n            ) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n        });\n    }\n\n    /**\n     * @private\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|undefined}\n     */\n    get(recognizer) {\n        return recognizer instanceof Recognizer\n            ? recognizer\n            : this.recognizers.find(\n                  (recogger) => recogger.options.event === recognizer\n              );\n    }\n\n    /**\n     * @private add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add(recognizer) {\n        // remove existing\n        const existing = this.get(recognizer.options.event);\n        if (existing) this.remove(existing);\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n\n        return recognizer;\n    }\n\n    /**\n     * @private\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove(recognizer) {\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            const index = this.recognizers.indexOf(recognizer);\n\n            if (index !== -1) {\n                this.recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @private\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on(events, handler) {\n        if (events === undefined || handler === undefined) return;\n\n        const {handlers} = this;\n        events\n            .trim()\n            .split(/\\s+/g)\n            .forEach((event) => {\n                handlers[event] = handlers[event] || [];\n                handlers[event].push(handler);\n            });\n\n        return this;\n    }\n\n    /**\n     * @private unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off(events, handler) {\n        if (events === undefined) return;\n\n        events\n            .trim()\n            .split(/\\s+/g)\n            .forEach((event) => {\n                if (!handler) {\n                    delete this.handlers[event];\n                } else if (this.handlers[event]) {\n                    this.handlers[event].splice(\n                        this.handlers[event].indexOf(handler),\n                        1\n                    );\n                }\n            });\n\n        return this;\n    }\n\n    /**\n     * @private emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) triggerDomEvent(event, data);\n\n        // no handlers, so skip it all\n        const handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) return;\n\n        data.type = event;\n        data.preventDefault = () => {\n            data.srcEvent.preventDefault();\n        };\n\n        handlers.forEach((handler) => {\n            handler(data);\n        });\n    }\n\n    /**\n     * @private\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy() {\n        if (this.element) this.toggleCssProps(false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n    toggleCssProps(add) {\n        const {element} = this;\n        if (!element.style) return;\n\n        Object.entries(this.options.cssProps).forEach(({0: value, 1: name}) => {\n            const prop = prefixed(element.style, name);\n            if (add) {\n                this.oldCssProps[prop] = element.style[prop];\n                element.style[prop] = value;\n            } else {\n                element.style[prop] = this.oldCssProps[prop] || '';\n            }\n        });\n        if (!add) this.oldCssProps = {};\n    }\n}\n\n/**\n * @private\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    const gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n","import {INPUT_CANCEL, INPUT_END} from '../Input';\nimport Recognizer, {\n    STATE_BEGAN,\n    STATE_CANCELLED,\n    STATE_CHANGED,\n    STATE_ENDED,\n    STATE_FAILED\n} from '../Recognizer';\n\n/**\n * @private\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nexport default class AttrRecognizer extends Recognizer {\n    /**\n     * @private\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest(input) {\n        const optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    }\n\n    /**\n     * @private\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process(input) {\n        const {state} = this;\n\n        const isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        const isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (input.eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        }\n        if (isRecognized || isValid) {\n            if (input.eventType & INPUT_END) return state | STATE_ENDED;\n\n            if (!(state & STATE_BEGAN)) return STATE_BEGAN;\n\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n}\n\nAttrRecognizer.prototype.defaults = {\n    /**\n     * @private\n     * @type {Number}\n     * @default 1\n     */\n    pointers: 1\n};\n","import {\n    directionStr,\n    DIRECTION_ALL,\n    DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL,\n    DIRECTION_LEFT,\n    DIRECTION_NONE,\n    DIRECTION_RIGHT,\n    DIRECTION_UP,\n    DIRECTION_VERTICAL\n} from '../Input';\nimport {STATE_BEGAN} from '../Recognizer';\nimport {TOUCH_ACTION_PAN_X, TOUCH_ACTION_PAN_Y} from '../TouchAction';\nimport AttrRecognizer from './attribute';\n\n/**\n * @private\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nexport default class PanRecognizer extends AttrRecognizer {\n    pX = null;\n    pY = null;\n\n    getTouchAction() {\n        const {\n            options: {direction}\n        } = this;\n\n        const actions = [];\n        if (direction & DIRECTION_HORIZONTAL) actions.push(TOUCH_ACTION_PAN_Y);\n        if (direction & DIRECTION_VERTICAL) actions.push(TOUCH_ACTION_PAN_X);\n\n        return actions;\n    }\n\n    directionTest(input) {\n        const {options} = this;\n\n        const {deltaX, deltaY} = input;\n        let {distance} = input;\n\n        // lock to axis?\n        let hasMoved = true;\n        if (!(input.direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                input.direction =\n                    deltaX === 0\n                        ? DIRECTION_NONE\n                        : deltaX < 0\n                        ? DIRECTION_LEFT\n                        : DIRECTION_RIGHT;\n                hasMoved = deltaX !== this.pX;\n                distance = Math.abs(deltaX);\n            } else {\n                input.direction =\n                    deltaY === 0\n                        ? DIRECTION_NONE\n                        : deltaY < 0\n                        ? DIRECTION_UP\n                        : DIRECTION_DOWN;\n                hasMoved = deltaY !== this.pY;\n                distance = Math.abs(deltaY);\n            }\n        }\n\n        return (\n            hasMoved &&\n            distance > options.threshold &&\n            input.direction & options.direction\n        );\n    }\n\n    attrTest(input) {\n        return (\n            super.attrTest(input) &&\n            (this.state & STATE_BEGAN ||\n                (!(this.state & STATE_BEGAN) && this.directionTest(input)))\n        );\n    }\n\n    emit(input) {\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        const direction = directionStr(input.direction);\n        if (direction) input.additionalEvent = this.options.event + direction;\n\n        super.emit(input);\n    }\n}\n\nPanRecognizer.prototype.defaults = {\n    event: 'pan',\n    threshold: 10,\n    pointers: 1,\n    direction: DIRECTION_ALL\n};\n","import {STATE_BEGAN} from '../Recognizer';\nimport {TOUCH_ACTION_NONE} from '../TouchAction';\nimport AttrRecognizer from './attribute';\n\n/**\n * @private\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nexport default class PinchRecognizer extends AttrRecognizer {\n    getTouchAction() {\n        return [TOUCH_ACTION_NONE];\n    }\n\n    attrTest(input) {\n        return (\n            super.attrTest(input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold ||\n                this.state & STATE_BEGAN)\n        );\n    }\n\n    emit(input) {\n        if (input.scale !== 1) {\n            const inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        super.emit(input);\n    }\n}\n\nPinchRecognizer.prototype.defaults = {\n    event: 'pinch',\n    threshold: 0,\n    pointers: 2\n};\n","import {INPUT_CANCEL, INPUT_END, INPUT_START} from '../Input';\nimport Recognizer, {\n    STATE_FAILED,\n    STATE_POSSIBLE,\n    STATE_RECOGNIZED\n} from '../Recognizer';\nimport {TOUCH_ACTION_AUTO} from '../TouchAction';\n\n/**\n * @private\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nexport default class PressRecognizer extends Recognizer {\n    _timer = null;\n    _input = null;\n\n    getTouchAction() {\n        return [TOUCH_ACTION_AUTO];\n    }\n\n    process(input) {\n        const {options} = this;\n\n        const validPointers = input.pointers.length === options.pointers;\n        const validMovement = input.distance < options.threshold;\n        const validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (\n            !validMovement ||\n            !validPointers ||\n            (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)\n        ) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeout(() => {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    }\n\n    reset() {\n        clearTimeout(this._timer);\n    }\n\n    emit(input) {\n        if (this.state !== STATE_RECOGNIZED) return;\n\n        if (input && input.eventType & INPUT_END) {\n            this.manager.emit(`${this.options.event}up`, input);\n        } else {\n            this._input.timeStamp = Date.now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n    /**\n     * @private\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit(input) {\n        if (this.canEmit()) return this.emit(input);\n\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    }\n\n    /**\n     * @private\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit() {\n        let i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE)))\n                return false;\n\n            i++;\n        }\n        return true;\n    }\n}\n\nPressRecognizer.prototype.defaults = {\n    event: 'press',\n    pointers: 1,\n    time: 251, // minimal time of the pointer to be pressed\n    threshold: 9 // a minimal movement is ok, but keep it low\n};\n","import {getDistance, INPUT_END, INPUT_START} from '../Input';\nimport Recognizer, {STATE_FAILED, STATE_RECOGNIZED} from '../Recognizer';\nimport {TOUCH_ACTION_MANIPULATION} from '../TouchAction';\n\n/**\n * @private\n * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nexport default class TapRecognizer extends Recognizer {\n    // previous time and center,\n    // used for tap counting\n    pTime = false;\n    pCenter = false;\n    _timer = null;\n    _input = null;\n    count = 0;\n\n    getTouchAction() {\n        return [TOUCH_ACTION_MANIPULATION];\n    }\n\n    process(input) {\n        const {options} = this;\n\n        const validPointers = input.pointers.length === options.pointers;\n        const validMovement = input.distance < options.threshold;\n        const validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if (input.eventType & INPUT_START && this.count === 0) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType !== INPUT_END) return this.failTimeout();\n\n            const validInterval = this.pTime\n                ? input.timeStamp - this.pTime < options.interval\n                : true;\n            const validMultiTap =\n                !this.pCenter ||\n                getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            this.count = !validMultiTap || !validInterval ? 1 : this.count + 1;\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            if (this.count % options.taps === 0) return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    }\n\n    failTimeout() {\n        this._timer = setTimeout(() => {\n            this.state = STATE_FAILED;\n        }, this.options.interval);\n        return STATE_FAILED;\n    }\n\n    reset() {\n        clearTimeout(this._timer);\n    }\n\n    emit() {\n        if (this.state === STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n}\n\nTapRecognizer.prototype.defaults = {\n    event: 'tap',\n    pointers: 1,\n    taps: 1,\n    interval: 300, // max time between the multi-tap taps\n    time: 250, // max time of the pointer to be down (like finger on the screen)\n    threshold: 9, // a minimal movement is ok, but keep it low\n    posThreshold: 10 // a multi-tap can be a bit off the initial position\n};\n","import Animation from './animation';\nimport PageSpread from './page_spread';\nimport {\n    DIRECTION_ALL,\n    DIRECTION_LEFT,\n    DIRECTION_RIGHT\n} from './vendor/hammer/Input';\nimport TouchInput from './vendor/hammer/input/touch';\nimport Manager from './vendor/hammer/Manager';\nimport PanRecognizer from './vendor/hammer/recognizers/pan';\nimport PinchRecognizer from './vendor/hammer/recognizers/pinch';\nimport PressRecognizer from './vendor/hammer/recognizers/press';\nimport TapRecognizer from './vendor/hammer/recognizers/tap';\nimport './verso.styl';\n\nconst getHammerInputClass = () =>\n    typeof window !== 'undefined' &&\n    'ontouchstart' in window &&\n    /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent)\n        ? TouchInput\n        : null;\n\nconst buildPageIds = (pageSpreads: PageSpread[]) =>\n    pageSpreads.reduce<Record<PageSpread['pageIds'][number], PageSpread>>(\n        (pageIds, pageSpread) => {\n            pageSpread.options.pageIds.forEach((pageId) => {\n                pageIds[pageId] = pageSpread;\n            });\n\n            return pageIds;\n        },\n        {}\n    );\n\nconst clipCoordinate = (\n    coordinate: number,\n    scale: number,\n    size: number,\n    offset: number\n) =>\n    size * scale < 100\n        ? offset * -scale + 50 - (size * scale) / 2\n        : Math.max(\n              Math.min(coordinate, offset * -scale),\n              offset * -scale - size * scale + 100\n          );\n\nfunction getPageSpreadBounds(pageSpread: PageSpread) {\n    const pageSpreadRect = pageSpread.getRect();\n    const pageSpreadContentRect = pageSpread.getContentRect();\n\n    return {\n        left:\n            ((pageSpreadContentRect.left - pageSpreadRect.left) /\n                pageSpreadRect.width) *\n            100,\n        top:\n            ((pageSpreadContentRect.top - pageSpreadRect.top) /\n                pageSpreadRect.height) *\n            100,\n        width: (pageSpreadContentRect.width / pageSpreadRect.width) * 100,\n        height: (pageSpreadContentRect.height / pageSpreadRect.height) * 100,\n        pageSpreadRect,\n        pageSpreadContentRect\n    };\n}\n\nfunction isCoordinateInsideElement(x: number, y: number, el: HTMLElement) {\n    const {left, right, top, bottom} = el.getBoundingClientRect();\n\n    return x >= left && x <= right && y >= top && y <= bottom;\n}\n\nfunction traversePageSpreads(els: NodeListOf<HTMLElement>) {\n    const pageSpreads: PageSpread[] = [];\n    let left = 0;\n\n    for (let i = 0; i < els.length; i++) {\n        const el = els[i];\n        const width = Number(el.dataset.width ?? 100);\n        const pageSpread = new PageSpread(el, {\n            id: el.dataset.id,\n            type: el.dataset.type,\n            pageIds: el.dataset.pageIds?.split(',') || [],\n            maxZoomScale: Number(el.dataset.maxZoomScale ?? 1),\n            width,\n            left\n        });\n\n        left += width;\n\n        pageSpreads.push(pageSpread);\n    }\n\n    return pageSpreads;\n}\n\ninterface VersoInit {\n    swipeVelocity?: number;\n    swipeThreshold?: number;\n    navigationDuration?: number;\n    navigationPanDuration?: number;\n    zoomDuration?: number;\n    doubleTapDelay?: number;\n    pageId?: string;\n}\nexport default class Verso {\n    position = -1;\n    pinching = false;\n    panning = false;\n    transform = {left: 0, top: 0, scale: 1};\n    startTransform = {left: 0, top: 0, scale: 1};\n    started = false;\n    destroyed = false;\n    _events = {};\n    el: HTMLElement;\n    scrollerEl: HTMLElement;\n    pageSpreadEls: NodeListOf<HTMLElement>;\n    pageSpreads: PageSpread[];\n    pageIds: Record<PageSpread['pageIds'][number], PageSpread>;\n    options: VersoInit;\n    swipeVelocity: number;\n    swipeThreshold: number;\n    navigationDuration: number;\n    navigationPanDuration: number;\n    zoomDuration: number;\n    tap: {count: number; delay: number; timeout?: NodeJS.Timeout};\n    animation: Animation;\n    hammer: Manager;\n    constructor(el: HTMLElement, options: VersoInit = {}) {\n        this.el = el;\n        this.options = options;\n        this.swipeVelocity = this.options.swipeVelocity ?? 0.3;\n        this.swipeThreshold = this.options.swipeThreshold ?? 10;\n        this.navigationDuration = this.options.navigationDuration ?? 240;\n        this.navigationPanDuration = this.options.navigationPanDuration ?? 200;\n        this.zoomDuration = this.options.zoomDuration ?? 200;\n\n        this.tap = {\n            count: 0,\n            delay: this.options.doubleTapDelay ?? 300,\n            timeout: undefined\n        };\n    }\n    bind(event, fn) {\n        this._events[event] = this._events[event] || [];\n        return this._events[event].push(fn);\n    }\n\n    unbind(event, fn) {\n        if (this._events[event]) {\n            return this._events[event].splice(\n                this._events[event].indexOf(fn),\n                1\n            );\n        }\n    }\n\n    trigger(event, ...args) {\n        this._events[event]?.forEach((e) => {\n            e.apply(this, args);\n        });\n    }\n\n    start() {\n        this.scrollerEl = this.el.querySelector('.verso__scroller')!;\n        this.pageSpreadEls = this.el.querySelectorAll('.verso__page-spread');\n        this.pageSpreads = traversePageSpreads(this.pageSpreadEls);\n        this.pageIds = buildPageIds(this.pageSpreads);\n        this.animation = new Animation(this.scrollerEl);\n        this.hammer = new Manager(this.scrollerEl, {\n            touchAction: 'none',\n            enable: false,\n            inputClass: getHammerInputClass(),\n            recognizers: [\n                [PanRecognizer, {threshold: 5, direction: DIRECTION_ALL}],\n                [TapRecognizer, {event: 'singletap', interval: 0}],\n                [PinchRecognizer],\n                [PressRecognizer, {time: 500}]\n            ]\n        });\n\n        //@ts-expect-error\n        this.hammer.on('panstart', this.onPanStart);\n        //@ts-expect-error\n        this.hammer.on('panmove', this.onPanMove);\n        //@ts-expect-error\n        this.hammer.on('panend', this.onPanEnd);\n        //@ts-expect-error\n        this.hammer.on('pancancel', this.onPanEnd);\n        //@ts-expect-error\n        this.hammer.on('singletap', this.onSingletap);\n        //@ts-expect-error\n        this.hammer.on('pinchstart', this.onPinchStart);\n        //@ts-expect-error\n        this.hammer.on('pinchmove', this.onPinchMove);\n        //@ts-expect-error\n        this.hammer.on('pinchend', this.onPinchEnd);\n        //@ts-expect-error\n        this.hammer.on('pinchcancel', this.onPinchEnd);\n        //@ts-expect-error\n        this.hammer.on('press', this.onPress);\n\n        this.scrollerEl.addEventListener(\n            'contextmenu',\n            this.onContextmenu,\n            false\n        );\n        this.scrollerEl.addEventListener('wheel', this.onWheel, false);\n        const pageId =\n            this.getPageSpreadPositionFromPageId(this.options.pageId!) ?? 0;\n\n        //@ts-expect-error\n        this.hammer.set({enable: true});\n        this.started = true;\n        this.destroyed = false;\n        this.navigateTo(pageId, {duration: 0});\n\n        this.el.addEventListener('touchstart', this.onTouchStart, false);\n        this.el.addEventListener('touchend', this.onTouchEnd, false);\n\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this.onResize, false);\n        }\n\n        return this;\n    }\n\n    destroy() {\n        if (!this.started) {\n            return console.warn(\n                \"You've called .destroy() on a viewer that was not started yet, this is a no-op.\"\n            );\n        }\n        if (this.destroyed) {\n            return console.warn(\n                \"You've called .destroy() on a viewer that has already been destroyed and not restarted, this is a no-op.\"\n            );\n        }\n        this.scrollerEl.removeEventListener('contextmenu', this.onContextmenu);\n        this.scrollerEl.removeEventListener('wheel', this.onWheel);\n\n        //@ts-expect-error\n        this.hammer.destroy();\n\n        this.el.removeEventListener('touchstart', this.onTouchStart);\n        this.el.removeEventListener('touchend', this.onTouchEnd);\n\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this.onResize);\n        }\n\n        this.started = false;\n        this.destroyed = true;\n        return this;\n    }\n\n    first(options?: Parameters<typeof this.navigateTo>[1]) {\n        return this.navigateTo(0, options);\n    }\n\n    prev(options?: Parameters<typeof this.navigateTo>[1]) {\n        return this.navigateTo(this.getPosition() - 1, options);\n    }\n\n    next(options?: Parameters<typeof this.navigateTo>[1]) {\n        return this.navigateTo(this.getPosition() + 1, options);\n    }\n\n    last(options?: Parameters<typeof this.navigateTo>[1]) {\n        return this.navigateTo(this.getPageSpreadCount() - 1, options);\n    }\n\n    navigateTo(\n        newPosition: number,\n        options?: {duration?: number; velocity?: number}\n    ) {\n        if (this.destroyed) {\n            return console.warn(`\\ \nYou've called a navigation method on a viewer that was previously destroyed, this is a no-op.\nPlease call viewer.start() again, if you want to reuse this Viewer instance.\n\nYou might have forgotten to remove an event handler that\ncalls first/prev/next/last/navigateTo on the viewer.\\\n`);\n        }\n        if (!this.started) {\n            return console.warn(`\nYou've called a navigation method on a viewer that hasn't been started yet, this is a no-op.\nPlease call viewer.start() first.\n\nYou might have forgotten to remove an event handler that\ncalls .first()/.prev()/.next()/.last()/.navigateTo() on the viewer.\n`);\n        }\n\n        if (newPosition < 0 || newPosition > this.getPageSpreadCount() - 1) {\n            return;\n        }\n\n        const currentPosition = this.getPosition();\n        const currentPageSpread =\n            this.getPageSpreadFromPosition(currentPosition);\n        const activePageSpread = this.getPageSpreadFromPosition(newPosition);\n        let carousel = this.getCarouselFromPageSpread(activePageSpread);\n        const velocity = options?.velocity ?? 1;\n        let duration = options?.duration ?? this.navigationDuration;\n        duration = duration / Math.abs(velocity);\n        const touchAction = activePageSpread.isScrollable() ? 'pan-y' : 'none';\n\n        currentPageSpread?.deactivate();\n        activePageSpread.activate();\n\n        carousel.visible.forEach((pageSpread) => {\n            pageSpread.position().setVisibility('visible');\n        });\n        //@ts-expect-error\n        this.hammer.set({touchAction});\n\n        this.transform.left = this.getLeftTransformFromPageSpread(\n            newPosition,\n            activePageSpread\n        );\n        this.setPosition(newPosition);\n\n        if (this.transform.scale > 1) {\n            this.transform.top = 0;\n            this.transform.scale = 1;\n\n            this.trigger('zoomedOut', {position: currentPosition});\n        }\n\n        this.trigger('beforeNavigation', {currentPosition, newPosition});\n\n        this.animation.animate({x: this.transform.left + '%', duration}, () => {\n            carousel = this.getCarouselFromPageSpread(\n                this.getActivePageSpread()\n            );\n\n            carousel.gone.forEach((pageSpread) => {\n                pageSpread.setVisibility('gone');\n            });\n\n            this.trigger('afterNavigation', {\n                newPosition: this.getPosition(),\n                previousPosition: currentPosition\n            });\n        });\n    }\n\n    getPosition() {\n        return this.position;\n    }\n\n    setPosition(position: number) {\n        this.position = position;\n\n        return this;\n    }\n\n    getLeftTransformFromPageSpread(position: number, pageSpread: PageSpread) {\n        if (position === this.getPageSpreadCount() - 1) {\n            return 100 - pageSpread.getWidth() - pageSpread.getLeft();\n        }\n        if (position > 0) {\n            return (100 - pageSpread.getWidth()) / 2 - pageSpread.getLeft();\n        }\n\n        return 0;\n    }\n\n    getCarouselFromPageSpread(pageSpreadSubject: PageSpread) {\n        const carousel: {visible: PageSpread[]; gone: PageSpread[]} = {\n            visible: [],\n            gone: []\n        };\n\n        // Identify the page spreads that should be a part of the carousel.\n        this.pageSpreads.forEach((pageSpread) => {\n            let visible = false;\n\n            if (pageSpread.getLeft() <= pageSpreadSubject.getLeft()) {\n                if (\n                    pageSpread.getLeft() + pageSpread.getWidth() >\n                    pageSpreadSubject.getLeft() - 100\n                ) {\n                    visible = true;\n                }\n            } else {\n                if (\n                    pageSpread.getLeft() - pageSpread.getWidth() <\n                    pageSpreadSubject.getLeft() + 100\n                ) {\n                    visible = true;\n                }\n            }\n\n            if (visible) {\n                carousel.visible.push(pageSpread);\n            } else {\n                carousel.gone.push(pageSpread);\n            }\n        });\n\n        return carousel;\n    }\n\n    getCoordinateInfo(x: number, y: number, pageSpread: PageSpread) {\n        x -= this.el.offsetLeft;\n        y -= this.el.offsetTop;\n        const info = {\n            x,\n            y,\n            contentX: 0,\n            contentY: 0,\n            pageX: 0,\n            pageY: 0,\n            overlayEls: [] as HTMLElement[],\n            pageEl: null as null | HTMLElement,\n            isInsideContentX: false,\n            isInsideContentY: false,\n            isInsideContent: false\n        };\n\n        const overlayEls = pageSpread.getOverlayEls();\n        for (let idx = 0; idx < overlayEls.length; idx++) {\n            const overlayEl = overlayEls[idx];\n            if (isCoordinateInsideElement(x, y, overlayEl)) {\n                info.overlayEls.push(overlayEl);\n            }\n        }\n\n        const pageEls = pageSpread.getPageEls();\n        for (let idx = 0; idx < pageEls.length; idx++) {\n            const pageEl = pageEls[idx];\n            if (isCoordinateInsideElement(x, y, pageEl)) {\n                info.pageEl = pageEl;\n                break;\n            }\n        }\n\n        const contentRect = pageSpread.getContentRect();\n        info.contentX =\n            (x - contentRect.left!) / Math.max(1, contentRect.width!);\n        info.contentY =\n            (y - contentRect.top!) / Math.max(1, contentRect.height!);\n\n        if (info.pageEl) {\n            info.isInsideContentX = info.contentX >= 0 && info.contentX <= 1;\n            info.isInsideContentY = info.contentY >= 0 && info.contentY <= 1;\n            info.isInsideContent =\n                info.isInsideContentX && info.isInsideContentY;\n        }\n\n        return info;\n    }\n\n    getPageSpreadCount() {\n        return this.pageSpreads.length;\n    }\n\n    getActivePageSpread() {\n        return this.getPageSpreadFromPosition(this.getPosition());\n    }\n\n    getPageSpreadFromPosition(position: number) {\n        return this.pageSpreads[position];\n    }\n\n    getPageSpreadPositionFromPageId(pageId: string) {\n        for (let idx = 0; idx < this.pageSpreads.length; idx++) {\n            const pageSpread = this.pageSpreads[idx];\n\n            if (pageSpread.options.pageIds.indexOf(pageId) > -1) return idx;\n        }\n    }\n\n    zoomTo(\n        //@ts-expect-error\n        {\n            duration,\n            easing,\n            scale,\n            x = 0,\n            y = 0,\n            bounds\n        }: {\n            duration?: number;\n            easing?: string;\n            scale: number;\n            x: number;\n            y: number;\n            bounds?: boolean;\n        } = {},\n        callback?: () => void\n    ) {\n        const curScale = this.transform.scale;\n        const activePageSpread = this.getActivePageSpread();\n        const {left, top, width, height, pageSpreadRect} =\n            getPageSpreadBounds(activePageSpread);\n        const carouselOffset = activePageSpread.getLeft();\n        const carouselScaledOffset = carouselOffset * curScale;\n\n        if (scale !== 1) {\n            x -= pageSpreadRect.left;\n            y -= pageSpreadRect.top;\n            x = (x / (pageSpreadRect.width / curScale)) * 100;\n            y = (y / (pageSpreadRect.height / curScale)) * 100;\n            x =\n                this.transform.left +\n                carouselScaledOffset +\n                x -\n                (x * scale) / curScale;\n            y = this.transform.top + y - (y * scale) / curScale;\n\n            // Make sure the animation doesn't exceed the content bounds.\n            if (bounds !== false && scale > 1) {\n                x = clipCoordinate(x, scale, width, left);\n                y = clipCoordinate(y, scale, height, top);\n            }\n        } else {\n            x = 0;\n            y = 0;\n        }\n\n        // Account for the page spreads left of the active one.\n        x -= carouselOffset * scale;\n\n        this.transform.left = x;\n        this.transform.top = y;\n        this.transform.scale = scale;\n\n        this.animation.animate(\n            {x: x + '%', y: y + '%', scale, easing, duration},\n            callback\n        );\n    }\n\n    refresh() {\n        this.pageSpreadEls = this.el.querySelectorAll('.verso__page-spread');\n        this.pageSpreads = traversePageSpreads(this.pageSpreadEls);\n        this.pageIds = buildPageIds(this.pageSpreads);\n\n        return this;\n    }\n\n    //#############\n    /* Events */\n    //#############\n\n    onPanStart = (e) => {\n        // Only allow panning if zoomed in or doing a horizontal pan.\n        // This ensures vertical scrolling works for scrollable page spreads.\n        if (\n            this.transform.scale > 1 ||\n            e.direction === DIRECTION_LEFT ||\n            e.direction === DIRECTION_RIGHT\n        ) {\n            const {x} = e.center;\n            const edgeThreshold = 30;\n            const width = this.scrollerEl.offsetWidth;\n\n            // Prevent panning when edge-swiping on iOS.\n            if (x > edgeThreshold && x < width - edgeThreshold) {\n                this.startTransform.left = this.transform.left;\n                this.startTransform.top = this.transform.top;\n\n                this.panning = true;\n\n                this.trigger('panStart');\n            }\n        }\n    };\n\n    onPanMove = (e) => {\n        if (this.pinching || !this.panning) return;\n\n        const {scale} = this.transform;\n        if (scale > 1) {\n            const activePageSpread = this.getActivePageSpread();\n            const carouselOffset = activePageSpread.getLeft();\n            const carouselScaledOffset = carouselOffset * scale;\n            const {width, height, left, top} =\n                getPageSpreadBounds(activePageSpread);\n\n            let x =\n                this.startTransform.left +\n                carouselScaledOffset +\n                (e.deltaX / this.scrollerEl.offsetWidth) * 100;\n            x = clipCoordinate(x, scale, width, left) - carouselScaledOffset;\n            let y =\n                this.startTransform.top +\n                (e.deltaY / this.scrollerEl.offsetHeight) * 100;\n            y = clipCoordinate(y, scale, height, top);\n\n            this.transform.left = x;\n            this.transform.top = y;\n\n            this.animation.animate({\n                x: x + '%',\n                y: y + '%',\n                scale,\n                easing: 'linear'\n            });\n        } else {\n            this.animation.animate({\n                x:\n                    this.transform.left +\n                    (e.deltaX / this.scrollerEl.offsetWidth) * 100 +\n                    '%',\n                easing: 'linear'\n            });\n        }\n    };\n\n    onPanEnd = (e) => {\n        if (!this.panning) return;\n\n        this.panning = false;\n        this.trigger('panEnd');\n\n        if (this.transform.scale === 1 && !this.pinching) {\n            const position = this.getPosition();\n            const velocity = e.overallVelocityX;\n            if (\n                Math.abs(velocity) >= this.swipeVelocity &&\n                Math.abs(e.deltaX) >= this.swipeThreshold\n            ) {\n                const options = {\n                    velocity,\n                    duration: this.navigationPanDuration\n                };\n                if (e.offsetDirection === DIRECTION_LEFT) {\n                    this.next(options);\n                } else if (e.offsetDirection === DIRECTION_RIGHT) {\n                    this.prev(options);\n                }\n            }\n\n            if (position === this.getPosition()) {\n                this.animation.animate({\n                    x: this.transform.left + '%',\n                    duration: this.navigationPanDuration\n                });\n\n                this.trigger('attemptedNavigation', {\n                    position: this.getPosition()\n                });\n            }\n        }\n    };\n\n    onPinchStart = () => {\n        if (!this.getActivePageSpread().isZoomable()) return;\n\n        this.pinching = true;\n        // @ts-expect-error\n        this.el.dataset.pinching = true;\n        this.startTransform.scale = this.transform.scale;\n    };\n\n    onPinchMove = (e) => {\n        if (!this.pinching) return;\n\n        this.zoomTo({\n            x: e.center.x,\n            y: e.center.y,\n            scale: this.startTransform.scale * e.scale,\n            bounds: false,\n            easing: 'linear'\n        });\n    };\n\n    onPinchEnd = (e) => {\n        if (!this.pinching) return;\n\n        const activePageSpread = this.getActivePageSpread();\n        const maxZoomScale = activePageSpread.getMaxZoomScale();\n        const scale = Math.max(1, Math.min(this.transform.scale, maxZoomScale));\n        const position = this.getPosition();\n\n        if (this.startTransform.scale === 1 && scale > 1) {\n            this.trigger('zoomedIn', {position});\n        } else if (this.startTransform.scale > 1 && scale === 1) {\n            this.trigger('zoomedOut', {position});\n        }\n\n        this.zoomTo(\n            {x: e.center.x, y: e.center.y, scale, duration: this.zoomDuration},\n            () => {\n                this.pinching = false;\n                // @ts-expect-error\n                this.el.dataset.pinching = false;\n            }\n        );\n    };\n\n    onPress = (e) => {\n        this.trigger(\n            'pressed',\n            this.getCoordinateInfo(\n                e.center.x,\n                e.center.y,\n                this.getActivePageSpread()\n            )\n        );\n    };\n\n    onContextmenu = (e) => {\n        e.preventDefault();\n\n        this.trigger(\n            'contextmenu',\n            this.getCoordinateInfo(\n                e.clientX,\n                e.clientY,\n                this.getActivePageSpread()\n            )\n        );\n\n        return false;\n    };\n\n    onWheel = (e: WheelEvent) => {\n        const activePageSpread = this.getActivePageSpread();\n\n        if (!activePageSpread.isZoomable()) return;\n\n        // see https://stackoverflow.com/a/23668035\n        let {deltaY} = e;\n\n        if ((e as any).webkitDirectionInvertedFromDevice as boolean)\n            deltaY = -deltaY;\n\n        const position = this.getPosition();\n        if (deltaY > 0 && this.transform.scale === 1) {\n            this.zoomTo(\n                {\n                    x: e.clientX,\n                    y: e.clientY,\n                    scale: activePageSpread.getMaxZoomScale(),\n                    duration: this.zoomDuration\n                },\n                () => {\n                    this.trigger('zoomedIn', {position});\n                }\n            );\n        } else if (deltaY < 0 && this.transform.scale > 1) {\n            this.zoomTo(\n                {\n                    x: e.clientX,\n                    y: e.clientY,\n                    scale: 1,\n                    duration: this.zoomDuration\n                },\n                () => {\n                    this.trigger('zoomedOut', {position});\n                }\n            );\n        }\n    };\n\n    onSingletap = (e) => {\n        const activePageSpread = this.getActivePageSpread();\n        const coordinateInfo = this.getCoordinateInfo(\n            e.center.x,\n            e.center.y,\n            activePageSpread\n        );\n        this.trigger('pointerdown', coordinateInfo);\n\n        clearTimeout(this.tap.timeout!);\n\n        if (this.tap.count === 1) {\n            this.tap.count = 0;\n\n            this.trigger('doubleClicked', coordinateInfo);\n\n            if (activePageSpread.isZoomable()) {\n                const maxZoomScale = activePageSpread.getMaxZoomScale();\n                const zoomedIn = this.transform.scale > 1;\n                const scale = zoomedIn ? 1 : maxZoomScale;\n                const zoomEvent = zoomedIn ? 'zoomedOut' : 'zoomedIn';\n                const position = this.getPosition();\n\n                this.zoomTo(\n                    {\n                        x: e.center.x,\n                        y: e.center.y,\n                        scale,\n                        duration: this.zoomDuration\n                    },\n                    () => {\n                        this.trigger(zoomEvent, {position});\n                    }\n                );\n            }\n        } else {\n            this.tap.count++;\n            this.tap.timeout = setTimeout(() => {\n                this.tap.count = 0;\n\n                this.trigger('clicked', coordinateInfo);\n            }, this.tap.delay);\n        }\n    };\n\n    onTouchStart = (e) => {\n        if (!this.getActivePageSpread().isScrollable()) e.preventDefault();\n    };\n\n    onTouchEnd = (e) => {\n        if (!this.getActivePageSpread().isScrollable()) e.preventDefault();\n    };\n\n    onResize = () => {\n        if (this.transform.scale > 1) {\n            const position = this.getPosition();\n\n            this.transform.left = this.getLeftTransformFromPageSpread(\n                position,\n                this.getActivePageSpread()\n            );\n            this.transform.top = 0;\n            this.transform.scale = 1;\n\n            this.zoomTo({\n                x: this.transform.left,\n                y: this.transform.top,\n                scale: this.transform.scale,\n                duration: 0\n            });\n\n            this.trigger('zoomedOut', {position});\n        }\n    };\n}\n","import MicroEvent from 'microevent';\nimport {Page, PageMode} from './page-spreads';\n\nconst loadImage = (src, callback) =>\n    Object.assign(new Image(), {\n        onload: ({target}) => {\n            callback(null, target);\n        },\n        onerror: () => {\n            callback(new Error());\n        },\n        src\n    });\n\ninterface PagedPublicationPageSpreadInit {\n    id: string;\n    pages: Page[];\n    maxZoomScale: number;\n    width: number;\n    pageMode: PageMode;\n}\nclass PagedPublicationPageSpread extends MicroEvent {\n    contentsRendered = false;\n    hotspotsRendered = false;\n    el: HTMLElement;\n    options: PagedPublicationPageSpreadInit;\n    // @ts-expect-error\n    constructor(options: PagedPublicationPageSpreadInit = {}) {\n        super();\n        this.options = options;\n        this.el = this.renderEl();\n    }\n\n    getId() {\n        return this.options.id;\n    }\n\n    getEl() {\n        return this.el;\n    }\n\n    getPages() {\n        return this.options.pages;\n    }\n\n    renderEl() {\n        const el = document.createElement('div');\n        const pageIds = this.getPages().map((page) => page.id);\n\n        el.className = 'verso__page-spread sgn-pp__page-spread';\n\n        el.dataset.id = this.getId();\n        el.dataset.type = 'page';\n        el.dataset.width = String(this.options.width);\n        el.dataset.pageIds = pageIds.join(',');\n        el.dataset.maxZoomScale = String(this.options.maxZoomScale);\n        el.dataset.zoomable = String(false);\n\n        return el;\n    }\n\n    renderContents() {\n        const pageSpreadId = this.getId();\n        const el = this.getEl();\n        const pages = this.getPages();\n        const pageCount = pages.length;\n        let imageLoads = 0;\n\n        let maxPageWidth = el.clientWidth * (window.devicePixelRatio || 1);\n        if (this.options.pageMode === 'double') maxPageWidth = maxPageWidth / 2;\n\n        const useLargeImage = maxPageWidth > 700;\n\n        pages.forEach((page, i) => {\n            const image = useLargeImage\n                ? page.images.large\n                : page.images.medium;\n\n            const pageEl = document.createElement('div');\n            const loaderEl = document.createElement('div');\n\n            pageEl.className = 'sgn-pp__page verso__page';\n            if (page.id) pageEl.dataset.id = page.id;\n\n            if (pageCount === 2) {\n                pageEl.className +=\n                    i === 0 ? ' verso-page--verso' : ' verso-page--recto';\n            }\n\n            pageEl.appendChild(loaderEl);\n            el.appendChild(pageEl);\n\n            loaderEl.className = 'sgn-pp-page__loader';\n            loaderEl.innerHTML = `<span>${page.label}</span>`;\n\n            loadImage(image, (err, img) => {\n                if (err) {\n                    loaderEl.innerHTML = '<span>!</span>';\n\n                    return console.error(err);\n                }\n\n                const isComplete = ++imageLoads === pageCount;\n\n                pageEl.style.backgroundImage = `url(${image})`;\n                pageEl.dataset.width = img.width;\n                pageEl.dataset.height = img.height;\n                pageEl.innerHTML = '&nbsp;';\n\n                if (isComplete) el.dataset.zoomable = String(true);\n\n                this.trigger('pageLoaded', {pageSpreadId, page});\n                if (isComplete) {\n                    this.trigger('pagesLoaded', {pageSpreadId, pages});\n                }\n            });\n        });\n\n        this.contentsRendered = true;\n\n        return this;\n    }\n\n    clearContents() {\n        this.el.innerHTML = '';\n        this.contentsRendered = false;\n\n        return this;\n    }\n\n    zoomIn() {\n        const pages = this.getPages();\n\n        this.el\n            .querySelectorAll<HTMLElement>('.sgn-pp__page')\n            .forEach((pageEl) => {\n                const id = pageEl.dataset.id;\n                const image = pages.find((page) => page.id === id)!.images\n                    .large;\n\n                loadImage(image, (err) => {\n                    if (err) return console.error(err);\n\n                    if (this.el.dataset.active === 'true') {\n                        pageEl.dataset.image = pageEl.style.backgroundImage;\n                        pageEl.style.backgroundImage = `url(${image})`;\n                    }\n                });\n            });\n    }\n\n    zoomOut() {\n        this.el\n            .querySelectorAll<HTMLElement>('.sgn-pp__page[data-image]')\n            .forEach((pageEl) => {\n                pageEl.style.backgroundImage = pageEl.dataset.image!;\n\n                delete pageEl.dataset.image;\n            });\n    }\n}\n\nexport default PagedPublicationPageSpread;\n","import MicroEvent from 'microevent';\nimport PageSpread from './page-spread';\n\nfunction chunk<I extends any>(arr: I[], size: number) {\n    const results: I[][] = [];\n\n    while (arr.length) results.push(arr.splice(0, size));\n\n    return results;\n}\nexport interface Page {\n    id: string;\n    label: string;\n    pageNumber: number;\n    images: {medium: string; large: string};\n}\nexport type PageMode = 'single' | 'double';\ninterface PagedPublicationPageSpreadsInit {\n    pages: Page[];\n    width: number;\n    maxZoomScale: number;\n}\nclass PagedPublicationPageSpreads extends MicroEvent {\n    collection: PageSpread[] = [];\n    ids = {};\n    options: PagedPublicationPageSpreadsInit;\n    constructor(options: PagedPublicationPageSpreadsInit) {\n        super();\n        this.options = options;\n    }\n\n    get(id) {\n        return this.ids[id];\n    }\n\n    getFrag() {\n        const frag = document.createDocumentFragment();\n\n        this.collection.forEach((pageSpread) => {\n            frag.appendChild(pageSpread.el);\n        });\n\n        return frag;\n    }\n\n    update(pageMode: PageMode = 'single') {\n        const pageSpreads: Page[][] = [];\n        const ids = {};\n        const pages = this.options.pages.slice();\n        const {width, maxZoomScale} = this.options;\n\n        if (pageMode === 'single') {\n            pages.forEach((page) => {\n                pageSpreads.push([page]);\n            });\n        } else {\n            const firstPage = pages.shift();\n            const lastPage = pages.length % 2 === 1 ? pages.pop() : null;\n            const midstPageSpreads = chunk(pages, 2);\n\n            if (firstPage) pageSpreads.push([firstPage]);\n\n            midstPageSpreads.forEach((midstPages) => {\n                pageSpreads.push(midstPages);\n            });\n\n            if (lastPage) pageSpreads.push([lastPage]);\n        }\n\n        this.collection = pageSpreads.map((pages, i) => {\n            const id = `${pageMode}-${i}`;\n            const pageSpread = new PageSpread({\n                width,\n                pageMode,\n                maxZoomScale,\n                pages,\n                id\n            });\n\n            pageSpread.bind('pageLoaded', (e) => {\n                this.trigger('pageLoaded', e);\n            });\n            pageSpread.bind('pagesLoaded', (e) => {\n                this.trigger('pagesLoaded', e);\n            });\n\n            ids[id] = pageSpread;\n\n            return pageSpread;\n        });\n        this.ids = ids;\n\n        return this;\n    }\n}\n\nexport default PagedPublicationPageSpreads;\n","import MicroEvent from 'microevent';\nimport {throttle} from '../../util';\nimport PageSpread from '../../verso-browser/page_spread';\nimport Verso from '../../verso-browser/verso';\nimport PageSpreads, {PageMode} from './page-spreads';\n\nfunction getColorBrightness(color: string) {\n    color = color.replace('#', '');\n    let sum = 0;\n    let x = 0;\n\n    while (x < 3) {\n        sum += parseInt(color.substring(2 * x, 2), 16) || 0;\n\n        ++x;\n    }\n\n    return sum <= 381 ? 'dark' : 'light';\n}\n\ninterface PagedPublicationCoreInit {}\nclass PagedPublicationCore extends MicroEvent {\n    defaults = {\n        pages: [],\n        pageSpreadWidth: 100,\n        pageSpreadMaxZoomScale: 2.3,\n        idleDelay: 1000,\n        resizeDelay: 400,\n        color: '#ffffff'\n    };\n    rootEl: HTMLElement;\n    pagesEl: HTMLElement | null;\n    options: PagedPublicationCoreInit;\n    pageId: string;\n    verso: Verso;\n    pageMode: PageMode;\n    idleTimeout: NodeJS.Timeout | undefined;\n    pageSpreads: PageSpreads;\n    resizeListener: () => void;\n    constructor(el: HTMLElement, options: PagedPublicationCoreInit = {}) {\n        super();\n        this.options = this.makeOptions(options, this.defaults);\n        this.pageId = this.getOption('pageId');\n        this.rootEl = el;\n        this.pagesEl = el.querySelector('.sgn-pp__pages');\n\n        this.pageMode = this.getPageMode();\n        this.pageSpreads = new PageSpreads({\n            pages: this.getOption('pages'),\n            maxZoomScale: this.getOption('pageSpreadMaxZoomScale'),\n            width: this.getOption('pageSpreadWidth')\n        });\n\n        this.pageSpreads.bind('pageLoaded', this.pageLoaded);\n        this.pageSpreads.bind('pagesLoaded', this.pagesLoaded);\n\n        this.setColor(this.getOption('color'));\n\n        // It's important to insert the page spreads before instantiating Verso.\n        this.pagesEl!.parentNode!.insertBefore(\n            this.pageSpreads.update(this.pageMode).getFrag(),\n            this.pagesEl\n        );\n\n        this.verso = this.createVerso();\n\n        this.bind('started', this.start);\n        this.bind('destroyed', this.destroy);\n    }\n\n    start = () => {\n        const verso = this.getVerso();\n        verso.start();\n\n        verso.pageSpreads.forEach(this.overridePageSpreadContentRect);\n\n        this.resizeListener = throttle(\n            this.resize,\n            this.getOption('resizeDelay')\n        );\n\n        window.addEventListener('resize', this.resizeListener, false);\n        window.addEventListener('beforeunload', this.unload, false);\n\n        this.rootEl.dataset.started = '';\n        this.rootEl.setAttribute('tabindex', '-1');\n        this.rootEl.focus();\n    };\n\n    destroy = () => {\n        const verso = this.getVerso();\n\n        delete this.rootEl.dataset.started;\n        delete this.rootEl.dataset.idle;\n        delete this.rootEl.dataset.navigating;\n        delete this.rootEl.dataset.colorBrightness;\n        delete this.rootEl.dataset.zoomedIn;\n\n        this.rootEl.style.backgroundColor = '#ffffff';\n\n        verso.el\n            .querySelectorAll('.sgn-pp__page-spread')\n            .forEach((pageSpreadEl) => {\n                pageSpreadEl.parentNode!.removeChild(pageSpreadEl);\n            });\n\n        verso.destroy();\n\n        window.removeEventListener('resize', this.resizeListener, false);\n        window.removeEventListener('beforeunload', this.unload, false);\n    };\n\n    makeOptions(\n        options: Partial<PagedPublicationCoreInit>,\n        defaults: typeof this.defaults\n    ): Partial<PagedPublicationCoreInit> & typeof this.defaults {\n        const opts = {};\n\n        for (const key in options) opts[key] = options[key] ?? defaults[key];\n\n        return opts as Partial<PagedPublicationCoreInit> & typeof this.defaults;\n    }\n\n    getOption(key: string) {\n        return this.options[key];\n    }\n\n    setColor(color: string) {\n        this.rootEl.dataset.colorBrightness = getColorBrightness(color);\n        this.rootEl.style.backgroundColor = color;\n    }\n\n    createVerso() {\n        const verso = new Verso(this.rootEl.querySelector('.verso')!, {\n            pageId: this.pageId\n        });\n\n        verso.bind('beforeNavigation', this.beforeNavigation);\n        verso.bind('afterNavigation', this.afterNavigation);\n        verso.bind('attemptedNavigation', this.attemptedNavigation);\n        verso.bind('pointerdown', this.pointerdown);\n        verso.bind('clicked', this.clicked);\n        verso.bind('doubleClicked', this.doubleClicked);\n        verso.bind('pressed', this.pressed);\n        verso.bind('contextmenu', this.contextmenu);\n        verso.bind('panStart', this.panStart);\n        verso.bind('panEnd', this.panEnd);\n        verso.bind('zoomedIn', this.zoomedIn);\n        verso.bind('zoomedOut', this.zoomedOut);\n\n        return verso;\n    }\n\n    getVerso() {\n        return this.verso;\n    }\n\n    getContentRect(pageSpread) {\n        const rect = {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            width: 0,\n            height: 0\n        };\n        const pageEls = pageSpread.getPageEls();\n        const pageEl = pageEls[0];\n        const pageCount = pageEls.length;\n\n        if (!pageCount) return rect;\n\n        const {scale} = this.getVerso().transform;\n        const pageWidth = pageEl.offsetWidth * pageCount * scale;\n        const pageHeight = pageEl.offsetHeight * scale;\n        const imageRatio =\n            Number(pageEl.dataset.height) /\n            (Number(pageEl.dataset.width) * pageCount);\n        let actualHeight = pageHeight;\n        let actualWidth = actualHeight / imageRatio;\n        actualWidth = Math.min(pageWidth, actualWidth);\n        actualHeight = actualWidth * imageRatio;\n        const clientRect = pageEl.getBoundingClientRect();\n\n        rect.width = actualWidth;\n        rect.height = actualHeight;\n        rect.top = clientRect.top + (pageHeight - actualHeight) / 2;\n        rect.left = clientRect.left + (pageWidth - actualWidth) / 2;\n        rect.right = rect.width + rect.left;\n        rect.bottom = rect.height + rect.top;\n\n        return rect;\n    }\n\n    formatProgressLabel(pageSpread) {\n        const pages = pageSpread?.options.pages || [];\n        const pageLabels = pages.map(({label}) => label);\n\n        return pages.length > 0\n            ? pageLabels.join('-') + ' / ' + this.getOption('pages').length\n            : null;\n    }\n\n    renderPageSpreads() {\n        this.getVerso().pageSpreads.forEach((pageSpread) => {\n            const visibility = pageSpread.getVisibility();\n            const match = this.pageSpreads.get(pageSpread.getId());\n\n            if (visibility === 'visible' && match?.contentsRendered === false) {\n                setTimeout(match.renderContents.bind(match), 0);\n            }\n            if (visibility === 'gone' && match?.contentsRendered === true) {\n                setTimeout(match.clearContents.bind(match), 0);\n            }\n        });\n\n        return this;\n    }\n\n    findPage(pageId) {\n        return this.getOption('pages').find((page) => page.id === pageId);\n    }\n\n    pageLoaded = (e) => {\n        this.trigger('pageLoaded', e);\n    };\n\n    pagesLoaded = (e) => {\n        this.trigger('pagesLoaded', e);\n    };\n\n    beforeNavigation = (e) => {\n        const position = e.newPosition;\n        const theVerso = this.getVerso();\n        const versoPageSpread = theVerso.getPageSpreadFromPosition(position);\n        const pageSpread = this.pageSpreads.get(versoPageSpread.getId());\n        const pageSpreadCount = theVerso.getPageSpreadCount();\n        const newSpreadEl = theVerso.pageSpreadEls[e.newPosition];\n        const progress = (position / (pageSpreadCount - 1)) * 100;\n        const progressLabel = this.formatProgressLabel(pageSpread);\n\n        this.rootEl.dataset.navigating = String(true);\n\n        this.renderPageSpreads();\n        this.resetIdleTimer();\n        this.startIdleTimer();\n        this.trigger('beforeNavigation', {\n            verso: e,\n            pageSpread,\n            newSpreadEl,\n            progress,\n            progressLabel,\n            pageSpreadCount,\n            newPositionIsEnd: e.newPosition + 1 === pageSpreadCount\n        });\n    };\n\n    afterNavigation = (e) => {\n        const position = e.newPosition;\n        const theVerso = this.getVerso();\n        const versoPageSpread = theVerso.getPageSpreadFromPosition(position);\n        const pageSpread = this.pageSpreads.get(versoPageSpread.getId());\n        const pageSpreadCount = theVerso.getPageSpreadCount();\n        const newSpreadEl = theVerso.pageSpreadEls[e.newPosition];\n\n        this.rootEl.dataset.navigating = String(false);\n\n        this.trigger('afterNavigation', {\n            verso: e,\n            pageSpread,\n            pageSpreadCount,\n            newSpreadEl,\n            newPositionIsEnd: e.newPosition + 1 === pageSpreadCount\n        });\n    };\n\n    attemptedNavigation = (e) => {\n        this.trigger('attemptedNavigation', {verso: e});\n    };\n\n    pointerdown = (e) => {\n        if (e.isInsideContent) {\n            const page = this.findPage(e.pageEl.dataset.id);\n\n            this.trigger('pointerdown', {verso: e, page});\n        }\n    };\n    clicked = (e) => {\n        if (e.isInsideContent) {\n            const page = this.findPage(e.pageEl.dataset.id);\n\n            this.trigger('clicked', {verso: e, page});\n        }\n    };\n\n    doubleClicked = (e) => {\n        if (e.isInsideContent) {\n            const page = this.findPage(e.pageEl.dataset.id);\n\n            this.trigger('doubleClicked', {verso: e, page});\n        }\n    };\n\n    pressed = (e) => {\n        if (e.isInsideContent) {\n            const page = this.findPage(e.pageEl.dataset.id);\n\n            this.trigger('pressed', {verso: e, page});\n        }\n    };\n\n    contextmenu = (e) => {\n        if (e.isInsideContent) {\n            const page = this.findPage(e.pageEl.dataset.id);\n\n            this.trigger('contextmenu', {verso: e, page});\n        }\n    };\n\n    panStart = () => {\n        this.resetIdleTimer();\n        this.trigger('panStart', {scale: this.getVerso().transform.scale});\n    };\n\n    panEnd = () => {\n        this.startIdleTimer();\n        this.trigger('panEnd');\n    };\n\n    zoomedIn = (e) => {\n        const {position} = e;\n        const versoPageSpread =\n            this.getVerso().getPageSpreadFromPosition(position);\n        const pageSpread = this.pageSpreads.get(versoPageSpread.getId());\n\n        pageSpread?.zoomIn();\n\n        this.rootEl.dataset.zoomedIn = String(true);\n        this.trigger('zoomedIn', {verso: e, pageSpread});\n    };\n\n    zoomedOut = (e) => {\n        const {position} = e;\n        const versoPageSpread =\n            this.getVerso().getPageSpreadFromPosition(position);\n        const pageSpread = this.pageSpreads.get(versoPageSpread.getId());\n\n        pageSpread?.zoomOut();\n\n        this.rootEl.dataset.zoomedIn = String(false);\n        this.trigger('zoomedOut', {verso: e, pageSpread});\n    };\n\n    getPageMode(): PageMode {\n        return (\n            this.getOption('pageMode') ||\n            (this.rootEl.offsetHeight / this.rootEl.offsetWidth < 0.8\n                ? 'double'\n                : 'single')\n        );\n    }\n\n    resetIdleTimer() {\n        clearTimeout(this.idleTimeout!);\n\n        this.rootEl.dataset.idle = String(false);\n\n        return this;\n    }\n\n    startIdleTimer() {\n        this.idleTimeout = setTimeout(() => {\n            this.rootEl.dataset.idle = String(true);\n        }, this.getOption('idleDelay'));\n\n        return this;\n    }\n\n    switchPageMode(pageMode: PageMode) {\n        if (this.pageMode === pageMode) return this;\n\n        const verso = this.getVerso();\n        const pageIds = verso\n            .getPageSpreadFromPosition(verso.getPosition())\n            .getPageIds();\n\n        this.pageMode = pageMode;\n\n        this.pageSpreads.update(this.pageMode);\n\n        this.getVerso()\n            .el.querySelectorAll('.sgn-pp__page-spread')\n            .forEach((pageSpreadEl) => {\n                pageSpreadEl.parentNode!.removeChild(pageSpreadEl);\n            });\n        this.pagesEl!.parentNode!.insertBefore(\n            this.pageSpreads.getFrag(),\n            this.pagesEl\n        );\n\n        verso.refresh();\n        verso.navigateTo(verso.getPageSpreadPositionFromPageId(pageIds[0])!, {\n            duration: 0\n        });\n        verso.pageSpreads.forEach(this.overridePageSpreadContentRect);\n\n        return this;\n    }\n\n    overridePageSpreadContentRect = (pageSpread: PageSpread) => {\n        if (pageSpread.getType() === 'page') {\n            return (pageSpread.getContentRect = () =>\n                this.getContentRect(pageSpread));\n        }\n    };\n\n    resize = () => {\n        const pageMode = this.getPageMode();\n\n        if (!this.getOption('pageMode') && pageMode !== this.pageMode) {\n            this.switchPageMode(pageMode);\n        } else {\n            this.trigger('resized');\n        }\n    };\n\n    unload = () => {\n        this.trigger('disappeared');\n    };\n}\n\nexport default PagedPublicationCore;\n","import MicroEvent from 'microevent';\nimport Tracker from '../events/tracker';\nimport PagedPublicationPageSpread from './page-spread';\n\nclass PagedPublicationEventTracking extends MicroEvent {\n    hidden = true;\n    pageSpread: null | PagedPublicationPageSpread = null;\n    eventTracker: Tracker;\n    id: string;\n    constructor(eventTracker: Tracker, id: string) {\n        super();\n        this.eventTracker = eventTracker;\n        this.id = id;\n\n        this.bind('appeared', this.appeared);\n        this.bind('disappeared', this.disappeared);\n        this.bind('beforeNavigation', this.beforeNavigation);\n        this.bind('afterNavigation', this.afterNavigation);\n        this.bind('attemptedNavigation', this.attemptedNavigation);\n        this.bind('panStart', this.panStart);\n        this.bind('destroyed', this.destroy);\n    }\n\n    destroy = () => {\n        this.pageSpreadDisappeared();\n    };\n\n    trackOpened() {\n        if (!this.eventTracker) return this;\n\n        this.eventTracker.trackPagedPublicationOpened({\n            'pp.id': this.id,\n            vt: this.eventTracker.createViewToken(this.id)\n        });\n\n        return this;\n    }\n\n    trackPageSpreadAppeared(pageNumbers: number[]) {\n        if (!this.eventTracker) return this;\n\n        pageNumbers.forEach((pageNumber) => {\n            this.eventTracker.trackPagedPublicationPageOpened({\n                'pp.id': this.id,\n                'ppp.n': pageNumber,\n                vt: this.eventTracker.createViewToken(this.id, pageNumber)\n            });\n        });\n\n        return this;\n    }\n\n    appeared = (e) => {\n        this.pageSpreadAppeared(e.pageSpread);\n    };\n\n    disappeared = () => {\n        this.pageSpreadDisappeared();\n    };\n\n    beforeNavigation = () => {\n        this.pageSpreadDisappeared();\n    };\n\n    afterNavigation = (e) => {\n        this.pageSpreadAppeared(e.pageSpread);\n    };\n\n    attemptedNavigation = (e) => {\n        this.pageSpreadAppeared(e.pageSpread);\n    };\n\n    panStart = (e) => {\n        if (e.scale === 1) this.pageSpreadDisappeared();\n    };\n\n    pageSpreadAppeared(pageSpread: PagedPublicationPageSpread) {\n        if (pageSpread && this.hidden) {\n            this.pageSpread = pageSpread;\n            this.hidden = false;\n\n            this.trackPageSpreadAppeared(\n                pageSpread.getPages().map((page) => page.pageNumber)\n            );\n        }\n    }\n\n    pageSpreadDisappeared() {\n        if (this.pageSpread && !this.hidden) {\n            this.hidden = true;\n            this.pageSpread = null;\n        }\n    }\n}\n\nexport default PagedPublicationEventTracking;\n","import MicroEvent from 'microevent';\nimport Mustache from 'mustache';\nimport PageSpread from '../../verso-browser/page_spread';\nimport {V2Hotspot} from '../core';\nimport PagedPublicationPageSpread from './page-spread';\nimport {Page} from './page-spreads';\n\nfunction getPosition(pages: Page[], ratio: number, hotspot: V2Hotspot) {\n    let minX: number | null = null;\n    let minY: number | null = null;\n    let maxX: number | null = null;\n    let maxY: number | null = null;\n    const pageNumbers = pages.map((page) => page.pageNumber);\n\n    for (const pageNumber in hotspot.locations) {\n        if (pageNumbers.indexOf(Number(pageNumber)) === -1) continue;\n\n        hotspot.locations[pageNumber].forEach(({0: x, 1: y}) => {\n            if (pages[1] && pageNumbers[1] === Number(pageNumber)) x += 1;\n\n            x /= pages.length;\n\n            if (minX == null) {\n                minX = maxX = x;\n                minY = maxY = y;\n            }\n\n            if (x < minX!) minX = x;\n\n            if (x > maxX!) maxX = x;\n\n            if (y < minY!) minY = y;\n\n            if (y > maxY!) maxY = y;\n        });\n    }\n\n    const width = maxX! - minX!;\n    const height = maxY! - minY!;\n\n    return {\n        top: (minY! / ratio) * 100,\n        left: minX! * 100,\n        width: width * 100,\n        height: (height / ratio) * 100\n    };\n}\n\nfunction renderHotspot(hotspot, position, contentRect, boundingRect) {\n    const el = document.createElement('div');\n    let top = Math.round((contentRect.height / 100) * position.top);\n    let left = Math.round((contentRect.width / 100) * position.left);\n    const width = Math.round((contentRect.width / 100) * position.width);\n    const height = Math.round((contentRect.height / 100) * position.height);\n\n    top += Math.round(contentRect.top);\n    left += Math.round(contentRect.left);\n    top -= boundingRect.top;\n    left -= boundingRect.left;\n\n    el.className = 'sgn-pp__hotspot verso__overlay';\n\n    if (hotspot.id) el.dataset.id = hotspot.id;\n\n    if (hotspot.type) el.dataset.type = hotspot.type;\n\n    el.innerHTML = Mustache.render('', hotspot);\n\n    el.style.top = `${top}px`;\n    el.style.left = `${left}px`;\n    el.style.width = `${width}px`;\n    el.style.height = `${height}px`;\n\n    return el;\n}\n\nclass PagedPublicationHotspots extends MicroEvent {\n    currentPageSpreadId = null;\n    pageSpreadsLoaded = {};\n    cache = {};\n    constructor() {\n        super();\n\n        this.bind('hotspotsReceived', this.hotspotsReceived);\n        this.bind('afterNavigation', this.afterNavigation);\n        this.bind('pagesLoaded', this.pagesLoaded);\n        this.bind('resized', this.resized);\n    }\n\n    renderHotspots({\n        versoPageSpread,\n        pageSpread,\n        hotspots,\n        pages,\n        ratio\n    }: {\n        versoPageSpread: PageSpread;\n        pageSpread: PagedPublicationPageSpread;\n        hotspots: V2Hotspot[];\n        pages: Page[];\n        ratio: number;\n    }) {\n        const contentRect = versoPageSpread.getContentRect();\n        const pageSpreadEl = pageSpread.getEl();\n        const boundingRect = pageSpreadEl.getBoundingClientRect();\n\n        pageSpreadEl\n            .querySelectorAll('.sgn-pp__hotspot')\n            .forEach((hotspotEl) => {\n                hotspotEl.parentNode!.removeChild(hotspotEl);\n            });\n\n        const frag = document.createDocumentFragment();\n        for (const id in hotspots) {\n            const hotspot = hotspots[id];\n            const position = getPosition(pages, ratio, hotspot);\n            const el = renderHotspot(\n                hotspot,\n                position,\n                contentRect,\n                boundingRect\n            );\n\n            frag.appendChild(el);\n        }\n\n        pageSpreadEl.appendChild(frag);\n\n        return this;\n    }\n\n    requestHotspots(id, pages) {\n        this.trigger('hotspotsRequested', {id, pages});\n    }\n\n    hotspotsReceived = (e) => {\n        this.setCache(e.pageSpread.getId(), e);\n        this.renderHotspots(e);\n    };\n\n    getCache(pageSpreadId) {\n        return this.cache[pageSpreadId];\n    }\n\n    setCache(pageSpreadId, data) {\n        this.cache[pageSpreadId] = data;\n\n        return this;\n    }\n\n    afterNavigation = (e) => {\n        if (!e.pageSpread) return;\n\n        const id = e.pageSpread.getId();\n\n        this.currentPageSpreadId = id;\n        if (this.pageSpreadsLoaded[id]) {\n            this.requestHotspots(id, e.pageSpread.getPages());\n        }\n    };\n\n    pagesLoaded = (e) => {\n        this.pageSpreadsLoaded[e.pageSpreadId] = true;\n        if (this.currentPageSpreadId === e.pageSpreadId) {\n            this.requestHotspots(e.pageSpreadId, e.pages);\n        }\n    };\n\n    resized = () => {\n        const data = this.getCache(this.currentPageSpreadId);\n\n        if (data) this.renderHotspots(data);\n    };\n}\n\nexport default PagedPublicationHotspots;\n","import MicroEvent from 'microevent';\nimport * as translations from '../../translations';\nimport Verso from '../../verso-browser/verso';\nimport {V2Hotspot} from '../core';\nimport singleChoicePopover from '../core-ui/single-choice-popover';\nimport {Tracker} from '../events';\nimport Controls from './controls';\nimport Core from './core';\nimport EventTracking from './event-tracking';\nimport Hotspots from './hotspots';\nimport {Page} from './page-spreads';\nimport './viewer.styl';\n\nfunction defaultPickHotspot(\n    hotspots: V2Hotspot[],\n    e,\n    el: HTMLElement,\n    callback\n) {\n    const popover = singleChoicePopover(\n        {\n            el,\n            header: translations.t('paged_publication.hotspot_picker.header'),\n            x: e.verso.x,\n            y: e.verso.y,\n            items: hotspots\n                .filter((hotspot) => hotspot.type === 'offer')\n                .map((hotspot) => ({\n                    id: hotspot.id,\n                    title: hotspot.offer.heading,\n                    subtitle:\n                        hotspot.offer.pricing.currency +\n                        '' +\n                        hotspot.offer.pricing.price\n                }))\n        },\n        (picked) => {\n            callback(hotspots.find((hotspot) => hotspot.id === picked.id));\n        }\n    );\n\n    return popover.destroy;\n}\nexport interface ViewerInit {\n    id: string;\n    ownedBy: unknown;\n    pages?: Page[];\n    pageSpreadWidth?: number;\n    pageSpreadMaxZoomScale?: number;\n    pageId: unknown;\n    idleDelay?: number;\n    resizeDelay?: number;\n    color?: string;\n    eventTracker: Tracker;\n    keyboard: boolean;\n    hotspotRatio: unknown;\n    pickHotspot?: typeof defaultPickHotspot;\n}\nclass Viewer extends MicroEvent {\n    _hotspots = new Hotspots();\n    hotspots: Record<string, {type: string; id: string; locations}> | null =\n        null;\n    hotspotQueue: {id: unknown; pages: Page[]}[] = [];\n    popover: null | {destroy: () => void} = null;\n    el: HTMLElement;\n    _core: Core;\n    _controls: Controls;\n    _eventTracking: EventTracking;\n    options: ViewerInit;\n    // @ts-expect-error\n    constructor(el: HTMLElement, options: ViewerInit = {}) {\n        super();\n        this.el = el;\n        this.options = options;\n        this._core = new Core(this.el, {\n            id: this.options.id,\n            pages: this.options.pages,\n            pageSpreadWidth: this.options.pageSpreadWidth,\n            pageSpreadMaxZoomScale: this.options.pageSpreadMaxZoomScale,\n            pageId: this.options.pageId,\n            idleDelay: this.options.idleDelay,\n            resizeDelay: this.options.resizeDelay,\n            color: this.options.color\n        });\n        this._controls = new Controls(this.el, {\n            keyboard: this.options.keyboard\n        });\n        this._eventTracking = new EventTracking(\n            this.options.eventTracker,\n            this.options.id\n        );\n\n        this._controls.bind('prev', this.prev);\n        this._controls.bind('next', this.next);\n        this._controls.bind('first', this.first);\n        this._controls.bind('last', this.last);\n        this._controls.bind('close', this.destroy);\n        this._hotspots.bind('hotspotsRequested', (e) => {\n            this.trigger('hotspotsRequested', e);\n        });\n\n        this._core.bind('appeared', (e) => {\n            this._eventTracking.trigger('appeared', e);\n            this.trigger('appeared', e);\n        });\n        this._core.bind('disappeared', (e) => {\n            this._eventTracking.trigger('disappeared', e);\n            this.trigger('disappeared', e);\n        });\n        this._core.bind('beforeNavigation', (e) => {\n            this._eventTracking.trigger('beforeNavigation', e);\n            this._controls.trigger('beforeNavigation', e);\n            this.trigger('beforeNavigation', e);\n        });\n        this._core.bind('afterNavigation', (e) => {\n            this._eventTracking.trigger('afterNavigation', e);\n            this._hotspots.trigger('afterNavigation', e);\n            this.trigger('afterNavigation', e);\n        });\n        this._core.bind('attemptedNavigation', (e) => {\n            this._eventTracking.trigger('attemptedNavigation', e);\n            this.trigger('attemptedNavigation', e);\n        });\n        this._core.bind('pointerdown', (e) => {\n            this._eventTracking.trigger('pointerdown', e);\n            this.trigger('pointerdown', e);\n        });\n        this._core.bind('clicked', (e) => {\n            this._eventTracking.trigger('clicked', e);\n            this.trigger('clicked', e);\n        });\n        this._core.bind('doubleClicked', (e) => {\n            this._eventTracking.trigger('doubleClicked', e);\n            this.trigger('doubleClicked', e);\n        });\n        this._core.bind('contextmenu', (e) => {\n            this.trigger('contextmenu', e);\n        });\n        this._core.bind('pressed', (e) => {\n            this._eventTracking.trigger('pressed', e);\n            this.trigger('pressed', e);\n        });\n        this._core.bind('panStart', (e) => {\n            this._eventTracking.trigger('panStart', e);\n            this.trigger('panStart', e);\n        });\n        this._core.bind('zoomedIn', (e) => {\n            this._eventTracking.trigger('zoomedIn', e);\n            this.trigger('zoomedIn', e);\n        });\n        this._core.bind('zoomedOut', (e) => {\n            this._eventTracking.trigger('zoomedOut', e);\n            this.trigger('zoomedOut', e);\n        });\n        this._core.bind('pageLoaded', (e) => {\n            this._eventTracking.trigger('pageLoaded', e);\n            this.trigger('pageLoaded', e);\n        });\n        this._core.bind('pagesLoaded', (e) => {\n            this._hotspots.trigger('pagesLoaded', e);\n            this.trigger('pagesLoaded', e);\n        });\n        this._core.bind('resized', (e) => {\n            this._hotspots.trigger('resized');\n            this.trigger('resized', e);\n        });\n\n        this.bind('hotspotsRequested', this.hotspotsRequested);\n        this.bind('beforeNavigation', this.beforeNavigation);\n        this.bind('clicked', this.clicked);\n        this.bind('pointerdown', this.pointerdown);\n        this.bind('contextmenu', this.contextmenu);\n        this.bind('pressed', this.pressed);\n    }\n\n    start() {\n        this._eventTracking.trackOpened();\n        this._core.trigger('started');\n\n        return this;\n    }\n\n    destroy = () => {\n        this._core.trigger('destroyed');\n        this._hotspots.trigger('destroyed');\n        this._controls.trigger('destroyed');\n        this._eventTracking.trigger('destroyed');\n\n        this.trigger('destroyed');\n\n        return this;\n    };\n\n    navigateTo(position, options) {\n        return this.navigateToIndex(position, options);\n    }\n\n    navigateToIndex(position, options) {\n        this._core.getVerso().navigateTo(position, options);\n\n        return this;\n    }\n\n    navigateToPageId(pageId, options?: Parameters<Verso['navigateTo']>[1]) {\n        const verso = this._core.getVerso();\n\n        const newPosition = verso.getPageSpreadPositionFromPageId(pageId)!;\n        verso.navigateTo(newPosition, options);\n\n        return this;\n    }\n\n    first = (options?: Parameters<Verso['first']>[0]) => {\n        this._core.getVerso().first(options);\n\n        return this;\n    };\n\n    prev = (options: Parameters<Verso['prev']>[0]) => {\n        this._core.getVerso().prev(options);\n\n        return this;\n    };\n\n    next = (options: Parameters<Verso['next']>[0]) => {\n        this._core.getVerso().next(options);\n\n        return this;\n    };\n\n    last = (options?: Parameters<Verso['last']>[0]) => {\n        this._core.getVerso().last(options);\n\n        return this;\n    };\n\n    getPointerEventHotspots(e): V2Hotspot[] {\n        const hotspots = this.hotspots;\n        if (!hotspots) return [];\n\n        return e.verso.overlayEls.map((el) => hotspots[el.dataset.id]);\n    }\n\n    pickHotspot(e: any, callback: (hotspot: V2Hotspot) => void) {\n        if (this.popover) {\n            this.popover.destroy?.();\n            this.popover = null;\n        }\n\n        const hotspots = this.getPointerEventHotspots(e);\n\n        if (hotspots.length === 1) {\n            callback(hotspots[0]);\n        } else if (hotspots.length > 1) {\n            this.popover = {\n                destroy: (this.options.pickHotspot || defaultPickHotspot)(\n                    hotspots,\n                    e,\n                    this.el,\n                    callback\n                )\n            };\n        }\n    }\n\n    processHotspotQueue() {\n        if (!this.hotspots) return;\n\n        this.hotspotQueue = this.hotspotQueue.filter((hotspotRequest) => {\n            const hotspots: typeof this.hotspots = {};\n            for (const hotspotId in this.hotspots) {\n                if (hotspots[hotspotId]) continue;\n\n                const {id, type, locations} = this.hotspots[hotspotId];\n                for (let idx = 0; idx < hotspotRequest.pages.length; idx++) {\n                    const {pageNumber} = hotspotRequest.pages[idx];\n                    if (locations[pageNumber]) {\n                        hotspots[hotspotId] = {type, id, locations};\n\n                        break;\n                    }\n                }\n            }\n\n            const versoPageSpread = this._core\n                .getVerso()\n                .pageSpreads.find(\n                    (pageSpread) => pageSpread.getId() === hotspotRequest.id\n                );\n            this._hotspots.trigger('hotspotsReceived', {\n                pageSpread: this._core.pageSpreads.get(hotspotRequest.id),\n                versoPageSpread,\n                ratio: this.options.hotspotRatio,\n                pages: hotspotRequest.pages,\n                hotspots\n            });\n\n            return false;\n        });\n    }\n\n    hotspotsRequested = (e) => {\n        this.hotspotQueue.push(e);\n        this.processHotspotQueue();\n    };\n\n    applyHotspots(hotspots) {\n        this.hotspots = hotspots;\n\n        this.processHotspotQueue();\n    }\n\n    beforeNavigation = () => {\n        this.popover?.destroy?.();\n    };\n\n    clicked = (e) => {\n        this.pickHotspot(e, (hotspot) => {\n            this.trigger('hotspotClicked', hotspot);\n        });\n    };\n\n    pointerdown = (e) => {\n        const hotspots = this.getPointerEventHotspots(e);\n        if (hotspots.length > 0) this.trigger('hotspotsPointerdown', hotspots);\n    };\n\n    contextmenu = (e) => {\n        this.pickHotspot(e, (hotspot) => {\n            this.trigger('hotspotContextmenu', hotspot);\n        });\n    };\n\n    pressed = (e) => {\n        this.pickHotspot(e, (hotspot) => {\n            this.trigger('hotspotPressed', hotspot);\n        });\n    };\n}\n\nexport default Viewer;\n","import {request, V2Catalog, V2Hotspot, V2Page} from '../core';\nimport {Tracker} from '../events';\nimport Viewer, {ViewerInit} from './viewer';\n\ninterface BootstrapperInit {\n    el: HTMLElement;\n    id: string;\n    pageId: string;\n    eventTracker: Tracker;\n    apiKey: string;\n    coreUrl: string;\n}\nexport default class Bootstrapper {\n    options: BootstrapperInit;\n    constructor(options = {}) {\n        //@ts-expect-error\n        this.options = options;\n    }\n\n    createViewer(\n        data: {details: V2Catalog; pages: V2Page[]},\n        viewerOptions?: Partial<ViewerInit>\n    ) {\n        return new Viewer(this.options.el!, {\n            id: this.options.id,\n            ownedBy: data.details.dealer_id,\n            color: '#' + data.details.branding.pageflip.color,\n            hotspotRatio: data.details.dimensions.height,\n            keyboard: true,\n            pageId: this.options.pageId,\n            eventTracker: this.options.eventTracker,\n            pages: data.pages.map(({view, zoom}, i) => {\n                const pageNumber = i + 1;\n\n                return {\n                    id: 'page' + pageNumber,\n                    label: String(pageNumber),\n                    pageNumber,\n                    images: {medium: view, large: zoom}\n                };\n            }),\n            ...viewerOptions\n        });\n    }\n\n    applyHotspots(viewer, hotspots) {\n        viewer.applyHotspots(\n            hotspots.reduce((obj, hotspot) => {\n                obj[hotspot.id] = hotspot;\n\n                return obj;\n            }, {})\n        );\n    }\n\n    async fetch(callback?: Parameters<typeof request>[1]) {\n        try {\n            const {0: details, 1: pages} = await Promise.all([\n                this.fetchDetails(),\n                this.fetchPages()\n            ]);\n\n            if (!details || !pages) throw new Error();\n\n            const data = {details, pages};\n            if (typeof callback === 'function') callback(null, data);\n\n            return data;\n        } catch (error) {\n            if (typeof callback === 'function') {\n                callback(error);\n            } else {\n                throw error;\n            }\n        }\n    }\n\n    fetchDetails = (callback?: Parameters<typeof request>[1]) =>\n        request<V2Catalog>(\n            {\n                apiKey: this.options.apiKey,\n                coreUrl: this.options.coreUrl,\n                url: `/v2/catalogs/${this.options.id}`\n            },\n            callback\n        );\n\n    fetchPages = (callback?: Parameters<typeof request>[1]) =>\n        request<V2Page[]>(\n            {\n                apiKey: this.options.apiKey,\n                coreUrl: this.options.coreUrl,\n                url: `/v2/catalogs/${this.options.id}/pages`\n            },\n            callback\n        );\n\n    fetchHotspots = (callback?: Parameters<typeof request>[1]) =>\n        request<V2Hotspot>(\n            {\n                apiKey: this.options.apiKey,\n                coreUrl: this.options.coreUrl,\n                url: `/v2/catalogs/${this.options.id}/hotspots`\n            },\n            callback\n        );\n}\n"],"names":["_getMatcher","element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Function","prototype","_level","_matchesSelector","selector","boundElement","call","parentElement","handlersBySelectorByTypeByInstance","_bind","events","callback","remove","Array","id","handlersBySelectorByType","k","type","_Object$keys","forEach","handleType","i","length","handlers","_spliceInstanceProperty","addEventListener","e","handlersBySelector","target","handlerSelector","HTMLElement","match","instances","stopPropagation","cancelBubble","j","preventDefault","push","_id","Gator","key","on","off","error","err","options","message","code","name","stack","statusCode","time","Date","throttle","fn","threshold","scope","last","deferTimer","context","now","getTime","args","arguments","clearTimeout","setTimeout","apply","el","request","_asyncToGenerator","_regeneratorRuntime","coreUrl","url","rawUrl","apiKey","qs","method","headers","body","_URL","Error","searchParams","append","fetch","String","_objectSpread","Accept","credentials","response","status","json","pairs","t","view","template","Mustache","render","ESC","ARROW_RIGHT","ARROW_LEFT","SPACE","NUMBER_ONE","defaultTemplate","Popover","document","createElement","backgroundEl","keyUp","keyCode","keyCodes","destroy","resize","scroll","header","singleChoiceItems","className","setAttribute","innerHTML","_mapInstanceProperty","item","index","position","addEventListeners","window","removeEventListener","parentNode","removeChild","trigger","top","y","left","x","menuEl","querySelector","width","offsetWidth","height","offsetHeight","parentWidth","parentHeight","boundingRect","getBoundingClientRect","pageYOffset","pageXOffset","style","bind","dataset","MicroEvent","singleChoicePopover","items","popover","focus","appendChild","visibilityClassName","PagedPublicationControls","root","progress","progressBar","progressLabel","prevControl","nextControl","close","keyDownHandler","keyboard","prevClicked","nextClicked","closeClicked","beforeNavigation","showProgress","classList","add","textContent","verso","newPosition","pageSpreadCount","keyDown","duration","_assertThisInitialized","Animation","run","animate","scale","easing","transform","transitionEnd","transition","PageSpread","visibility","positioned","active","pageIds","maxZoomScale","isZoomable","getMaxZoomScale","getEl","zoomable","isScrollable","contains","getOverlayEls","querySelectorAll","getPageEls","getRect","getContentRect","rect","right","bottom","pageEls","idx","pageEl","pageRect","getId","getType","getPageIds","getWidth","getLeft","getVisibility","setVisibility","display","activate","deactivate","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","getDistance","p1","p2","props","Math","sqrt","directionStr","direction","getAngle","atan2","PI","getCenter","pointers","pointer","clientX","clientY","round","getRotation","start","end","getScale","getDirection","abs","getVelocity","deltaTime","computeIntervalInputData","session","input","lastInterval","timeStamp","velocity","velocityX","velocityY","eventType","undefined","deltaX","deltaY","v","computeDeltaXY","center","offset","offsetDelta","prevDelta","prevInput","simpleCloneInputData","computeInputData","manager","pointersLength","firstInput","firstMultiple","offsetCenter","angle","distance","offsetDirection","overallVelocity","overallVelocityX","overallVelocityY","rotation","maxPointers","srcEvent","inputHandler","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","Boolean","recognize","types","handler","_trimInstanceProperty","split","removeEventListeners","getWindowForElement","ownerDocument","defaultView","parentWindow","Input","inputTarget","domHandler","ev","enable","init","evEl","evTarget","evWin","TouchInput","targetIds","touches","getTouches","pointerType","allTouches","_Array$from","identifier","targetTouches","_filterInstanceProperty","touch","targetTouch","changedTargetTouches","changedTouches","changedTouch","_concatInstanceProperty","list","_findIndexInstanceProperty","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","removePointer","eventTypeNormalized","toLowerCase","replace","isTouch","storeIndex","pointerId","DEDUP_TIMEOUT","DEDUP_DISTANCE","TouchMouseInput","primaryTouch","lastTouches","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","setLastTouch","isSyntheticEvent","mouse","some","_slicedToArray","lastTouch","lts","indexOf","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","stateStr","state","_uniqueId","uniqueId","Recognizer","simultaneous","requireFail","defaults","set","_Object$assign","touchAction","update","emit","event","additionalEvent","reset","inputDataClone","process","getTouchAction","VENDOR_PREFIXES","prefixed","obj","property","camelProp","toUpperCase","_sliceInstanceProperty","_findInstanceProperty","prefix","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_NONE","actions","cssSupports","CSS","supports","TOUCH_ACTION_MAP","reduce","touchMap","val","cleanTouchActions","_includesInstanceProperty","hasPanX","hasPanY","hasManipulation","TouchAction","value","compute","recognizers","recognizer","join","preventDefaults","prevented","hasNone","SUPPORT_TOUCH","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","SUPPORT_POINTER_EVENTS","createInputInstance","inputClass","domEvents","cssProps","userSelect","touchSelect","touchCallout","userDrag","tapHighlightColor","Manager","oldCssProps","toggleCssProps","ctor","opts","curRecognizer","get","recogger","existing","data","triggerDomEvent","_Object$entries","prop","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","AttrRecognizer","attrTest","optionPointers","isRecognized","isValid","PanRecognizer","pX","pY","directionTest","hasMoved","PinchRecognizer","inOut","PressRecognizer","_timer","_input","validPointers","validMovement","validTime","tryEmit","canEmit","TapRecognizer","pTime","pCenter","count","validTouchTime","failTimeout","validInterval","interval","validMultiTap","posThreshold","taps","tapCount","getHammerInputClass","buildPageIds","pageSpreads","pageSpread","pageId","clipCoordinate","coordinate","size","max","min","getPageSpreadBounds","pageSpreadRect","pageSpreadContentRect","isCoordinateInsideElement","traversePageSpreads","els","Number","Verso","pinching","panning","startTransform","started","destroyed","_events","scrollerEl","pageSpreadEls","swipeVelocity","swipeThreshold","navigationDuration","navigationPanDuration","zoomDuration","tap","animation","hammer","onPanStart","edgeThreshold","onPanMove","activePageSpread","getActivePageSpread","carouselOffset","carouselScaledOffset","onPanEnd","getPosition","next","prev","onPinchStart","onPinchMove","zoomTo","bounds","onPinchEnd","onPress","getCoordinateInfo","onContextmenu","onWheel","webkitDirectionInvertedFromDevice","onSingletap","coordinateInfo","timeout","zoomedIn","zoomEvent","delay","onTouchStart","onTouchEnd","onResize","getLeftTransformFromPageSpread","doubleTapDelay","unbind","getPageSpreadPositionFromPageId","navigateTo","console","warn","first","getPageSpreadCount","currentPosition","currentPageSpread","getPageSpreadFromPosition","carousel","getCarouselFromPageSpread","visible","setPosition","gone","previousPosition","pageSpreadSubject","offsetLeft","offsetTop","info","contentX","contentY","pageX","pageY","overlayEls","isInsideContentX","isInsideContentY","isInsideContent","overlayEl","contentRect","curScale","refresh","loadImage","src","Image","onload","onerror","PagedPublicationPageSpread","contentsRendered","hotspotsRendered","renderEl","getPages","pages","page","renderContents","pageSpreadId","pageCount","imageLoads","maxPageWidth","clientWidth","devicePixelRatio","pageMode","useLargeImage","image","images","large","medium","loaderEl","label","img","isComplete","backgroundImage","clearContents","zoomIn","zoomOut","chunk","arr","results","PagedPublicationPageSpreads","collection","ids","getFrag","frag","createDocumentFragment","firstPage","shift","lastPage","pop","midstPageSpreads","midstPages","getColorBrightness","color","sum","parseInt","substring","PagedPublicationCore","pageSpreadWidth","pageSpreadMaxZoomScale","idleDelay","resizeDelay","rootEl","pagesEl","idleTimeout","resizeListener","getVerso","overridePageSpreadContentRect","getOption","unload","idle","navigating","colorBrightness","backgroundColor","pageSpreadEl","pageLoaded","pagesLoaded","theVerso","versoPageSpread","newSpreadEl","formatProgressLabel","renderPageSpreads","resetIdleTimer","startIdleTimer","newPositionIsEnd","afterNavigation","attemptedNavigation","findPage","clicked","doubleClicked","contextmenu","panStart","panEnd","zoomedOut","getPageMode","switchPageMode","makeOptions","PageSpreads","setColor","insertBefore","createVerso","pageWidth","pageHeight","imageRatio","actualHeight","actualWidth","clientRect","pageLabels","PagedPublicationEventTracking","eventTracker","hidden","pageSpreadDisappeared","appeared","pageSpreadAppeared","disappeared","trackOpened","trackPagedPublicationOpened","vt","createViewToken","trackPageSpreadAppeared","pageNumbers","pageNumber","trackPagedPublicationPageOpened","ratio","hotspot","minX","minY","maxX","maxY","locations","renderHotspot","PagedPublicationHotspots","currentPageSpreadId","pageSpreadsLoaded","cache","hotspotsReceived","setCache","renderHotspots","requestHotspots","resized","getCache","hotspots","hotspotEl","defaultPickHotspot","translations","title","offer","heading","subtitle","pricing","currency","price","picked","Viewer","_hotspots","Hotspots","hotspotQueue","_core","_controls","_eventTracking","hotspotsRequested","processHotspotQueue","pickHotspot","getPointerEventHotspots","Core","Controls","EventTracking","navigateToIndex","navigateToPageId","hotspotRequest","hotspotId","hotspotRatio","applyHotspots","Bootstrapper","fetchDetails","fetchPages","fetchHotspots","createViewer","viewerOptions","ownedBy","details","dealer_id","branding","pageflip","dimensions","zoom","viewer","_Promise","all"],"mappings":"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"}