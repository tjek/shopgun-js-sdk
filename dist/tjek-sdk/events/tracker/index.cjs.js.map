{"version":3,"file":"index.cjs.js","sources":["../../../../lib/config-defaults.js","../../../../lib/storage/client-local.js","../../../../lib/util.js","../../../../lib/kits/events/tracker.js"],"sourcesContent":["export const coreUrl = 'https://squid-api.tjek.com';\nexport const eventsTrackUrl = 'https://wolf-api.tjek.com/sync';\n","const prefixKey = 'sgn-';\n\nlet storage;\nfunction ensureStorage() {\n    if (storage) return;\n\n    try {\n        storage = window.localStorage;\n\n        storage[prefixKey + 'test-storage'] = 'foobar';\n        delete storage[prefixKey + 'test-storage'];\n    } catch (error) {\n        storage = {};\n    }\n}\n\nexport function get(key) {\n    ensureStorage();\n\n    try {\n        return JSON.parse(storage[prefixKey + key]);\n    } catch (error) {}\n}\n\nexport function set(key, value) {\n    ensureStorage();\n\n    try {\n        storage[prefixKey + key] = JSON.stringify(value);\n    } catch (error) {}\n}\n\nexport function remove(key) {\n    ensureStorage();\n\n    delete storage[prefixKey + key];\n}\n\nexport function setWithEvent(key, value, eventName) {\n    try {\n        set(key, value);\n\n        const event = new Event(eventName);\n\n        window.dispatchEvent(event);\n    } catch (error) {}\n}\n","import Gator from '../vendor/gator';\n\nexport const isBrowser = () =>\n    typeof window === 'object' && typeof document === 'object';\n\nexport const isNode = () => typeof process === 'object';\n\nexport function error(err, options) {\n    err.message = err.message || null;\n\n    if (typeof options === 'string') {\n        err.message = options;\n    } else if (typeof options === 'object' && options) {\n        for (const key in options) err[key] = options[key];\n\n        if (options.message) err.message = options.message;\n\n        if (options.code || options.message) {\n            err.code = options.code || options.name;\n        }\n        if (options.stack) err.stack = options.stack;\n    }\n\n    err.name = options?.name || err.name || err.code || 'Error';\n    err.time = new Date();\n\n    return err;\n}\n\nexport function getQueryParam(field, url) {\n    const reg = new RegExp('[?&]' + field + '=([^&#]*)', 'i');\n    const string = reg.exec(url || window.location.href);\n\n    return string ? string[1] : undefined;\n}\n\nexport function throttle(fn, threshold = 250, scope) {\n    let last;\n    let deferTimer;\n\n    return function () {\n        const context = scope || this;\n        const now = new Date().getTime();\n        const args = arguments;\n\n        if (last && now < last + threshold) {\n            clearTimeout(deferTimer);\n\n            deferTimer = setTimeout(() => {\n                last = now;\n\n                fn.apply(context, args);\n            }, threshold);\n        } else {\n            last = now;\n            fn.apply(context, args);\n        }\n    };\n}\n\nexport const on = (el, events, selector, callback) =>\n    Gator(el).on(events, selector, callback);\n\nexport const off = (el, events, selector, callback) =>\n    Gator(el).off(events, selector, callback);\n","import fetch from 'cross-fetch';\nimport md5 from 'md5';\nimport {eventsTrackUrl as defaultEventsTrackUrl} from '../../config-defaults';\nimport * as clientLocalStorage from '../../storage/client-local';\nimport {error, isBrowser, throttle} from '../../util';\n\nconst uuid = () =>\n    'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n\nconst btoa = (str) =>\n    isBrowser()\n        ? window.btoa(str)\n        : Buffer.from(str.toString(), 'binary').toString('base64');\n\nconst createTrackerClient = () => {\n    let id = clientLocalStorage.get('client-id');\n    if (id?.data) id = id.data;\n\n    if (!id) id = uuid();\n\n    clientLocalStorage.set('client-id', id);\n\n    return {id};\n};\n\nfunction getPool() {\n    const data = clientLocalStorage.get('event-tracker-pool');\n\n    return Array.isArray(data)\n        ? data.filter(({_i}) => typeof _i === 'string')\n        : [];\n}\n\nconst unloadHandler = () => {\n    clientLocalStorage.set('event-tracker-pool', pool.concat(getPool()));\n};\n\nlet pool;\nclass Tracker {\n    hasMadeInitialDispatch = false;\n    location = {geohash: null, time: null, country: null};\n    constructor(options) {\n        if (!pool) {\n            pool = getPool();\n\n            clientLocalStorage.set('event-tracker-pool', []);\n            if (typeof window !== 'undefined') {\n                window.addEventListener('beforeunload', unloadHandler, false);\n            }\n        }\n\n        for (const key in this.defaultOptions) {\n            this[key] = options?.[key] || this.defaultOptions[key];\n        }\n\n        this.client = options?.client || createTrackerClient();\n        this.eventsTrackUrl = options?.eventsTrackUrl || defaultEventsTrackUrl;\n\n        if (this.eventsTrackUrl) {\n            dispatch(this.eventsTrackUrl);\n            this.hasMadeInitialDispatch = true;\n        }\n    }\n    setEventsTrackUrl(eventsTrackUrl) {\n        this.eventsTrackUrl = eventsTrackUrl;\n        if (!this.hasMadeInitialDispatch) {\n            dispatch(this.eventsTrackUrl);\n            this.hasMadeInitialDispatch = true;\n        }\n    }\n    trackEvent(type, properties, version = 2) {\n        if (typeof type !== 'number')\n            throw error(new Error('Event type is required'));\n\n        if (!this.trackId) return;\n\n        const evt = Object.assign({}, properties, {\n            _e: type,\n            _v: version,\n            _i: uuid(),\n            _t: Math.round(new Date().getTime() / 1000),\n            _a: this.trackId\n        });\n\n        if (this.location.geohash) evt['l.h'] = this.location.geohash;\n\n        if (this.location.time) evt['l.ht'] = this.location.time;\n\n        if (this.location.country) evt['l.c'] = this.location.country;\n\n        pool.push(evt);\n        while (pool.length > this.poolLimit) pool.shift();\n\n        dispatch(this.eventsTrackUrl);\n\n        return this;\n    }\n\n    setLocation(location) {\n        for (const key in location) this.location[key] = location[key];\n\n        return this;\n    }\n\n    trackPagedPublicationOpened(properties, version) {\n        return this.trackEvent(1, properties, version);\n    }\n\n    trackPagedPublicationPageDisappeared(properties, version) {\n        return this.trackEvent(2, properties, version);\n    }\n\n    trackOfferOpened(properties, version) {\n        return this.trackEvent(3, properties, version);\n    }\n\n    trackSearched(properties, version) {\n        return this.trackEvent(5, properties, version);\n    }\n\n    trackIncitoPublicationOpened(properties, version) {\n        return this.trackEvent(11, properties, version);\n    }\n\n    createViewToken(...parts) {\n        return btoa(\n            String.fromCharCode.apply(\n                null,\n                md5([this.client.id].concat(parts).join(''), {\n                    asBytes: true\n                }).slice(0, 8)\n            )\n        );\n    }\n}\nTracker.prototype.defaultOptions = {\n    trackId: null,\n    poolLimit: 1000\n};\nexport default Tracker;\n\nlet dispatching = false;\nconst dispatchLimit = 100;\n\nlet dispatchRetryInterval = null;\nconst dispatch = throttle(async (eventsTrackUrl) => {\n    if (!pool) {\n        console.warn('Tracker: dispatch called with no active event pool.');\n        return;\n    }\n\n    if (dispatching || !pool?.length) return;\n\n    const events = pool.slice(0, dispatchLimit);\n    let nacks = 0;\n    dispatching = true;\n\n    try {\n        const response = await fetch(eventsTrackUrl, {\n            method: 'post',\n            timeout: 1000 * 20,\n            headers: {'Content-Type': 'application/json; charset=utf-8'},\n            body: JSON.stringify({events})\n        });\n        const json = await response.json();\n\n        if (dispatchRetryInterval) {\n            dispatchRetryInterval = clearInterval(dispatchRetryInterval);\n        }\n\n        for (let i = 0; i < json.events.length; i++) {\n            const {status, id} = json.events[i];\n\n            if (status === 'validation_error' || status === 'ack') {\n                pool = pool.filter(({_i}) => _i !== id);\n            } else {\n                nacks++;\n            }\n        }\n\n        // Keep dispatching until the pool size reaches a sane level.\n        if (pool.length >= dispatchLimit && !nacks) dispatch(eventsTrackUrl);\n    } catch (err) {\n        // Try dispatching again in 20 seconds, if we aren't already trying\n        if (!dispatchRetryInterval) {\n            console.warn(\n                \"We're gonna keep trying, but there was an error while dispatching events:\",\n                err\n            );\n\n            dispatchRetryInterval = setInterval(() => {\n                dispatch(eventsTrackUrl);\n            }, 20000);\n        }\n    } finally {\n        dispatching = false;\n    }\n}, 4000);\n"],"names":["eventsTrackUrl","prefixKey","storage","ensureStorage","window","localStorage","error","get","key","JSON","parse","set","value","_JSON$stringify","isBrowser","document","err","options","message","code","name","stack","time","Date","throttle","fn","threshold","scope","last","deferTimer","context","now","getTime","args","arguments","clearTimeout","setTimeout","apply","uuid","replace","c","r","Math","random","toString","btoa","str","Buffer","from","createTrackerClient","id","clientLocalStorage","data","getPool","Array","isArray","_filterInstanceProperty","_i","unloadHandler","_concatInstanceProperty","pool","Tracker","hasMadeInitialDispatch","location","geohash","country","addEventListener","defaultOptions","client","defaultEventsTrackUrl","dispatch","setEventsTrackUrl","trackEvent","type","properties","version","Error","trackId","evt","_Object$assign","_e","_v","_t","round","_a","push","length","poolLimit","shift","setLocation","trackPagedPublicationOpened","trackPagedPublicationPageDisappeared","trackOfferOpened","trackSearched","trackIncitoPublicationOpened","createViewToken","parts","String","fromCharCode","_sliceInstanceProperty","md5","join","asBytes","prototype","dispatching","dispatchLimit","dispatchRetryInterval","_asyncToGenerator","_regeneratorRuntime","console","warn","events","nacks","fetch","method","timeout","headers","body","response","json","clearInterval","i","status","setInterval"],"mappings":"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"}