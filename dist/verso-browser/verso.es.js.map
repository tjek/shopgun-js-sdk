{"version":3,"file":"verso.es.js","sources":["../../lib/verso-browser/animation.js","../../lib/verso-browser/page_spread.js","../../lib/verso-browser/vendor/hammer/Input.js","../../lib/verso-browser/vendor/hammer/input/touch.js","../../lib/verso-browser/vendor/hammer/input/mouse.js","../../lib/verso-browser/vendor/hammer/input/pointerevent.js","../../lib/verso-browser/vendor/hammer/input/touchmouse.js","../../lib/verso-browser/vendor/hammer/Recognizer.js","../../lib/verso-browser/vendor/hammer/utils/prefixed.js","../../lib/verso-browser/vendor/hammer/TouchAction.js","../../lib/verso-browser/vendor/hammer/Manager.js","../../lib/verso-browser/vendor/hammer/recognizers/attribute.js","../../lib/verso-browser/vendor/hammer/recognizers/pan.js","../../lib/verso-browser/vendor/hammer/recognizers/pinch.js","../../lib/verso-browser/vendor/hammer/recognizers/press.js","../../lib/verso-browser/vendor/hammer/recognizers/tap.js","../../lib/verso-browser/verso.js"],"sourcesContent":["export default class Animation {\n    run = 0;\n    constructor(el) {\n        this.el = el;\n    }\n\n    animate(\n        {x = 0, y = 0, scale = 1, easing = 'ease-out', duration = 0} = {},\n        callback\n    ) {\n        const run = ++this.run;\n        const transform = `translateX(${x}) translateY(${y}) scale(${scale})`;\n\n        if (this.el.style.transform === transform) {\n            callback?.();\n        } else if (duration > 0) {\n            const transitionEnd = () => {\n                if (run !== this.run) return;\n\n                this.el.removeEventListener('transitionend', transitionEnd);\n                this.el.style.transition = 'none';\n\n                callback?.();\n            };\n\n            this.el.addEventListener('transitionend', transitionEnd, false);\n\n            this.el.style.transition = `transform ${easing} ${duration}ms`;\n            this.el.style.transform = transform;\n        } else {\n            this.el.style.transition = 'none';\n            this.el.style.transform = transform;\n\n            callback?.();\n        }\n\n        return this;\n    }\n}\n","import './page_spread.styl';\n\nexport default class PageSpread {\n    visibility = 'gone';\n    positioned = false;\n    active = false;\n    constructor(el, options = {}) {\n        this.el = el;\n        this.options = options;\n        this.id = this.options.id;\n        this.type = this.options.type;\n        this.pageIds = this.options.pageIds;\n        this.width = this.options.width;\n        this.left = this.options.left;\n        this.maxZoomScale = this.options.maxZoomScale;\n    }\n\n    isZoomable() {\n        return (\n            this.getMaxZoomScale() > 1 &&\n            this.getEl().dataset.zoomable !== 'false'\n        );\n    }\n\n    isScrollable() {\n        return this.getEl().classList.contains('verso--scrollable');\n    }\n\n    getEl() {\n        return this.el;\n    }\n\n    getOverlayEls() {\n        return this.getEl().querySelectorAll('.verso__overlay');\n    }\n\n    getPageEls() {\n        return this.getEl().querySelectorAll('.verso__page');\n    }\n\n    getRect() {\n        return this.getEl().getBoundingClientRect();\n    }\n\n    getContentRect() {\n        const rect = {\n            top: null,\n            left: null,\n            right: null,\n            bottom: null,\n            width: null,\n            height: null\n        };\n\n        const pageEls = this.getPageEls();\n        for (let idx = 0; idx < pageEls.length; idx++) {\n            const pageEl = pageEls[idx];\n            const pageRect = pageEl.getBoundingClientRect();\n\n            if (pageRect.top < rect.top || rect.top == null) {\n                rect.top = pageRect.top;\n            }\n            if (pageRect.left < rect.left || rect.left == null) {\n                rect.left = pageRect.left;\n            }\n            if (pageRect.right > rect.right || rect.right == null) {\n                rect.right = pageRect.right;\n            }\n            if (pageRect.bottom > rect.bottom || rect.bottom == null) {\n                rect.bottom = pageRect.bottom;\n            }\n        }\n\n        rect.top = rect.top ?? 0;\n        rect.left = rect.left ?? 0;\n        rect.right = rect.right ?? 0;\n        rect.bottom = rect.bottom ?? 0;\n        rect.width = rect.right - rect.left;\n        rect.height = rect.bottom - rect.top;\n\n        return rect;\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    getPageIds() {\n        return this.pageIds;\n    }\n\n    getWidth() {\n        return this.width;\n    }\n\n    getLeft() {\n        return this.left;\n    }\n\n    getMaxZoomScale() {\n        return this.maxZoomScale;\n    }\n\n    getVisibility() {\n        return this.visibility;\n    }\n\n    setVisibility(visibility) {\n        if (this.visibility !== visibility) {\n            this.getEl().style.display =\n                visibility === 'visible' ? 'block' : 'none';\n\n            this.visibility = visibility;\n        }\n\n        return this;\n    }\n\n    position() {\n        if (!this.positioned) {\n            this.getEl().style.left = `${this.getLeft()}%`;\n\n            this.positioned = true;\n        }\n\n        return this;\n    }\n\n    activate() {\n        this.active = true;\n        this.getEl().dataset.active = this.active;\n    }\n\n    deactivate() {\n        this.active = false;\n        this.getEl().dataset.active = this.active;\n    }\n}\n","export const INPUT_TYPE_TOUCH = 'touch';\nexport const INPUT_TYPE_MOUSE = 'mouse';\n\nconst COMPUTE_INTERVAL = 25;\n\nexport const INPUT_START = 1;\nexport const INPUT_MOVE = 2;\nexport const INPUT_END = 4;\nexport const INPUT_CANCEL = 8;\n\nexport const DIRECTION_NONE = 1;\nexport const DIRECTION_LEFT = 2;\nexport const DIRECTION_RIGHT = 4;\nexport const DIRECTION_UP = 8;\nexport const DIRECTION_DOWN = 16;\n\nexport const DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nexport const DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nexport const DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nconst PROPS_XY = ['x', 'y'];\nconst PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\nexport const TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\n/**\n * @private\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nexport function getDistance(p1, p2, props = PROPS_XY) {\n    const x = p2[props[0]] - p1[props[0]];\n    const y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * @private\n * direction cons to string\n * @param {constant} direction\n * @returns {String}\n */\nexport function directionStr(direction) {\n    if (direction === DIRECTION_DOWN) return 'down';\n\n    if (direction === DIRECTION_UP) return 'up';\n\n    if (direction === DIRECTION_LEFT) return 'left';\n\n    if (direction === DIRECTION_RIGHT) return 'right';\n\n    return '';\n}\n\nfunction getAngle(p1, p2, props = PROPS_XY) {\n    const x = p2[props[0]] - p1[props[0]];\n    const y = p2[props[1]] - p1[props[1]];\n    return (Math.atan2(y, x) * 180) / Math.PI;\n}\n\nfunction getCenter(pointers) {\n    let x = 0;\n    let y = 0;\n    pointers.forEach((pointer) => {\n        x += pointer.clientX;\n        y += pointer.clientY;\n    });\n\n    return {\n        x: Math.round(x / pointers.length),\n        y: Math.round(y / pointers.length)\n    };\n}\n\nconst getRotation = (start, end) =>\n    getAngle(end[1], end[0], PROPS_CLIENT_XY) +\n    getAngle(start[1], start[0], PROPS_CLIENT_XY);\n\nconst getScale = (start, end) =>\n    getDistance(end[0], end[1], PROPS_CLIENT_XY) /\n    getDistance(start[0], start[1], PROPS_CLIENT_XY);\n\nconst getDirection = (x, y) =>\n    x === y\n        ? DIRECTION_NONE\n        : Math.abs(x) >= Math.abs(y)\n        ? x < 0\n            ? DIRECTION_LEFT\n            : DIRECTION_RIGHT\n        : y < 0\n        ? DIRECTION_UP\n        : DIRECTION_DOWN;\n\nconst getVelocity = (deltaTime, x, y) => ({\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n});\n\n/**\n * @private\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    const last = session.lastInterval || input;\n    const deltaTime = input.timeStamp - last.timeStamp;\n    let velocity;\n    let velocityX;\n    let velocityY;\n    let direction;\n\n    if (\n        input.eventType !== INPUT_CANCEL &&\n        (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)\n    ) {\n        const deltaX = input.deltaX - last.deltaX;\n        const deltaY = input.deltaY - last.deltaY;\n\n        const v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = Math.abs(v.x) > Math.abs(v.y) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\nfunction computeDeltaXY(session, input) {\n    const {center} = input;\n    // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;\n    // jscs throwing error on defalut destructured values and without defaults tests fail\n    let offset = session.offsetDelta || {};\n    let prevDelta = session.prevDelta || {};\n    const prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * @private\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    const pointers = input.pointers.map(({clientX, clientY}) => ({\n        clientX: Math.round(clientX),\n        clientY: Math.round(clientY)\n    }));\n\n    return {\n        timeStamp: Date.now(),\n        pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * @private\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    const {session} = manager;\n    const {pointers} = input;\n    const {length: pointersLength} = pointers;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) session.firstInput = simpleCloneInputData(input);\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    const {firstInput, firstMultiple} = session;\n    const offsetCenter = firstMultiple\n        ? firstMultiple.center\n        : firstInput.center;\n\n    input.center = getCenter(pointers);\n    input.timeStamp = Date.now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, input.center);\n    input.distance = getDistance(offsetCenter, input.center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    const overallVelocity = getVelocity(\n        input.deltaTime,\n        input.deltaX,\n        input.deltaY\n    );\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity =\n        Math.abs(overallVelocity.x) > Math.abs(overallVelocity.y)\n            ? overallVelocity.x\n            : overallVelocity.y;\n\n    input.scale = firstMultiple\n        ? getScale(firstMultiple.pointers, pointers)\n        : 1;\n    input.rotation = firstMultiple\n        ? getRotation(firstMultiple.pointers, pointers)\n        : 0;\n\n    input.maxPointers = !session.prevInput\n        ? input.pointers.length\n        : input.pointers.length > session.prevInput.maxPointers\n        ? input.pointers.length\n        : session.prevInput.maxPointers;\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    input.target = manager.element.contains(input.srcEvent.target)\n        ? input.srcEvent.target\n        : manager.element;\n}\n\n/**\n * @private\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    const pointersLen = input.pointers.length;\n    const changedPointersLen = input.changedPointers.length;\n    const isFirst =\n        eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n    const isFinal =\n        eventType & (INPUT_END | INPUT_CANCEL) &&\n        pointersLen - changedPointersLen === 0;\n\n    input.isFirst = Boolean(isFirst);\n    input.isFinal = Boolean(isFinal);\n\n    if (isFirst) manager.session = {};\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\nconst addEventListeners = (target, types, handler) =>\n    types\n        .trim()\n        .split(/\\s+/g)\n        .forEach((type) => {\n            target.addEventListener(type, handler, false);\n        });\n\nconst removeEventListeners = (target, types, handler) =>\n    types\n        .trim()\n        .split(/\\s+/g)\n        .forEach((type) => {\n            target.removeEventListener(type, handler, false);\n        });\n\n/**\n * @private\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    const {defaultView, parentWindow} = element.ownerDocument || element;\n    return (\n        defaultView || parentWindow || (typeof window !== 'undefined' && window)\n    );\n}\n\n/**\n * @private\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nexport default class Input {\n    constructor(manager) {\n        this.manager = manager;\n        this.callback = inputHandler;\n        this.element = manager.element;\n        this.target = manager.options.inputTarget;\n\n        // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n        // so when disabled the input events are completely bypassed.\n        this.domHandler = (ev) => {\n            if (manager.options.enable) this.handler(ev);\n        };\n    }\n    /**\n     * @private\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler() {}\n\n    /**\n     * @private\n     * bind the events\n     */\n    init() {\n        const {element, evEl, evTarget, evWin, domHandler, target} = this;\n\n        if (evEl) addEventListeners(element, evEl, domHandler);\n\n        if (evTarget) addEventListeners(target, evTarget, domHandler);\n\n        if (evWin) {\n            addEventListeners(getWindowForElement(element), evWin, domHandler);\n        }\n    }\n\n    /**\n     * @private\n     * unbind the events\n     */\n    destroy() {\n        const {element, evEl, evTarget, evWin, domHandler, target} = this;\n\n        if (evEl) removeEventListeners(element, evEl, domHandler);\n\n        if (evTarget) removeEventListeners(target, evTarget, domHandler);\n\n        if (evWin) {\n            removeEventListeners(\n                getWindowForElement(element),\n                evWin,\n                domHandler\n            );\n        }\n    }\n}\n","import Input, {\n    INPUT_CANCEL,\n    INPUT_END,\n    INPUT_MOVE,\n    INPUT_START,\n    INPUT_TYPE_TOUCH,\n    TOUCH_INPUT_MAP\n} from '../Input';\n\n/**\n * @private\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nexport default class TouchInput extends Input {\n    evTarget = 'touchstart touchmove touchend touchcancel';\n    targetIds = {};\n    constructor() {\n        super(...arguments);\n\n        this.init();\n    }\n\n    handler(ev) {\n        const type = TOUCH_INPUT_MAP[ev.type];\n        const touches = this.getTouches(ev, type);\n        if (!touches) return;\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n    getTouches(ev, type) {\n        const allTouches = Array.from(ev.touches);\n        const {targetIds} = this;\n\n        // when there is only one touch, the process can be simplified\n        if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n            targetIds[allTouches[0].identifier] = true;\n            return [allTouches, allTouches];\n        }\n\n        // get target touches from touches\n        const targetTouches = allTouches.filter((touch) =>\n            this.target.contains(touch.target)\n        );\n\n        // collect touches\n        if (type === INPUT_START) {\n            targetTouches.forEach((targetTouch) => {\n                targetIds[targetTouch.identifier] = true;\n            });\n        }\n\n        // filter changed touches to only contain touches that exist in the collected target ids\n        const changedTargetTouches = [];\n        Array.from(ev.changedTouches).forEach((changedTouch) => {\n            if (targetIds[changedTouch.identifier]) {\n                changedTargetTouches.push(changedTouch);\n            }\n\n            // cleanup removed touches\n            if (type & (INPUT_END | INPUT_CANCEL)) {\n                delete targetIds[changedTouch.identifier];\n            }\n        });\n\n        if (!changedTargetTouches.length) return;\n\n        return [\n            targetTouches\n                .concat(changedTargetTouches)\n                .filter(\n                    (item, i, list) =>\n                        list.findIndex(\n                            ({identifier}) => identifier === item.identifier\n                        ) === i\n                ),\n            changedTargetTouches\n        ];\n    }\n}\n","import Input, {\n    INPUT_END,\n    INPUT_MOVE,\n    INPUT_START,\n    INPUT_TYPE_MOUSE\n} from '../Input';\n\nconst MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nconst MOUSE_ELEMENT_EVENTS = 'mousedown';\nconst MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * @private\n * Mouse events input\n * @constructor\n * @extends Input\n */\nexport default class MouseInput extends Input {\n    evEl = MOUSE_ELEMENT_EVENTS;\n    evWin = MOUSE_WINDOW_EVENTS;\n    pressed = false; // mousedown state\n    constructor() {\n        super(...arguments);\n\n        this.init();\n    }\n\n    /**\n     * @private\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler(ev) {\n        let eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) this.pressed = true;\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) eventType = INPUT_END;\n\n        // mouse must be down\n        if (!this.pressed) return;\n\n        if (eventType & INPUT_END) this.pressed = false;\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n}\n","import Input, {\n    INPUT_CANCEL,\n    INPUT_END,\n    INPUT_MOVE,\n    INPUT_START,\n    INPUT_TYPE_TOUCH\n} from '../Input';\n\nconst POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\nconst POINTER_ELEMENT_EVENTS = 'pointerdown';\nconst POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n/**\n * @private\n * Pointer events input\n * @constructor\n * @extends Input\n */\nexport default class PointerEventInput extends Input {\n    evEl = POINTER_ELEMENT_EVENTS;\n    evWin = POINTER_WINDOW_EVENTS;\n    constructor() {\n        super(...arguments);\n\n        this.store = this.manager.session.pointerEvents = [];\n\n        this.init();\n    }\n\n    /**\n     * @private\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler(ev) {\n        const {store} = this;\n        let removePointer = false;\n\n        const eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        const eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        const pointerType = ev.pointerType;\n\n        const isTouch = pointerType === INPUT_TYPE_TOUCH;\n\n        // get index of the event in the store\n        let storeIndex = store.findIndex(\n            ({pointerId}) => pointerId === ev.pointerId\n        );\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) return;\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType,\n            srcEvent: ev\n        });\n\n        // remove from the store\n        if (removePointer) store.splice(storeIndex, 1);\n    }\n}\n","import Input, {\n    INPUT_CANCEL,\n    INPUT_END,\n    INPUT_START,\n    INPUT_TYPE_MOUSE,\n    INPUT_TYPE_TOUCH\n} from '../Input';\nimport MouseInput from './mouse';\nimport TouchInput from './touch';\n\n/**\n * @private\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nconst DEDUP_TIMEOUT = 2500;\nconst DEDUP_DISTANCE = 25;\n\nexport default class TouchMouseInput extends Input {\n    primaryTouch = null;\n    lastTouches = [];\n    constructor() {\n        super(...arguments);\n\n        this.touch = new TouchInput(this.manager, this.handler);\n        this.mouse = new MouseInput(this.manager, this.handler);\n\n        this.init();\n    }\n\n    /**\n     * @private\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler = (manager, inputEvent, inputData) => {\n        const isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;\n        const isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;\n\n        if (\n            isMouse &&\n            inputData.sourceCapabilities &&\n            inputData.sourceCapabilities.firesTouchEvents\n        ) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            if (inputEvent & INPUT_START) {\n                this.primaryTouch = inputData.changedPointers[0].identifier;\n                this.setLastTouch(inputData);\n            } else if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n                this.setLastTouch(inputData);\n            }\n        } else if (isMouse && this.isSyntheticEvent(inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    };\n\n    /**\n     * @private\n     * remove the event listeners\n     */\n    destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n\n    isSyntheticEvent({srcEvent: {clientX, clientY}}) {\n        return this.lastTouches.some(\n            ({x, y}) =>\n                Math.abs(clientX - x) <= DEDUP_DISTANCE &&\n                Math.abs(clientY - y) <= DEDUP_DISTANCE\n        );\n    }\n\n    setLastTouch({changedPointers: [{identifier, clientX, clientY}]}) {\n        if (identifier === this.primaryTouch) {\n            const lastTouch = {x: clientX, y: clientY};\n            this.lastTouches.push(lastTouch);\n            const lts = this.lastTouches;\n            setTimeout(() => {\n                const i = lts.indexOf(lastTouch);\n                if (i > -1) lts.splice(i, 1);\n            }, DEDUP_TIMEOUT);\n        }\n    }\n}\n","export const STATE_POSSIBLE = 1;\nexport const STATE_BEGAN = 2;\nexport const STATE_CHANGED = 4;\nexport const STATE_ENDED = 8;\nexport const STATE_RECOGNIZED = STATE_ENDED;\nexport const STATE_CANCELLED = 16;\nexport const STATE_FAILED = 32;\n\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) return 'cancel';\n\n    if (state & STATE_ENDED) return 'end';\n\n    if (state & STATE_CHANGED) return 'move';\n\n    if (state & STATE_BEGAN) return 'start';\n\n    return '';\n}\n\n/**\n * @private\n * get a unique id\n * @returns {number} uniqueId\n */\nlet _uniqueId = 1;\nconst uniqueId = () => _uniqueId++;\n\n/**\n * @private\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n\n/**\n * @private\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nexport default class Recognizer {\n    id = uniqueId();\n    manager = null;\n    state = STATE_POSSIBLE;\n    simultaneous = {};\n    constructor(options) {\n        this.options = {...this.defaults, ...options};\n        this.options.enable = this.options.enable ?? true;\n    }\n\n    /**\n     * @private\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set(options) {\n        Object.assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        if (this.manager) this.manager.touchAction.update();\n\n        return this;\n    }\n\n    /**\n     * @private\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit(input) {\n        const {manager, options, state} = this;\n\n        const emit = (event) => manager.emit(event, input);\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) emit(options.event + stateStr(state));\n\n        emit(this.options.event); // simple 'eventName' events\n\n        // additional event(panleft, panright, pinchin, pinchout...)\n        if (input.additionalEvent) emit(input.additionalEvent);\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) emit(options.event + stateStr(state));\n    }\n\n    /**\n     * @private\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n\n        // is is enabled and allow recognizing?\n        if (!this.options.enable) {\n            this.reset();\n            this.state = STATE_FAILED;\n\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        const inputDataClone = {...inputData};\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (\n            this.state &\n            (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)\n        ) {\n            this.emit(inputDataClone);\n        }\n    }\n\n    /**\n     * @private\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {constant} STATE\n     */\n\n    /* jshint ignore:start */\n    process() {}\n    /* jshint ignore:end */\n\n    /**\n     * @private\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction() {}\n\n    /**\n     * @private\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset() {}\n}\n","const VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n/**\n * @private\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nexport default function prefixed(obj, property) {\n    const camelProp = property[0].toUpperCase() + property.slice(1);\n\n    return VENDOR_PREFIXES.find(\n        (prefix) => (prefix ? prefix + camelProp : property) in obj\n    );\n}\n","import {DIRECTION_HORIZONTAL, DIRECTION_VERTICAL} from './Input';\nimport prefixed from './utils/prefixed';\n\nconst PREFIXED_TOUCH_ACTION =\n    typeof document !== 'undefined' &&\n    prefixed(document.createElement('div').style, 'touchAction');\n\n// magical touchAction value\nexport const TOUCH_ACTION_COMPUTE = 'compute';\nexport const TOUCH_ACTION_AUTO = 'auto';\nexport const TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nexport const TOUCH_ACTION_PAN_X = 'pan-x';\nexport const TOUCH_ACTION_PAN_Y = 'pan-y';\nexport const TOUCH_ACTION_NONE = 'none';\nconst actions = [\n    'auto',\n    'manipulation',\n    'pan-y',\n    'pan-x',\n    'pan-x pan-y',\n    'none'\n];\nconst cssSupports = typeof window !== 'undefined' && window.CSS?.supports;\nconst TOUCH_ACTION_MAP =\n    PREFIXED_TOUCH_ACTION &&\n    actions.reduce((touchMap, val) => {\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? cssSupports('touch-action', val) : true;\n\n        return touchMap;\n    }, {});\n\nfunction cleanTouchActions(actions) {\n    // none\n    if (actions.includes(TOUCH_ACTION_NONE)) return TOUCH_ACTION_NONE;\n\n    const hasPanX = actions.includes(TOUCH_ACTION_PAN_X);\n    const hasPanY = actions.includes(TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) return TOUCH_ACTION_NONE;\n\n    // pan-x OR pan-y\n    if (hasPanX) return TOUCH_ACTION_PAN_X;\n\n    if (hasPanY) return TOUCH_ACTION_PAN_Y;\n\n    // manipulation\n    const hasManipulation = actions.includes(TOUCH_ACTION_MANIPULATION);\n    if (hasManipulation) return TOUCH_ACTION_MANIPULATION;\n\n    return TOUCH_ACTION_AUTO;\n}\n\n/**\n * @private\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nexport default class TouchAction {\n    constructor(manager, value) {\n        this.manager = manager;\n        this.set(value);\n    }\n\n    /**\n     * @private\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set(value) {\n        // find out the touch-action by the event handlers\n        if (value === TOUCH_ACTION_COMPUTE) value = this.compute();\n\n        if (\n            PREFIXED_TOUCH_ACTION &&\n            this.manager.element.style &&\n            TOUCH_ACTION_MAP[value]\n        ) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    }\n\n    /**\n     * @private\n     * just re-set the touchAction value\n     */\n    update() {\n        this.set(this.manager.options.touchAction);\n    }\n\n    /**\n     * @private\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute() {\n        return cleanTouchActions(\n            this.manager.recognizers\n                .reduce(\n                    (actions, recognizer) =>\n                        recognizer.options.enable\n                            ? actions.concat(recognizer.getTouchAction())\n                            : actions,\n                    []\n                )\n                .join(' ')\n        );\n    }\n\n    /**\n     * @private\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults({\n        srcEvent,\n        pointers,\n        distance,\n        deltaTime,\n        offsetDirection\n    }) {\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) return srcEvent.preventDefault();\n\n        const hasNone =\n            this.actions.includes(TOUCH_ACTION_NONE) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n\n        // do not prevent defaults if this is a tap gesture\n        if (hasNone && pointers.length === 1 && distance < 2 && deltaTime < 250)\n            return;\n\n        const hasPanY =\n            this.actions.includes(TOUCH_ACTION_PAN_Y) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        const hasPanX =\n            this.actions.includes(TOUCH_ACTION_PAN_X) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n        if (hasPanX && hasPanY) return;\n\n        if (\n            hasNone ||\n            (hasPanY && offsetDirection & DIRECTION_HORIZONTAL) ||\n            (hasPanX && offsetDirection & DIRECTION_VERTICAL)\n        ) {\n            this.manager.session.prevented = true;\n            srcEvent.preventDefault();\n        }\n    }\n}\n","import MouseInput from './input/mouse';\nimport PointerEventInput from './input/pointerevent';\nimport TouchInput from './input/touch';\nimport TouchMouseInput from './input/touchmouse';\nimport Recognizer, {\n    STATE_BEGAN,\n    STATE_CHANGED,\n    STATE_ENDED,\n    STATE_RECOGNIZED\n} from './Recognizer';\nimport TouchAction, {TOUCH_ACTION_COMPUTE} from './TouchAction';\nimport prefixed from './utils/prefixed';\n\nconst SUPPORT_TOUCH = typeof window !== 'undefined' && 'ontouchstart' in window;\nconst SUPPORT_ONLY_TOUCH =\n    SUPPORT_TOUCH &&\n    /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent);\nconst SUPPORT_POINTER_EVENTS =\n    typeof window !== 'undefined' && Boolean(prefixed(window, 'PointerEvent'));\n\n/**\n * @private\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    const {inputClass} = manager.options;\n\n    if (inputClass) return new inputClass(manager);\n\n    if (SUPPORT_POINTER_EVENTS) return new PointerEventInput(manager);\n\n    if (SUPPORT_ONLY_TOUCH) return new TouchInput(manager);\n\n    if (!SUPPORT_TOUCH) return new MouseInput(manager);\n\n    return new TouchMouseInput(manager);\n}\n\nconst defaults = {\n    /**\n     * @private\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * @private\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @private\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * @private\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * @private\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * @private\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * @private\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * @private\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * @private\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * @private\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * @private\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\n/**\n * @private\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nexport default class Manager {\n    handlers = {};\n    session = {};\n    recognizers = [];\n    oldCssProps = {};\n    constructor(element, options) {\n        this.options = {...defaults, ...options};\n        this.options.inputTarget = this.options.inputTarget || element;\n\n        this.element = element;\n        this.input = createInputInstance(this);\n        this.touchAction = new TouchAction(this, this.options.touchAction);\n\n        this.toggleCssProps(true);\n\n        this.options.recognizers.forEach(({0: ctor, 1: opts}) => {\n            this.add(new ctor(opts));\n        }, this);\n    }\n\n    /**\n     * @private\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set(options) {\n        Object.assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) this.touchAction.update();\n\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n\n        return this;\n    }\n\n    /**\n     * @private\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize(inputData) {\n        const {session} = this;\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        let {curRecognizer} = session;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (\n            !curRecognizer ||\n            (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)\n        ) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        this.recognizers.forEach((recognizer) => {\n            // find out if we are allowed try to recognize the input for this one.\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            if (!curRecognizer || recognizer === curRecognizer) {\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (\n                !curRecognizer &&\n                recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)\n            ) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n        });\n    }\n\n    /**\n     * @private\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|undefined}\n     */\n    get(recognizer) {\n        return recognizer instanceof Recognizer\n            ? recognizer\n            : this.recognizers.find(\n                  (recogger) => recogger.options.event === recognizer\n              );\n    }\n\n    /**\n     * @private add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add(recognizer) {\n        // remove existing\n        const existing = this.get(recognizer.options.event);\n        if (existing) this.remove(existing);\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n\n        return recognizer;\n    }\n\n    /**\n     * @private\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove(recognizer) {\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            const index = this.recognizers.indexOf(recognizer);\n\n            if (index !== -1) {\n                this.recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @private\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on(events, handler) {\n        if (events === undefined || handler === undefined) return;\n\n        const {handlers} = this;\n        events\n            .trim()\n            .split(/\\s+/g)\n            .forEach((event) => {\n                handlers[event] = handlers[event] || [];\n                handlers[event].push(handler);\n            });\n\n        return this;\n    }\n\n    /**\n     * @private unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off(events, handler) {\n        if (events === undefined) return;\n\n        events\n            .trim()\n            .split(/\\s+/g)\n            .forEach((event) => {\n                if (!handler) {\n                    delete this.handlers[event];\n                } else if (this.handlers[event]) {\n                    this.handlers[event].splice(\n                        this.handlers[event].indexOf(handler),\n                        1\n                    );\n                }\n            });\n\n        return this;\n    }\n\n    /**\n     * @private emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) triggerDomEvent(event, data);\n\n        // no handlers, so skip it all\n        const handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) return;\n\n        data.type = event;\n        data.preventDefault = () => {\n            data.srcEvent.preventDefault();\n        };\n\n        handlers.forEach((handler) => {\n            handler(data);\n        });\n    }\n\n    /**\n     * @private\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy() {\n        if (this.element) this.toggleCssProps(false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n    toggleCssProps(add) {\n        const {element} = this;\n        if (!element.style) return;\n\n        Object.entries(this.options.cssProps).forEach(({0: value, 1: name}) => {\n            const prop = prefixed(element.style, name);\n            if (add) {\n                this.oldCssProps[prop] = element.style[prop];\n                element.style[prop] = value;\n            } else {\n                element.style[prop] = this.oldCssProps[prop] || '';\n            }\n        });\n        if (!add) this.oldCssProps = {};\n    }\n}\n\n/**\n * @private\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    const gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n","import {INPUT_CANCEL, INPUT_END} from '../Input';\nimport Recognizer, {\n    STATE_BEGAN,\n    STATE_CANCELLED,\n    STATE_CHANGED,\n    STATE_ENDED,\n    STATE_FAILED\n} from '../Recognizer';\n\n/**\n * @private\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nexport default class AttrRecognizer extends Recognizer {\n    /**\n     * @private\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest(input) {\n        const optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    }\n\n    /**\n     * @private\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process(input) {\n        const {state} = this;\n\n        const isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        const isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (input.eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        }\n        if (isRecognized || isValid) {\n            if (input.eventType & INPUT_END) return state | STATE_ENDED;\n\n            if (!(state & STATE_BEGAN)) return STATE_BEGAN;\n\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n}\n\nAttrRecognizer.prototype.defaults = {\n    /**\n     * @private\n     * @type {Number}\n     * @default 1\n     */\n    pointers: 1\n};\n","import {\n    directionStr,\n    DIRECTION_ALL,\n    DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL,\n    DIRECTION_LEFT,\n    DIRECTION_NONE,\n    DIRECTION_RIGHT,\n    DIRECTION_UP,\n    DIRECTION_VERTICAL\n} from '../Input';\nimport {STATE_BEGAN} from '../Recognizer';\nimport {TOUCH_ACTION_PAN_X, TOUCH_ACTION_PAN_Y} from '../TouchAction';\nimport AttrRecognizer from './attribute';\n\n/**\n * @private\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nexport default class PanRecognizer extends AttrRecognizer {\n    pX = null;\n    pY = null;\n\n    getTouchAction() {\n        const {\n            options: {direction}\n        } = this;\n\n        const actions = [];\n        if (direction & DIRECTION_HORIZONTAL) actions.push(TOUCH_ACTION_PAN_Y);\n        if (direction & DIRECTION_VERTICAL) actions.push(TOUCH_ACTION_PAN_X);\n\n        return actions;\n    }\n\n    directionTest(input) {\n        const {options} = this;\n\n        const {deltaX, deltaY} = input;\n        let {distance} = input;\n\n        // lock to axis?\n        let hasMoved = true;\n        if (!(input.direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                input.direction =\n                    deltaX === 0\n                        ? DIRECTION_NONE\n                        : deltaX < 0\n                        ? DIRECTION_LEFT\n                        : DIRECTION_RIGHT;\n                hasMoved = deltaX !== this.pX;\n                distance = Math.abs(deltaX);\n            } else {\n                input.direction =\n                    deltaY === 0\n                        ? DIRECTION_NONE\n                        : deltaY < 0\n                        ? DIRECTION_UP\n                        : DIRECTION_DOWN;\n                hasMoved = deltaY !== this.pY;\n                distance = Math.abs(deltaY);\n            }\n        }\n\n        return (\n            hasMoved &&\n            distance > options.threshold &&\n            input.direction & options.direction\n        );\n    }\n\n    attrTest(input) {\n        return (\n            super.attrTest(input) &&\n            (this.state & STATE_BEGAN ||\n                (!(this.state & STATE_BEGAN) && this.directionTest(input)))\n        );\n    }\n\n    emit(input) {\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        const direction = directionStr(input.direction);\n        if (direction) input.additionalEvent = this.options.event + direction;\n\n        super.emit(input);\n    }\n}\n\nPanRecognizer.prototype.defaults = {\n    event: 'pan',\n    threshold: 10,\n    pointers: 1,\n    direction: DIRECTION_ALL\n};\n","import {STATE_BEGAN} from '../Recognizer';\nimport {TOUCH_ACTION_NONE} from '../TouchAction';\nimport AttrRecognizer from './attribute';\n\n/**\n * @private\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nexport default class PinchRecognizer extends AttrRecognizer {\n    getTouchAction() {\n        return [TOUCH_ACTION_NONE];\n    }\n\n    attrTest(input) {\n        return (\n            super.attrTest(input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold ||\n                this.state & STATE_BEGAN)\n        );\n    }\n\n    emit(input) {\n        if (input.scale !== 1) {\n            const inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        super.emit(input);\n    }\n}\n\nPinchRecognizer.prototype.defaults = {\n    event: 'pinch',\n    threshold: 0,\n    pointers: 2\n};\n","import {INPUT_CANCEL, INPUT_END, INPUT_START} from '../Input';\nimport Recognizer, {STATE_FAILED, STATE_RECOGNIZED} from '../Recognizer';\nimport {TOUCH_ACTION_AUTO} from '../TouchAction';\n\n/**\n * @private\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nexport default class PressRecognizer extends Recognizer {\n    _timer = null;\n    _input = null;\n\n    getTouchAction() {\n        return [TOUCH_ACTION_AUTO];\n    }\n\n    process(input) {\n        const {options} = this;\n\n        const validPointers = input.pointers.length === options.pointers;\n        const validMovement = input.distance < options.threshold;\n        const validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (\n            !validMovement ||\n            !validPointers ||\n            (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)\n        ) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeout(() => {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    }\n\n    reset() {\n        clearTimeout(this._timer);\n    }\n\n    emit(input) {\n        if (this.state !== STATE_RECOGNIZED) return;\n\n        if (input && input.eventType & INPUT_END) {\n            this.manager.emit(`${this.options.event}up`, input);\n        } else {\n            this._input.timeStamp = Date.now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n}\n\nPressRecognizer.prototype.defaults = {\n    event: 'press',\n    pointers: 1,\n    time: 251, // minimal time of the pointer to be pressed\n    threshold: 9 // a minimal movement is ok, but keep it low\n};\n","import {getDistance, INPUT_END, INPUT_START} from '../Input';\nimport Recognizer, {STATE_FAILED, STATE_RECOGNIZED} from '../Recognizer';\nimport {TOUCH_ACTION_MANIPULATION} from '../TouchAction';\n\n/**\n * @private\n * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nexport default class TapRecognizer extends Recognizer {\n    // previous time and center,\n    // used for tap counting\n    pTime = false;\n    pCenter = false;\n    _timer = null;\n    _input = null;\n    count = 0;\n\n    getTouchAction() {\n        return [TOUCH_ACTION_MANIPULATION];\n    }\n\n    process(input) {\n        const {options} = this;\n\n        const validPointers = input.pointers.length === options.pointers;\n        const validMovement = input.distance < options.threshold;\n        const validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if (input.eventType & INPUT_START && this.count === 0) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType !== INPUT_END) return this.failTimeout();\n\n            const validInterval = this.pTime\n                ? input.timeStamp - this.pTime < options.interval\n                : true;\n            const validMultiTap =\n                !this.pCenter ||\n                getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            this.count = !validMultiTap || !validInterval ? 1 : this.count + 1;\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            if (this.count % options.taps === 0) return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    }\n\n    failTimeout() {\n        this._timer = setTimeout(() => {\n            this.state = STATE_FAILED;\n        }, this.options.interval);\n        return STATE_FAILED;\n    }\n\n    reset() {\n        clearTimeout(this._timer);\n    }\n\n    emit() {\n        if (this.state === STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n}\n\nTapRecognizer.prototype.defaults = {\n    event: 'tap',\n    pointers: 1,\n    taps: 1,\n    interval: 300, // max time between the multi-tap taps\n    time: 250, // max time of the pointer to be down (like finger on the screen)\n    threshold: 9, // a minimal movement is ok, but keep it low\n    posThreshold: 10 // a multi-tap can be a bit off the initial position\n};\n","import Animation from './animation';\nimport PageSpread from './page_spread';\nimport {\n    DIRECTION_ALL,\n    DIRECTION_LEFT,\n    DIRECTION_RIGHT\n} from './vendor/hammer/Input';\nimport TouchInput from './vendor/hammer/input/touch';\nimport Manager from './vendor/hammer/Manager';\nimport PanRecognizer from './vendor/hammer/recognizers/pan';\nimport PinchRecognizer from './vendor/hammer/recognizers/pinch';\nimport PressRecognizer from './vendor/hammer/recognizers/press';\nimport TapRecognizer from './vendor/hammer/recognizers/tap';\nimport './verso.styl';\n\nconst getHammerInputClass = () =>\n    typeof window !== 'undefined' &&\n    'ontouchstart' in window &&\n    /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent)\n        ? TouchInput\n        : null;\n\nconst buildPageIds = (pageSpreads) =>\n    pageSpreads.reduce((pageIds, pageSpread) => {\n        pageSpread.options.pageIds.forEach((pageId) => {\n            pageIds[pageId] = pageSpread;\n        });\n\n        return pageIds;\n    }, {});\n\nconst clipCoordinate = (coordinate, scale, size, offset) =>\n    size * scale < 100\n        ? offset * -scale + 50 - (size * scale) / 2\n        : Math.max(\n              Math.min(coordinate, offset * -scale),\n              offset * -scale - size * scale + 100\n          );\n\nfunction getPageSpreadBounds(pageSpread) {\n    const pageSpreadRect = pageSpread.getRect();\n    const pageSpreadContentRect = pageSpread.getContentRect();\n\n    return {\n        left:\n            ((pageSpreadContentRect.left - pageSpreadRect.left) /\n                pageSpreadRect.width) *\n            100,\n        top:\n            ((pageSpreadContentRect.top - pageSpreadRect.top) /\n                pageSpreadRect.height) *\n            100,\n        width: (pageSpreadContentRect.width / pageSpreadRect.width) * 100,\n        height: (pageSpreadContentRect.height / pageSpreadRect.height) * 100,\n        pageSpreadRect,\n        pageSpreadContentRect\n    };\n}\n\nfunction isCoordinateInsideElement(x, y, el) {\n    const {left, right, top, bottom} = el.getBoundingClientRect();\n\n    return x >= left && x <= right && y >= top && y <= bottom;\n}\n\nfunction traversePageSpreads(els) {\n    const pageSpreads = [];\n    let left = 0;\n\n    for (let i = 0; i < els.length; i++) {\n        const el = els[i];\n        const width = Number(el.dataset.width ?? 100);\n        const pageSpread = new PageSpread(el, {\n            id: el.dataset.id,\n            type: el.dataset.type,\n            pageIds: el.dataset.pageIds?.split(',') || [],\n            maxZoomScale: Number(el.dataset.maxZoomScale ?? 1),\n            width,\n            left\n        });\n\n        left += width;\n\n        pageSpreads.push(pageSpread);\n    }\n\n    return pageSpreads;\n}\n\nexport default class Verso {\n    position = -1;\n    pinching = false;\n    panning = false;\n    transform = {left: 0, top: 0, scale: 1};\n    startTransform = {left: 0, top: 0, scale: 1};\n    started = false;\n    destroyed = false;\n    _events = {};\n    constructor(el, options = {}) {\n        this.el = el;\n        this.options = options;\n        this.swipeVelocity = this.options.swipeVelocity ?? 0.3;\n        this.swipeThreshold = this.options.swipeThreshold ?? 10;\n        this.navigationDuration = this.options.navigationDuration ?? 240;\n        this.navigationPanDuration = this.options.navigationPanDuration ?? 200;\n        this.zoomDuration = this.options.zoomDuration ?? 200;\n\n        this.tap = {\n            count: 0,\n            delay: this.options.doubleTapDelay ?? 300\n        };\n    }\n    bind(event, fn) {\n        this._events[event] = this._events[event] || [];\n        return this._events[event].push(fn);\n    }\n\n    unbind(event, fn) {\n        if (this._events[event]) {\n            return this._events[event].splice(\n                this._events[event].indexOf(fn),\n                1\n            );\n        }\n    }\n\n    trigger(event, ...args) {\n        this._events[event]?.forEach((e) => {\n            e.apply(this, args);\n        });\n    }\n\n    start() {\n        this.scrollerEl = this.el.querySelector('.verso__scroller');\n        this.pageSpreadEls = this.el.querySelectorAll('.verso__page-spread');\n        this.pageSpreads = traversePageSpreads(this.pageSpreadEls);\n        this.pageIds = buildPageIds(this.pageSpreads);\n        this.animation = new Animation(this.scrollerEl);\n        this.hammer = new Manager(this.scrollerEl, {\n            touchAction: 'none',\n            enable: false,\n            inputClass: getHammerInputClass(),\n            recognizers: [\n                [PanRecognizer, {threshold: 5, direction: DIRECTION_ALL}],\n                [TapRecognizer, {event: 'singletap', interval: 0}],\n                [PinchRecognizer],\n                [PressRecognizer, {time: 500}]\n            ]\n        });\n\n        this.hammer.on('panstart', this.onPanStart);\n        this.hammer.on('panmove', this.onPanMove);\n        this.hammer.on('panend', this.onPanEnd);\n        this.hammer.on('pancancel', this.onPanEnd);\n        this.hammer.on('singletap', this.onSingletap);\n        this.hammer.on('pinchstart', this.onPinchStart);\n        this.hammer.on('pinchmove', this.onPinchMove);\n        this.hammer.on('pinchend', this.onPinchEnd);\n        this.hammer.on('pinchcancel', this.onPinchEnd);\n        this.hammer.on('press', this.onPress);\n\n        this.scrollerEl.addEventListener(\n            'contextmenu',\n            this.onContextmenu,\n            false\n        );\n        this.scrollerEl.addEventListener('wheel', this.onWheel, false);\n        const pageId =\n            this.getPageSpreadPositionFromPageId(this.options.pageId) ?? 0;\n\n        this.hammer.set({enable: true});\n        this.started = true;\n        this.destroyed = false;\n        this.navigateTo(pageId, {duration: 0});\n\n        this.el.addEventListener('touchstart', this.onTouchStart, false);\n        this.el.addEventListener('touchend', this.onTouchEnd, false);\n\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this.onResize, false);\n        }\n\n        return this;\n    }\n\n    destroy() {\n        if (!this.started) {\n            return console.warn(\n                \"You've called .destroy() on a viewer that was not started yet, this is a no-op.\"\n            );\n        }\n        if (this.destroyed) {\n            return console.warn(\n                \"You've called .destroy() on a viewer that has already been destroyed and not restarted, this is a no-op.\"\n            );\n        }\n        this.scrollerEl.removeEventListener('contextmenu', this.onContextmenu);\n        this.scrollerEl.removeEventListener('wheel', this.onWheel);\n\n        this.hammer.destroy();\n\n        this.el.removeEventListener('touchstart', this.onTouchStart);\n        this.el.removeEventListener('touchend', this.onTouchEnd);\n\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this.onResize);\n        }\n\n        this.started = false;\n        this.destroyed = true;\n        return this;\n    }\n\n    first(options) {\n        return this.navigateTo(0, options);\n    }\n\n    prev(options) {\n        return this.navigateTo(this.getPosition() - 1, options);\n    }\n\n    next(options) {\n        return this.navigateTo(this.getPosition() + 1, options);\n    }\n\n    last(options) {\n        return this.navigateTo(this.getPageSpreadCount() - 1, options);\n    }\n\n    navigateTo(newPosition, options) {\n        if (this.destroyed) {\n            return console.warn(`\\\nYou've called a navigation method on a viewer that was previously destroyed, this is a no-op.\nPlease call viewer.start() again, if you want to reuse this Viewer instance.\n\nYou might have forgotten to remove an event handler that\ncalls first/prev/next/last/navigateTo on the viewer.\\\n`);\n        }\n        if (!this.started) {\n            return console.warn(`\nYou've called a navigation method on a viewer that hasn't been started yet, this is a no-op.\nPlease call viewer.start() first.\n\nYou might have forgotten to remove an event handler that\ncalls .first()/.prev()/.next()/.last()/.navigateTo() on the viewer.\n`);\n        }\n\n        if (newPosition < 0 || newPosition > this.getPageSpreadCount() - 1) {\n            return;\n        }\n\n        const currentPosition = this.getPosition();\n        const currentPageSpread =\n            this.getPageSpreadFromPosition(currentPosition);\n        const activePageSpread = this.getPageSpreadFromPosition(newPosition);\n        let carousel = this.getCarouselFromPageSpread(activePageSpread);\n        const velocity = options?.velocity ?? 1;\n        let duration = options?.duration ?? this.navigationDuration;\n        duration = duration / Math.abs(velocity);\n        const touchAction = activePageSpread.isScrollable() ? 'pan-y' : 'none';\n\n        currentPageSpread?.deactivate();\n        activePageSpread.activate();\n\n        carousel.visible.forEach((pageSpread) => {\n            pageSpread.position().setVisibility('visible');\n        });\n\n        this.hammer.set({touchAction});\n\n        this.transform.left = this.getLeftTransformFromPageSpread(\n            newPosition,\n            activePageSpread\n        );\n        this.setPosition(newPosition);\n\n        if (this.transform.scale > 1) {\n            this.transform.top = 0;\n            this.transform.scale = 1;\n\n            this.trigger('zoomedOut', {position: currentPosition});\n        }\n\n        this.trigger('beforeNavigation', {currentPosition, newPosition});\n\n        this.animation.animate({x: this.transform.left + '%', duration}, () => {\n            carousel = this.getCarouselFromPageSpread(\n                this.getActivePageSpread()\n            );\n\n            carousel.gone.forEach((pageSpread) => {\n                pageSpread.setVisibility('gone');\n            });\n\n            this.trigger('afterNavigation', {\n                newPosition: this.getPosition(),\n                previousPosition: currentPosition\n            });\n        });\n    }\n\n    getPosition() {\n        return this.position;\n    }\n\n    setPosition(position) {\n        this.position = position;\n\n        return this;\n    }\n\n    getLeftTransformFromPageSpread(position, pageSpread) {\n        if (position === this.getPageSpreadCount() - 1) {\n            return 100 - pageSpread.getWidth() - pageSpread.getLeft();\n        }\n        if (position > 0) {\n            return (100 - pageSpread.getWidth()) / 2 - pageSpread.getLeft();\n        }\n\n        return 0;\n    }\n\n    getCarouselFromPageSpread(pageSpreadSubject) {\n        const carousel = {visible: [], gone: []};\n\n        // Identify the page spreads that should be a part of the carousel.\n        this.pageSpreads.forEach((pageSpread) => {\n            let visible = false;\n\n            if (pageSpread.getLeft() <= pageSpreadSubject.getLeft()) {\n                if (\n                    pageSpread.getLeft() + pageSpread.getWidth() >\n                    pageSpreadSubject.getLeft() - 100\n                ) {\n                    visible = true;\n                }\n            } else {\n                if (\n                    pageSpread.getLeft() - pageSpread.getWidth() <\n                    pageSpreadSubject.getLeft() + 100\n                ) {\n                    visible = true;\n                }\n            }\n\n            if (visible) {\n                carousel.visible.push(pageSpread);\n            } else {\n                carousel.gone.push(pageSpread);\n            }\n        });\n\n        return carousel;\n    }\n\n    getCoordinateInfo(x, y, pageSpread) {\n        x -= this.el.offsetLeft;\n        y -= this.el.offsetTop;\n        const info = {\n            x,\n            y,\n            contentX: 0,\n            contentY: 0,\n            pageX: 0,\n            pageY: 0,\n            overlayEls: [],\n            pageEl: null,\n            isInsideContentX: false,\n            isInsideContentY: false,\n            isInsideContent: false\n        };\n\n        const overlayEls = pageSpread.getOverlayEls();\n        for (let idx = 0; idx < overlayEls.length; idx++) {\n            const overlayEl = overlayEls[idx];\n            if (isCoordinateInsideElement(x, y, overlayEl)) {\n                info.overlayEls.push(overlayEl);\n            }\n        }\n\n        const pageEls = pageSpread.getPageEls();\n        for (let idx = 0; idx < pageEls.length; idx++) {\n            const pageEl = pageEls[idx];\n            if (isCoordinateInsideElement(x, y, pageEl)) {\n                info.pageEl = pageEl;\n                break;\n            }\n        }\n\n        const contentRect = pageSpread.getContentRect();\n        info.contentX = (x - contentRect.left) / Math.max(1, contentRect.width);\n        info.contentY = (y - contentRect.top) / Math.max(1, contentRect.height);\n\n        if (info.pageEl) {\n            info.isInsideContentX = info.contentX >= 0 && info.contentX <= 1;\n            info.isInsideContentY = info.contentY >= 0 && info.contentY <= 1;\n            info.isInsideContent =\n                info.isInsideContentX && info.isInsideContentY;\n        }\n\n        return info;\n    }\n\n    getPageSpreadCount() {\n        return this.pageSpreads.length;\n    }\n\n    getActivePageSpread() {\n        return this.getPageSpreadFromPosition(this.getPosition());\n    }\n\n    getPageSpreadFromPosition(position) {\n        return this.pageSpreads[position];\n    }\n\n    getPageSpreadPositionFromPageId(pageId) {\n        for (let idx = 0; idx < this.pageSpreads.length; idx++) {\n            const pageSpread = this.pageSpreads[idx];\n\n            if (pageSpread.options.pageIds.indexOf(pageId) > -1) return idx;\n        }\n    }\n\n    zoomTo({duration, easing, scale, x = 0, y = 0, bounds} = {}, callback) {\n        const curScale = this.transform.scale;\n        const activePageSpread = this.getActivePageSpread();\n        const {left, top, width, height, pageSpreadRect} =\n            getPageSpreadBounds(activePageSpread);\n        const carouselOffset = activePageSpread.getLeft();\n        const carouselScaledOffset = carouselOffset * curScale;\n\n        if (scale !== 1) {\n            x -= pageSpreadRect.left;\n            y -= pageSpreadRect.top;\n            x = (x / (pageSpreadRect.width / curScale)) * 100;\n            y = (y / (pageSpreadRect.height / curScale)) * 100;\n            x =\n                this.transform.left +\n                carouselScaledOffset +\n                x -\n                (x * scale) / curScale;\n            y = this.transform.top + y - (y * scale) / curScale;\n\n            // Make sure the animation doesn't exceed the content bounds.\n            if (bounds !== false && scale > 1) {\n                x = clipCoordinate(x, scale, width, left);\n                y = clipCoordinate(y, scale, height, top);\n            }\n        } else {\n            x = 0;\n            y = 0;\n        }\n\n        // Account for the page spreads left of the active one.\n        x -= carouselOffset * scale;\n\n        this.transform.left = x;\n        this.transform.top = y;\n        this.transform.scale = scale;\n\n        this.animation.animate(\n            {x: x + '%', y: y + '%', scale, easing, duration},\n            callback\n        );\n    }\n\n    refresh() {\n        this.pageSpreadEls = this.el.querySelectorAll('.verso__page-spread');\n        this.pageSpreads = traversePageSpreads(this.pageSpreadEls);\n        this.pageIds = buildPageIds(this.pageSpreads);\n\n        return this;\n    }\n\n    //#############\n    /* Events */\n    //#############\n\n    onPanStart = (e) => {\n        // Only allow panning if zoomed in or doing a horizontal pan.\n        // This ensures vertical scrolling works for scrollable page spreads.\n        if (\n            this.transform.scale > 1 ||\n            e.direction === DIRECTION_LEFT ||\n            e.direction === DIRECTION_RIGHT\n        ) {\n            const {x} = e.center;\n            const edgeThreshold = 30;\n            const width = this.scrollerEl.offsetWidth;\n\n            // Prevent panning when edge-swiping on iOS.\n            if (x > edgeThreshold && x < width - edgeThreshold) {\n                this.startTransform.left = this.transform.left;\n                this.startTransform.top = this.transform.top;\n\n                this.panning = true;\n\n                this.trigger('panStart');\n            }\n        }\n    };\n\n    onPanMove = (e) => {\n        if (this.pinching || !this.panning) return;\n\n        const {scale} = this.transform;\n        if (scale > 1) {\n            const activePageSpread = this.getActivePageSpread();\n            const carouselOffset = activePageSpread.getLeft();\n            const carouselScaledOffset = carouselOffset * scale;\n            const {width, height, left, top} =\n                getPageSpreadBounds(activePageSpread);\n\n            let x =\n                this.startTransform.left +\n                carouselScaledOffset +\n                (e.deltaX / this.scrollerEl.offsetWidth) * 100;\n            x = clipCoordinate(x, scale, width, left) - carouselScaledOffset;\n            let y =\n                this.startTransform.top +\n                (e.deltaY / this.scrollerEl.offsetHeight) * 100;\n            y = clipCoordinate(y, scale, height, top);\n\n            this.transform.left = x;\n            this.transform.top = y;\n\n            this.animation.animate({\n                x: x + '%',\n                y: y + '%',\n                scale,\n                easing: 'linear'\n            });\n        } else {\n            this.animation.animate({\n                x:\n                    this.transform.left +\n                    (e.deltaX / this.scrollerEl.offsetWidth) * 100 +\n                    '%',\n                easing: 'linear'\n            });\n        }\n    };\n\n    onPanEnd = (e) => {\n        if (!this.panning) return;\n\n        this.panning = false;\n        this.trigger('panEnd');\n\n        if (this.transform.scale === 1 && !this.pinching) {\n            const position = this.getPosition();\n            const velocity = e.overallVelocityX;\n            if (\n                Math.abs(velocity) >= this.swipeVelocity &&\n                Math.abs(e.deltaX) >= this.swipeThreshold\n            ) {\n                const options = {\n                    velocity,\n                    duration: this.navigationPanDuration\n                };\n                if (e.offsetDirection === DIRECTION_LEFT) {\n                    this.next(options);\n                } else if (e.offsetDirection === DIRECTION_RIGHT) {\n                    this.prev(options);\n                }\n            }\n\n            if (position === this.getPosition()) {\n                this.animation.animate({\n                    x: this.transform.left + '%',\n                    duration: this.navigationPanDuration\n                });\n\n                this.trigger('attemptedNavigation', {\n                    position: this.getPosition()\n                });\n            }\n        }\n    };\n\n    onPinchStart = () => {\n        if (!this.getActivePageSpread().isZoomable()) return;\n\n        this.pinching = true;\n        this.el.dataset.pinching = true;\n        this.startTransform.scale = this.transform.scale;\n    };\n\n    onPinchMove = (e) => {\n        if (!this.pinching) return;\n\n        this.zoomTo({\n            x: e.center.x,\n            y: e.center.y,\n            scale: this.startTransform.scale * e.scale,\n            bounds: false,\n            easing: 'linear'\n        });\n    };\n\n    onPinchEnd = (e) => {\n        if (!this.pinching) return;\n\n        const activePageSpread = this.getActivePageSpread();\n        const maxZoomScale = activePageSpread.getMaxZoomScale();\n        const scale = Math.max(1, Math.min(this.transform.scale, maxZoomScale));\n        const position = this.getPosition();\n\n        if (this.startTransform.scale === 1 && scale > 1) {\n            this.trigger('zoomedIn', {position});\n        } else if (this.startTransform.scale > 1 && scale === 1) {\n            this.trigger('zoomedOut', {position});\n        }\n\n        this.zoomTo(\n            {x: e.center.x, y: e.center.y, scale, duration: this.zoomDuration},\n            () => {\n                this.pinching = false;\n                this.el.dataset.pinching = false;\n            }\n        );\n    };\n\n    onPress = (e) => {\n        this.trigger(\n            'pressed',\n            this.getCoordinateInfo(\n                e.center.x,\n                e.center.y,\n                this.getActivePageSpread()\n            )\n        );\n    };\n\n    onContextmenu = (e) => {\n        e.preventDefault();\n\n        this.trigger(\n            'contextmenu',\n            this.getCoordinateInfo(\n                e.clientX,\n                e.clientY,\n                this.getActivePageSpread()\n            )\n        );\n\n        return false;\n    };\n\n    onWheel = (e) => {\n        const activePageSpread = this.getActivePageSpread();\n\n        if (!activePageSpread.isZoomable()) return;\n\n        // see https://stackoverflow.com/a/23668035\n        let {deltaY} = e;\n\n        if (event.webkitDirectionInvertedFromDevice) deltaY = -deltaY;\n\n        const position = this.getPosition();\n        if (deltaY > 0 && this.transform.scale === 1) {\n            this.zoomTo(\n                {\n                    x: e.clientX,\n                    y: e.clientY,\n                    scale: activePageSpread.getMaxZoomScale(),\n                    duration: this.zoomDuration\n                },\n                () => {\n                    this.trigger('zoomedIn', {position});\n                }\n            );\n        } else if (deltaY < 0 && this.transform.scale > 1) {\n            this.zoomTo(\n                {\n                    x: e.clientX,\n                    y: e.clientY,\n                    scale: 1,\n                    duration: this.zoomDuration\n                },\n                () => {\n                    this.trigger('zoomedOut', {position});\n                }\n            );\n        }\n    };\n\n    onSingletap = (e) => {\n        const activePageSpread = this.getActivePageSpread();\n        const coordinateInfo = this.getCoordinateInfo(\n            e.center.x,\n            e.center.y,\n            activePageSpread\n        );\n\n        clearTimeout(this.tap.timeout);\n\n        if (this.tap.count === 1) {\n            this.tap.count = 0;\n\n            this.trigger('doubleClicked', coordinateInfo);\n\n            if (activePageSpread.isZoomable()) {\n                const maxZoomScale = activePageSpread.getMaxZoomScale();\n                const zoomedIn = this.transform.scale > 1;\n                const scale = zoomedIn ? 1 : maxZoomScale;\n                const zoomEvent = zoomedIn ? 'zoomedOut' : 'zoomedIn';\n                const position = this.getPosition();\n\n                this.zoomTo(\n                    {\n                        x: e.center.x,\n                        y: e.center.y,\n                        scale,\n                        duration: this.zoomDuration\n                    },\n                    () => {\n                        this.trigger(zoomEvent, {position});\n                    }\n                );\n            }\n        } else {\n            this.tap.count++;\n            this.tap.timeout = setTimeout(() => {\n                this.tap.count = 0;\n\n                this.trigger('clicked', coordinateInfo);\n            }, this.tap.delay);\n        }\n    };\n\n    onTouchStart = (e) => {\n        if (!this.getActivePageSpread().isScrollable()) e.preventDefault();\n    };\n\n    onTouchEnd = (e) => {\n        if (!this.getActivePageSpread().isScrollable()) e.preventDefault();\n    };\n\n    onResize = () => {\n        if (this.transform.scale > 1) {\n            const position = this.getPosition();\n\n            this.transform.left = this.getLeftTransformFromPageSpread(\n                position,\n                this.getActivePageSpread()\n            );\n            this.transform.top = 0;\n            this.transform.scale = 1;\n\n            this.zoomTo({\n                x: this.transform.left,\n                y: this.transform.top,\n                scale: this.transform.scale,\n                duration: 0\n            });\n\n            this.trigger('zoomedOut', {position});\n        }\n    };\n}\n"],"names":["Animation","el","run","animate","callback","x","y","scale","easing","duration","transform","style","transitionEnd","removeEventListener","transition","addEventListener","PageSpread","options","visibility","positioned","active","id","type","pageIds","width","left","maxZoomScale","isZoomable","getMaxZoomScale","getEl","dataset","zoomable","isScrollable","classList","contains","getOverlayEls","querySelectorAll","getPageEls","getRect","getBoundingClientRect","getContentRect","rect","top","right","bottom","height","pageEls","idx","length","pageEl","pageRect","getId","getType","getPageIds","getWidth","getLeft","getVisibility","setVisibility","display","position","activate","deactivate","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","getDistance","p1","p2","props","Math","sqrt","directionStr","direction","getAngle","atan2","PI","getCenter","pointers","forEach","pointer","clientX","clientY","round","getRotation","start","end","getScale","getDirection","abs","getVelocity","deltaTime","computeIntervalInputData","session","input","last","lastInterval","timeStamp","velocity","velocityX","velocityY","eventType","undefined","deltaX","deltaY","v","computeDeltaXY","center","offset","offsetDelta","prevDelta","prevInput","simpleCloneInputData","Date","now","computeInputData","manager","pointersLength","firstInput","firstMultiple","offsetCenter","angle","distance","offsetDirection","overallVelocity","overallVelocityX","overallVelocityY","rotation","maxPointers","target","element","srcEvent","inputHandler","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","Boolean","recognize","addEventListeners","types","handler","split","removeEventListeners","getWindowForElement","ownerDocument","defaultView","parentWindow","window","Input","inputTarget","domHandler","ev","enable","init","evEl","evTarget","evWin","destroy","TouchInput","arguments","targetIds","touches","getTouches","pointerType","allTouches","identifier","targetTouches","touch","targetTouch","changedTargetTouches","changedTouches","changedTouch","push","item","i","list","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","removePointer","eventTypeNormalized","toLowerCase","replace","isTouch","storeIndex","pointerId","DEDUP_TIMEOUT","DEDUP_DISTANCE","TouchMouseInput","primaryTouch","lastTouches","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","setLastTouch","isSyntheticEvent","mouse","some","lastTouch","lts","setTimeout","indexOf","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","stateStr","state","_uniqueId","uniqueId","Recognizer","simultaneous","_objectSpread","defaults","set","touchAction","update","emit","event","additionalEvent","reset","inputDataClone","process","getTouchAction","VENDOR_PREFIXES","prefixed","obj","property","camelProp","toUpperCase","prefix","PREFIXED_TOUCH_ACTION","document","createElement","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_NONE","actions","cssSupports","CSS","supports","TOUCH_ACTION_MAP","reduce","touchMap","val","cleanTouchActions","hasPanX","hasPanY","hasManipulation","TouchAction","value","compute","recognizers","recognizer","join","preventDefaults","prevented","preventDefault","hasNone","SUPPORT_TOUCH","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","SUPPORT_POINTER_EVENTS","createInputInstance","inputClass","domEvents","cssProps","userSelect","touchSelect","touchCallout","userDrag","tapHighlightColor","Manager","handlers","oldCssProps","toggleCssProps","ctor","opts","add","curRecognizer","get","recogger","existing","remove","index","on","events","off","data","triggerDomEvent","name","prop","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","AttrRecognizer","attrTest","optionPointers","isRecognized","isValid","prototype","PanRecognizer","pX","pY","directionTest","hasMoved","threshold","PinchRecognizer","inOut","PressRecognizer","_timer","_input","validPointers","validMovement","validTime","time","tryEmit","clearTimeout","TapRecognizer","pTime","pCenter","count","validTouchTime","failTimeout","validInterval","interval","validMultiTap","posThreshold","taps","tapCount","getHammerInputClass","buildPageIds","pageSpreads","pageSpread","pageId","clipCoordinate","coordinate","size","max","min","getPageSpreadBounds","pageSpreadRect","pageSpreadContentRect","isCoordinateInsideElement","traversePageSpreads","els","Number","Verso","pinching","panning","startTransform","started","destroyed","_events","onPanStart","e","edgeThreshold","scrollerEl","offsetWidth","trigger","onPanMove","activePageSpread","getActivePageSpread","carouselOffset","carouselScaledOffset","offsetHeight","animation","onPanEnd","getPosition","swipeVelocity","swipeThreshold","navigationPanDuration","next","prev","onPinchStart","onPinchMove","zoomTo","bounds","onPinchEnd","zoomDuration","onPress","getCoordinateInfo","onContextmenu","onWheel","webkitDirectionInvertedFromDevice","onSingletap","coordinateInfo","tap","timeout","zoomedIn","zoomEvent","delay","onTouchStart","onTouchEnd","onResize","getLeftTransformFromPageSpread","navigationDuration","doubleTapDelay","bind","fn","unbind","args","apply","querySelector","pageSpreadEls","hammer","getPageSpreadPositionFromPageId","navigateTo","console","warn","first","getPageSpreadCount","newPosition","currentPosition","currentPageSpread","getPageSpreadFromPosition","carousel","getCarouselFromPageSpread","visible","setPosition","gone","previousPosition","pageSpreadSubject","offsetLeft","offsetTop","info","contentX","contentY","pageX","pageY","overlayEls","isInsideContentX","isInsideContentY","isInsideContent","overlayEl","contentRect","curScale","refresh"],"mappings":"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"}