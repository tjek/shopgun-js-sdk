{"version":3,"file":"verso.cjs.js","sources":["../../lib/verso-browser/animation.js","../../lib/verso-browser/page_spread.js","../../lib/verso-browser/vendor/hammer.js","../../lib/verso-browser/verso.js"],"sourcesContent":["export default class Animation {\n    run = 0;\n    constructor(el) {\n        this.el = el;\n    }\n\n    animate(options = {}, callback = () => {}) {\n        const x = options.x ?? 0;\n        const y = options.y ?? 0;\n        const scale = options.scale ?? 1;\n        const easing = options.easing ?? 'ease-out';\n        const duration = options.duration ?? 0;\n        const run = ++this.run;\n        const transform = `translateX(${x}) translateY(${y}) scale(${scale})`;\n\n        if (this.el.style.transform === transform) {\n            callback();\n        } else if (duration > 0) {\n            var transitionEnd = () => {\n                if (run !== this.run) {\n                    return;\n                }\n\n                this.el.removeEventListener('transitionend', transitionEnd);\n                this.el.style.transition = 'none';\n\n                callback();\n            };\n\n            this.el.addEventListener('transitionend', transitionEnd, false);\n\n            this.el.style.transition = `transform ${easing} ${duration}ms`;\n            this.el.style.transform = transform;\n        } else {\n            this.el.style.transition = 'none';\n            this.el.style.transform = transform;\n\n            callback();\n        }\n\n        return this;\n    }\n}\n","import './page_spread.styl';\n\nexport default class PageSpread {\n    visibility = 'gone';\n    positioned = false;\n    active = false;\n    constructor(el, options = {}) {\n        this.el = el;\n        this.options = options;\n        this.id = this.options.id;\n        this.type = this.options.type;\n        this.pageIds = this.options.pageIds;\n        this.width = this.options.width;\n        this.left = this.options.left;\n        this.maxZoomScale = this.options.maxZoomScale;\n    }\n\n    isZoomable() {\n        return (\n            this.getMaxZoomScale() > 1 &&\n            this.getEl().getAttribute('data-zoomable') !== 'false'\n        );\n    }\n\n    isScrollable() {\n        return this.getEl().classList.contains('verso--scrollable');\n    }\n\n    getEl() {\n        return this.el;\n    }\n\n    getOverlayEls() {\n        return this.getEl().querySelectorAll('.verso__overlay');\n    }\n\n    getPageEls() {\n        return this.getEl().querySelectorAll('.verso__page');\n    }\n\n    getRect() {\n        return this.getEl().getBoundingClientRect();\n    }\n\n    getContentRect() {\n        const rect = {\n            top: null,\n            left: null,\n            right: null,\n            bottom: null,\n            width: null,\n            height: null\n        };\n\n        for (let pageEl of Array.from(this.getPageEls())) {\n            const pageRect = pageEl.getBoundingClientRect();\n\n            if (pageRect.top < rect.top || rect.top == null) {\n                rect.top = pageRect.top;\n            }\n            if (pageRect.left < rect.left || rect.left == null) {\n                rect.left = pageRect.left;\n            }\n            if (pageRect.right > rect.right || rect.right == null) {\n                rect.right = pageRect.right;\n            }\n            if (pageRect.bottom > rect.bottom || rect.bottom == null) {\n                rect.bottom = pageRect.bottom;\n            }\n        }\n\n        rect.top = rect.top ?? 0;\n        rect.left = rect.left ?? 0;\n        rect.right = rect.right ?? 0;\n        rect.bottom = rect.bottom ?? 0;\n        rect.width = rect.right - rect.left;\n        rect.height = rect.bottom - rect.top;\n\n        return rect;\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    getPageIds() {\n        return this.pageIds;\n    }\n\n    getWidth() {\n        return this.width;\n    }\n\n    getLeft() {\n        return this.left;\n    }\n\n    getMaxZoomScale() {\n        return this.maxZoomScale;\n    }\n\n    getVisibility() {\n        return this.visibility;\n    }\n\n    setVisibility(visibility) {\n        if (this.visibility !== visibility) {\n            this.getEl().style.display =\n                visibility === 'visible' ? 'block' : 'none';\n\n            this.visibility = visibility;\n        }\n\n        return this;\n    }\n\n    position() {\n        if (this.positioned === false) {\n            this.getEl().style.left = `${this.getLeft()}%`;\n\n            this.positioned = true;\n        }\n\n        return this;\n    }\n\n    activate() {\n        this.active = true;\n        this.getEl().setAttribute('data-active', this.active);\n    }\n\n    deactivate() {\n        this.active = false;\n        this.getEl().setAttribute('data-active', this.active);\n    }\n}\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n//(function(window, document, exportName, undefined) {\n'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = () =>\n    typeof document != 'undefined' && document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) return;\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            if (Object.hasOwnProperty.call(obj, i)) {\n                iterator.call(context, obj[i], i, obj);\n            }\n        }\n    }\n}\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) Object.assign(childP, properties);\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return val1 === undefined ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    splitStr(types).forEach((type) =>\n        target.addEventListener(type, handler, false)\n    );\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    splitStr(types).forEach((type) =>\n        target.removeEventListener(type, handler, false)\n    );\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) return true;\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nconst toArray = (obj) => Array.prototype.slice.call(obj, 0);\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(array, key, sort) {\n    var results = [];\n    var values = [];\n\n    array.forEach((item, i) => {\n        var val = key ? item[key] : item;\n        if (values.indexOf(val) < 0) results.push(item);\n        values[i] = val;\n    });\n\n    if (sort) results.sort(!key ? undefined : (a, b) => a[key] > b[key]);\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    const camelProp = property[0].toUpperCase() + property.slice(1);\n\n    return VENDOR_PREFIXES.find(\n        (prefix) => (prefix ? prefix + camelProp : property) in obj\n    );\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nlet _uniqueId = 1;\nconst uniqueId = () => _uniqueId++;\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (\n        doc.defaultView ||\n        doc.parentWindow ||\n        (typeof window !== 'undefined' && window)\n    );\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = () =>\n    typeof window !== 'undefined' && 'ontouchstart' in window;\nvar SUPPORT_POINTER_EVENTS = () =>\n    typeof window !== 'undefined' &&\n    prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = () =>\n    SUPPORT_TOUCH() && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function (ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler() {},\n\n    /**\n     * bind the events\n     */\n    init() {\n        this.evEl &&\n            addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget &&\n            addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin &&\n            addEventListeners(\n                getWindowForElement(this.element),\n                this.evWin,\n                this.domHandler\n            );\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy() {\n        this.evEl &&\n            removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget &&\n            removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin &&\n            removeEventListeners(\n                getWindowForElement(this.element),\n                this.evWin,\n                this.domHandler\n            );\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    const inputClass = manager.options.inputClass;\n\n    let Type;\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS()) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH()) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH()) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new Type(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst =\n        eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n    var isFinal =\n        eventType & (INPUT_END | INPUT_CANCEL) &&\n        pointersLen - changedPointersLen === 0;\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) manager.session = {};\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) session.firstInput = simpleCloneInputData(input);\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = (input.center = getCenter(pointers));\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(\n        input.deltaTime,\n        input.deltaX,\n        input.deltaY\n    );\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity =\n        abs(overallVelocity.x) > abs(overallVelocity.y)\n            ? overallVelocity.x\n            : overallVelocity.y;\n\n    input.scale = firstMultiple\n        ? getScale(firstMultiple.pointers, pointers)\n        : 1;\n    input.rotation = firstMultiple\n        ? getRotation(firstMultiple.pointers, pointers)\n        : 0;\n\n    input.maxPointers = !session.prevInput\n        ? input.pointers.length\n        : input.pointers.length > session.prevInput.maxPointers\n        ? input.pointers.length\n        : session.prevInput.maxPointers;\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target))\n        target = input.srcEvent.target;\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity,\n        velocityX,\n        velocityY,\n        direction;\n\n    if (\n        input.eventType != INPUT_CANCEL &&\n        (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)\n    ) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    const pointers = input.pointers.map((pointer) => ({\n        clientX: round(pointer.clientX),\n        clientY: round(pointer.clientY)\n    }));\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    let x = 0;\n    let y = 0;\n    pointers.forEach(({clientX, clientY}) => {\n        x += clientX;\n        y += clientY;\n    });\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nconst getVelocity = (deltaTime, x, y) => ({\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n});\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) return DIRECTION_NONE;\n\n    if (abs(x) >= abs(y)) return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nconst getDistance = (p1, p2, [xKey, yKey] = PROPS_XY) =>\n    Math.sqrt(\n        Math.pow(p2[xKey] - p1[xKey], 2) + Math.pow(p2[yKey] - p1[yKey], 2)\n    );\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nconst getAngle = (p1, p2, [xKey, yKey] = PROPS_XY) =>\n    (Math.atan2(p2[yKey] - p1[yKey], p2[xKey] - p1[xKey]) * 180) / Math.PI;\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nconst getRotation = (start, end) =>\n    getAngle(end[1], end[0], PROPS_CLIENT_XY) +\n    getAngle(start[1], start[0], PROPS_CLIENT_XY);\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nconst getScale = (start, end) =>\n    getDistance(end[0], end[1], PROPS_CLIENT_XY) /\n    getDistance(start[0], start[1], PROPS_CLIENT_XY);\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (\n    typeof window !== 'undefined' &&\n    window.MSPointerEvent &&\n    !window.PointerEvent\n) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = this.manager.session.pointerEvents = [];\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType =\n            IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = pointerType == INPUT_TYPE_TOUCH;\n\n        // get index of the event in the store\n        var storeIndex = store.findIndex(\n            (item) => item.pointerId == ev.pointerId\n        );\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) return;\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        // remove from the store\n        if (removePointer) store.splice(storeIndex, 1);\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler(srcEvent) {\n        var type = SINGLE_TOUCH_INPUT_MAP[srcEvent.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) this.started = true;\n\n        if (!this.started) return;\n\n        var [pointers, changedPointers] = normalizeSingleTouches(\n            srcEvent,\n            type\n        );\n\n        // when done, reset the started state\n        if (\n            type & (INPUT_END | INPUT_CANCEL) &&\n            pointers.length - changedPointers.length === 0\n        ) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers,\n            changedPointers,\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) return;\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter((touch) =>\n        hasParent(touch.target, target)\n    );\n\n    // collect touches\n    if (type === INPUT_START) {\n        targetTouches.forEach((targetTouch) => {\n            targetIds[targetTouch.identifier] = true;\n        });\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    changedTouches.forEach((changedTouch) => {\n        if (targetIds[changedTouch.identifier])\n            changedTargetTouches.push(changedTouch);\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL))\n            delete targetIds[changedTouch.identifier];\n    });\n\n    if (!changedTargetTouches.length) return;\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(\n            targetTouches.concat(changedTargetTouches),\n            'identifier',\n            true\n        ),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = this.handler.bind(this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler(manager, inputEvent, inputData) {\n        var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,\n            isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n\n        if (\n            isMouse &&\n            inputData.sourceCapabilities &&\n            inputData.sourceCapabilities.firesTouchEvents\n        ) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function () {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent({srcEvent: {clientX, clientY}}) {\n    return !!this.lastTouches.find(\n        (lastTouch) =>\n            Math.abs(clientX - lastTouch.x) <= DEDUP_DISTANCE &&\n            Math.abs(clientY - lastTouch.y) <= DEDUP_DISTANCE\n    );\n}\n\nvar PREFIXED_TOUCH_ACTION = () => {\n    const te = TEST_ELEMENT();\n    if (te) return prefixed(te.style, 'touchAction');\n};\nvar NATIVE_TOUCH_ACTION = () => PREFIXED_TOUCH_ACTION() !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        var TOUCH_ACTION_MAP = getTouchActionProps();\n        if (\n            NATIVE_TOUCH_ACTION() &&\n            this.manager.element.style &&\n            TOUCH_ACTION_MAP[value]\n        ) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION()] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute() {\n        var actions = [];\n        this.manager.recognizers.forEach((recognizer) => {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var TOUCH_ACTION_MAP = getTouchActionProps();\n        var hasNone =\n            inStr(actions, TOUCH_ACTION_NONE) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY =\n            inStr(actions, TOUCH_ACTION_PAN_Y) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX =\n            inStr(actions, TOUCH_ACTION_PAN_X) &&\n            !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (\n            hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)\n        ) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) return TOUCH_ACTION_NONE;\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) return TOUCH_ACTION_NONE;\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY)\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION))\n        return TOUCH_ACTION_MANIPULATION;\n\n    return TOUCH_ACTION_AUTO;\n}\n\nconst touchVals = [\n    'auto',\n    'manipulation',\n    'pan-y',\n    'pan-x',\n    'pan-x pan-y',\n    'none'\n];\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION()) return false;\n    var cssSupports =\n        typeof window !== 'undefined' && window.CSS && window.CSS.supports;\n    return touchVals.reduce((touchMap, val) => {\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports\n            ? window.CSS.supports('touch-action', val)\n            : true;\n\n        return touchMap;\n    }, {});\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = {...this.defaults, ...options};\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set(options) {\n        Object.assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) return this;\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this))\n            return this;\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this))\n            return this;\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (requireFail.indexOf(otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this))\n            return this;\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = this.requireFail.indexOf(otherRecognizer);\n        if (index > -1) this.requireFail.splice(index, 1);\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) {\n            // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit(input) {\n        if (this.canEmit()) return this.emit(input);\n\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (\n                !(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))\n            ) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = {...inputData};\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (\n            this.state &\n            (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)\n        ) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process() {}, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction() {},\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset() {}\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nconst getRecognizerByNameIfManager = (otherRecognizer, {manager}) =>\n    manager ? manager.get(otherRecognizer) : otherRecognizer;\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction() {\n        var direction = this.options.direction;\n\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) actions.push(TOUCH_ACTION_PAN_Y);\n        if (direction & DIRECTION_VERTICAL) actions.push(TOUCH_ACTION_PAN_X);\n        return actions;\n    },\n\n    directionTest(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction =\n                    x === 0\n                        ? DIRECTION_NONE\n                        : x < 0\n                        ? DIRECTION_LEFT\n                        : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction =\n                    y === 0\n                        ? DIRECTION_NONE\n                        : y < 0\n                        ? DIRECTION_UP\n                        : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return (\n            hasMoved &&\n            distance > options.threshold &&\n            direction & options.direction\n        );\n    },\n\n    attrTest(input) {\n        return (\n            AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN ||\n                (!(this.state & STATE_BEGAN) && this.directionTest(input)))\n        );\n    },\n\n    emit(input) {\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) input.additionalEvent = this.options.event + direction;\n\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest(input) {\n        return (\n            this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold ||\n                this.state & STATE_BEGAN)\n        );\n    },\n\n    emit(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (\n            !validMovement ||\n            !validPointers ||\n            (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)\n        ) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeout(() => {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset() {\n        clearTimeout(this._timer);\n    },\n\n    emit(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && input.eventType & INPUT_END) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest(input) {\n        return (\n            this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold ||\n                this.state & STATE_BEGAN)\n        );\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return (\n            this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity &&\n            input.eventType & INPUT_END\n        );\n    },\n\n    emit(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) this.manager.emit(this.options.event + direction, input);\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if (input.eventType & INPUT_START && this.count === 0)\n            return this.failTimeout();\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) return this.failTimeout();\n\n            var validInterval = this.pTime\n                ? input.timeStamp - this.pTime < options.interval\n                : true;\n            var validMultiTap =\n                !this.pCenter ||\n                getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeout(() => {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout() {\n        this._timer = setTimeout(() => {\n            this.state = STATE_FAILED;\n        }, this.options.interval);\n        return STATE_FAILED;\n    },\n\n    reset() {\n        clearTimeout(this._timer);\n    },\n\n    emit() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(\n        options.recognizers,\n        Hammer.defaults.preset\n    );\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = {...Hammer.defaults, ...options};\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    if (this.options.recognizers) {\n        this.options.recognizers.forEach((item) => {\n            var recognizer = this.add(new item[0](item[1]));\n            item[2] && recognizer.recognizeWith(item[2]);\n            item[3] && recognizer.requireFailure(item[3]);\n        });\n    }\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set(options) {\n        Object.assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) this.touchAction.update();\n\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize(inputData) {\n        var session = this.session;\n        if (session.stopped) return;\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (\n            !curRecognizer ||\n            (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)\n        ) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        recognizers.forEach((recognizer) => {\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (\n                session.stopped !== FORCED_STOP && // 1\n                (!curRecognizer ||\n                    recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))\n            ) {\n                // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (\n                !curRecognizer &&\n                recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)\n            ) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n        });\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get(recognizer) {\n        if (recognizer instanceof Recognizer) return recognizer;\n\n        return (\n            this.recognizers.find(({options}) => options.event == recognizer) ||\n            null\n        );\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) return this;\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) this.remove(existing);\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) return this;\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            const index = this.recognizers.indexOf(recognizer);\n\n            if (index !== -1) {\n                this.recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on(events, handler) {\n        if (events === undefined || handler === undefined) return;\n\n        const handlers = this.handlers;\n        splitStr(events).forEach((event) => {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off(events, handler) {\n        if (events === undefined) return;\n\n        var handlers = this.handlers;\n        splitStr(events).forEach((event) => {\n            if (!handler) {\n                delete handlers[event];\n            } else if (handlers[event]) {\n                handlers[event].splice(handlers[event].indexOf(handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) triggerDomEvent(event, data);\n\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        // no handlers, so skip it all\n        if (!handlers || !handlers.length) return;\n\n        data.type = event;\n        data.preventDefault = function () {\n            data.srcEvent.preventDefault();\n        };\n\n        handlers.forEach((handler) => handler(data));\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    const element = manager.element;\n    if (!element.style) return;\n\n    let prop;\n    Object.entries(manager.options.cssProps).forEach(([value, name]) => {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) manager.oldCssProps = {};\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nObject.assign(Hammer, {\n    INPUT_START,\n    INPUT_MOVE,\n    INPUT_END,\n    INPUT_CANCEL,\n\n    STATE_POSSIBLE,\n    STATE_BEGAN,\n    STATE_CHANGED,\n    STATE_ENDED,\n    STATE_RECOGNIZED,\n    STATE_CANCELLED,\n    STATE_FAILED,\n\n    DIRECTION_NONE,\n    DIRECTION_LEFT,\n    DIRECTION_RIGHT,\n    DIRECTION_UP,\n    DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL,\n    DIRECTION_ALL,\n\n    Manager,\n    Input,\n    TouchAction,\n\n    TouchInput,\n    MouseInput,\n    PointerEventInput,\n    TouchMouseInput,\n    SingleTouchInput,\n\n    Recognizer,\n    AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each,\n    inherit,\n    prefixed\n});\n\nmodule.exports = Hammer;\n","import Animation from './animation';\nimport PageSpread from './page_spread';\nimport Hammer from './vendor/hammer';\nimport './verso.styl';\n\nexport default class Verso {\n    constructor(el, options = {}) {\n        this.el = el;\n        this.options = options;\n        this.swipeVelocity = this.options.swipeVelocity ?? 0.3;\n        this.swipeThreshold = this.options.swipeThreshold ?? 10;\n        this.navigationDuration = this.options.navigationDuration ?? 240;\n        this.navigationPanDuration = this.options.navigationPanDuration ?? 200;\n        this.zoomDuration = this.options.zoomDuration ?? 200;\n        this.doubleTapDelay = this.options.doubleTapDelay ?? 300;\n\n        this.position = -1;\n        this.pinching = false;\n        this.panning = false;\n        this.transform = {left: 0, top: 0, scale: 1};\n        this.startTransform = {left: 0, top: 0, scale: 1};\n        this.tap = {\n            count: 0,\n            delay: this.doubleTapDelay\n        };\n        this.started = false;\n        this.destroyed = false;\n        this._events = {};\n    }\n    bind(event, fn) {\n        this._events[event] = this._events[event] || [];\n        return this._events[event].push(fn);\n    }\n\n    unbind(event, fn) {\n        if (this._events[event]) {\n            return this._events[event].splice(\n                this._events[event].indexOf(fn),\n                1\n            );\n        }\n    }\n\n    trigger(event, ...args) {\n        this._events[event]?.forEach((e) => e.apply(this, args));\n    }\n\n    start() {\n        this.scrollerEl = this.el.querySelector('.verso__scroller');\n        this.pageSpreadEls = this.el.querySelectorAll('.verso__page-spread');\n        this.pageSpreads = this.traversePageSpreads(this.pageSpreadEls);\n        this.pageIds = this.buildPageIds(this.pageSpreads);\n        this.animation = new Animation(this.scrollerEl);\n        this.hammer = new Hammer.Manager(this.scrollerEl, {\n            touchAction: 'none',\n            enable: false,\n            inputClass: this.getHammerInputClass()\n        });\n\n        this.hammer.add(\n            new Hammer.Pan({threshold: 5, direction: Hammer.DIRECTION_ALL})\n        );\n        this.hammer.add(new Hammer.Tap({event: 'singletap', interval: 0}));\n        this.hammer.add(new Hammer.Pinch());\n        this.hammer.add(new Hammer.Press({time: 500}));\n        this.hammer.on('panstart', this.onPanStart.bind(this));\n        this.hammer.on('panmove', this.onPanMove.bind(this));\n        this.hammer.on('panend', this.onPanEnd.bind(this));\n        this.hammer.on('pancancel', this.onPanEnd.bind(this));\n        this.hammer.on('singletap', this.onSingletap.bind(this));\n        this.hammer.on('pinchstart', this.onPinchStart.bind(this));\n        this.hammer.on('pinchmove', this.onPinchMove.bind(this));\n        this.hammer.on('pinchend', this.onPinchEnd.bind(this));\n        this.hammer.on('pinchcancel', this.onPinchEnd.bind(this));\n        this.hammer.on('press', this.onPress.bind(this));\n\n        this.scrollerEl.addEventListener(\n            'contextmenu',\n            this.onContextmenu.bind(this),\n            false\n        );\n        this.scrollerEl.addEventListener(\n            'wheel',\n            this.onWheel.bind(this),\n            false\n        );\n        const pageId =\n            this.getPageSpreadPositionFromPageId(this.options.pageId) ?? 0;\n\n        this.hammer.set({enable: true});\n        this.started = true;\n        this.destroyed = false;\n        this.navigateTo(pageId, {duration: 0});\n\n        this.resizeListener = this.onResize.bind(this);\n        this.touchStartListener = this.onTouchStart.bind(this);\n        this.touchEndListener = this.onTouchEnd.bind(this);\n\n        this.el.addEventListener('touchstart', this.touchStartListener, false);\n        this.el.addEventListener('touchend', this.touchEndListener, false);\n\n        if (typeof window !== 'undefined' && window !== null) {\n            window.addEventListener('resize', this.resizeListener, false);\n        }\n        return this;\n    }\n\n    destroy() {\n        if (!this.started) {\n            return console.warn(\n                \"You've called .destroy() on a viewer that was not started yet, this is a no-op.\"\n            );\n        }\n        if (this.destroyed) {\n            return console.warn(\n                \"You've called .destroy() on a viewer that has already been destroyed and not restarted, this is a no-op.\"\n            );\n        }\n        this.scrollerEl.removeEventListener(\n            'contextmenu',\n            this.onContextmenu.bind(this)\n        );\n        this.scrollerEl.removeEventListener('wheel', this.onWheel.bind(this));\n\n        this.hammer.destroy();\n\n        this.el.removeEventListener('touchstart', this.touchStartListener);\n        this.el.removeEventListener('touchend', this.touchEndListener);\n\n        window.removeEventListener('resize', this.resizeListener);\n        this.started = false;\n        this.destroyed = true;\n        return this;\n    }\n\n    first(options) {\n        return this.navigateTo(0, options);\n    }\n\n    prev(options) {\n        return this.navigateTo(this.getPosition() - 1, options);\n    }\n\n    next(options) {\n        return this.navigateTo(this.getPosition() + 1, options);\n    }\n\n    last(options) {\n        return this.navigateTo(this.getPageSpreadCount() - 1, options);\n    }\n\n    navigateTo(position, options = {}) {\n        if (this.destroyed) {\n            return console.warn(`\\\nYou've called a navigation method on a viewer that was previously destroyed, this is a no-op.\nPlease call viewer.start() again, if you want to reuse this Viewer instance.\n\nYou might have forgotten to remove an event handler that\ncalls first/prev/next/last/navigateTo on the viewer.\\\n`);\n        }\n        if (!this.started) {\n            return console.warn(`\nYou've called a navigation method on a viewer that hasn't been started yet, this is a no-op.\nPlease call viewer.start() first.\n\nYou might have forgotten to remove an event handler that\ncalls .first()/.prev()/.next()/.last()/.navigateTo() on the viewer.\n`);\n        }\n\n        if (position < 0 || position > this.getPageSpreadCount() - 1) {\n            return;\n        }\n\n        const currentPosition = this.getPosition();\n        const currentPageSpread = this.getPageSpreadFromPosition(\n            currentPosition\n        );\n        const activePageSpread = this.getPageSpreadFromPosition(position);\n        let carousel = this.getCarouselFromPageSpread(activePageSpread);\n        const velocity = options.velocity ?? 1;\n        let duration = options.duration ?? this.navigationDuration;\n        duration = duration / Math.abs(velocity);\n        const touchAction = activePageSpread.isScrollable() ? 'pan-y' : 'none';\n\n        currentPageSpread?.deactivate();\n        activePageSpread.activate();\n\n        carousel.visible.forEach((pageSpread) =>\n            pageSpread.position().setVisibility('visible')\n        );\n\n        this.hammer.set({touchAction});\n\n        this.transform.left = this.getLeftTransformFromPageSpread(\n            position,\n            activePageSpread\n        );\n        this.setPosition(position);\n\n        if (this.transform.scale > 1) {\n            this.transform.top = 0;\n            this.transform.scale = 1;\n\n            this.trigger('zoomedOut', {position: currentPosition});\n        }\n\n        this.trigger('beforeNavigation', {\n            currentPosition,\n            newPosition: position\n        });\n\n        this.animation.animate(\n            {\n                x: `${this.transform.left}%`,\n                duration\n            },\n            () => {\n                carousel = this.getCarouselFromPageSpread(\n                    this.getActivePageSpread()\n                );\n\n                carousel.gone.forEach((pageSpread) =>\n                    pageSpread.setVisibility('gone')\n                );\n\n                this.trigger('afterNavigation', {\n                    newPosition: this.getPosition(),\n                    previousPosition: currentPosition\n                });\n            }\n        );\n    }\n\n    getPosition() {\n        return this.position;\n    }\n\n    setPosition(position) {\n        this.position = position;\n\n        return this;\n    }\n\n    getLeftTransformFromPageSpread(position, pageSpread) {\n        let left = 0;\n\n        if (position === this.getPageSpreadCount() - 1) {\n            left = 100 - pageSpread.getWidth() - pageSpread.getLeft();\n        } else if (position > 0) {\n            left = (100 - pageSpread.getWidth()) / 2 - pageSpread.getLeft();\n        }\n\n        return left;\n    }\n\n    getCarouselFromPageSpread(pageSpreadSubject) {\n        const carousel = {\n            visible: [],\n            gone: []\n        };\n\n        // Identify the page spreads that should be a part of the carousel.\n        this.pageSpreads.forEach((pageSpread) => {\n            let visible = false;\n\n            if (pageSpread.getLeft() <= pageSpreadSubject.getLeft()) {\n                if (\n                    pageSpread.getLeft() + pageSpread.getWidth() >\n                    pageSpreadSubject.getLeft() - 100\n                ) {\n                    visible = true;\n                }\n            } else {\n                if (\n                    pageSpread.getLeft() - pageSpread.getWidth() <\n                    pageSpreadSubject.getLeft() + 100\n                ) {\n                    visible = true;\n                }\n            }\n\n            if (visible === true) {\n                carousel.visible.push(pageSpread);\n            } else {\n                carousel.gone.push(pageSpread);\n            }\n        });\n\n        return carousel;\n    }\n\n    traversePageSpreads(els) {\n        const pageSpreads = [];\n        let left = 0;\n\n        for (let el of Array.from(els)) {\n            const id = el.getAttribute('data-id');\n            const type = el.getAttribute('data-type');\n            const pageIds = el.getAttribute('data-page-ids')?.split(',') || [];\n            const maxZoomScale = Number(\n                el.getAttribute('data-max-zoom-scale') ?? 1\n            );\n            const width = Number(el.getAttribute('data-width') ?? 100);\n            const pageSpread = new PageSpread(el, {\n                id,\n                type,\n                pageIds,\n                maxZoomScale,\n                width,\n                left\n            });\n\n            left += width;\n\n            pageSpreads.push(pageSpread);\n        }\n\n        return pageSpreads;\n    }\n\n    buildPageIds(pageSpreads) {\n        const pageIds = {};\n\n        pageSpreads.forEach((pageSpread) => {\n            pageSpread.options.pageIds.forEach((pageId) => {\n                pageIds[pageId] = pageSpread;\n            });\n        });\n\n        return pageIds;\n    }\n\n    isCoordinateInsideElement(x, y, el) {\n        const rect = el.getBoundingClientRect();\n\n        return (\n            x >= rect.left &&\n            x <= rect.right &&\n            y >= rect.top &&\n            y <= rect.bottom\n        );\n    }\n\n    getCoordinateInfo(x, y, pageSpread) {\n        let pageEl;\n        x -= this.el.offsetLeft;\n        y -= this.el.offsetTop;\n        const info = {\n            x,\n            y,\n            contentX: 0,\n            contentY: 0,\n            pageX: 0,\n            pageY: 0,\n            overlayEls: [],\n            pageEl: null,\n            isInsideContentX: false,\n            isInsideContentY: false,\n            isInsideContent: false\n        };\n        const contentRect = pageSpread.getContentRect();\n        const overlayEls = pageSpread.getOverlayEls();\n        const pageEls = pageSpread.getPageEls();\n\n        for (let overlayEl of Array.from(overlayEls)) {\n            if (this.isCoordinateInsideElement(x, y, overlayEl)) {\n                info.overlayEls.push(overlayEl);\n            }\n        }\n\n        for (pageEl of Array.from(pageEls)) {\n            if (this.isCoordinateInsideElement(x, y, pageEl)) {\n                info.pageEl = pageEl;\n                break;\n            }\n        }\n\n        info.contentX = (x - contentRect.left) / Math.max(1, contentRect.width);\n        info.contentY = (y - contentRect.top) / Math.max(1, contentRect.height);\n\n        if (info.pageEl) {\n            info.isInsideContentX = info.contentX >= 0 && info.contentX <= 1;\n            info.isInsideContentY = info.contentY >= 0 && info.contentY <= 1;\n            info.isInsideContent =\n                info.isInsideContentX && info.isInsideContentY;\n        }\n\n        return info;\n    }\n\n    getPageSpreadCount() {\n        return this.pageSpreads.length;\n    }\n\n    getActivePageSpread() {\n        return this.getPageSpreadFromPosition(this.getPosition());\n    }\n\n    getPageSpreadFromPosition(position) {\n        return this.pageSpreads[position];\n    }\n\n    getPageSpreadPositionFromPageId(pageId) {\n        for (let idx = 0; idx < this.pageSpreads.length; idx++) {\n            const pageSpread = this.pageSpreads[idx];\n\n            if (pageSpread.options.pageIds.indexOf(pageId) > -1) {\n                return idx;\n            }\n        }\n    }\n\n    getPageSpreadBounds(pageSpread) {\n        const pageSpreadRect = pageSpread.getRect();\n        const pageSpreadContentRect = pageSpread.getContentRect();\n\n        return {\n            left:\n                ((pageSpreadContentRect.left - pageSpreadRect.left) /\n                    pageSpreadRect.width) *\n                100,\n            top:\n                ((pageSpreadContentRect.top - pageSpreadRect.top) /\n                    pageSpreadRect.height) *\n                100,\n            width: (pageSpreadContentRect.width / pageSpreadRect.width) * 100,\n            height:\n                (pageSpreadContentRect.height / pageSpreadRect.height) * 100,\n            pageSpreadRect,\n            pageSpreadContentRect\n        };\n    }\n\n    clipCoordinate(coordinate, scale, size, offset) {\n        if (size * scale < 100) {\n            coordinate = offset * -scale + 50 - (size * scale) / 2;\n        } else {\n            coordinate = Math.min(coordinate, offset * -scale);\n            coordinate = Math.max(\n                coordinate,\n                offset * -scale - size * scale + 100\n            );\n        }\n\n        return coordinate;\n    }\n\n    zoomTo(options = {}, callback) {\n        const {scale} = options;\n        const curScale = this.transform.scale;\n        const activePageSpread = this.getActivePageSpread();\n        const pageSpreadBounds = this.getPageSpreadBounds(activePageSpread);\n        const carouselOffset = activePageSpread.getLeft();\n        const carouselScaledOffset = carouselOffset * curScale;\n        let x = options.x ?? 0;\n        let y = options.y ?? 0;\n\n        if (scale !== 1) {\n            x -= pageSpreadBounds.pageSpreadRect.left;\n            y -= pageSpreadBounds.pageSpreadRect.top;\n            x = (x / (pageSpreadBounds.pageSpreadRect.width / curScale)) * 100;\n            y = (y / (pageSpreadBounds.pageSpreadRect.height / curScale)) * 100;\n            x =\n                this.transform.left +\n                carouselScaledOffset +\n                x -\n                (x * scale) / curScale;\n            y = this.transform.top + y - (y * scale) / curScale;\n\n            // Make sure the animation doesn't exceed the content bounds.\n            if (options.bounds !== false && scale > 1) {\n                x = this.clipCoordinate(\n                    x,\n                    scale,\n                    pageSpreadBounds.width,\n                    pageSpreadBounds.left\n                );\n                y = this.clipCoordinate(\n                    y,\n                    scale,\n                    pageSpreadBounds.height,\n                    pageSpreadBounds.top\n                );\n            }\n        } else {\n            x = 0;\n            y = 0;\n        }\n\n        // Account for the page spreads left of the active one.\n        x -= carouselOffset * scale;\n\n        this.transform.left = x;\n        this.transform.top = y;\n        this.transform.scale = scale;\n\n        this.animation.animate(\n            {\n                x: `${x}%`,\n                y: `${y}%`,\n                scale,\n                easing: options.easing,\n                duration: options.duration\n            },\n            callback\n        );\n    }\n\n    refresh() {\n        this.pageSpreadEls = this.el.querySelectorAll('.verso__page-spread');\n        this.pageSpreads = this.traversePageSpreads(this.pageSpreadEls);\n        this.pageIds = this.buildPageIds(this.pageSpreads);\n\n        return this;\n    }\n\n    getHammerInputClass() {\n        const mobileRegex = /mobile|tablet|ip(ad|hone|od)|android/i;\n        const supportTouch =\n            typeof window !== 'undefined' && 'ontouchstart' in window;\n\n        if (supportTouch && mobileRegex.test(navigator.userAgent)) {\n            return Hammer.TouchInput;\n        } else {\n            return null;\n        }\n    }\n\n    //#############\n    /* Events */\n    //#############\n\n    onPanStart(e) {\n        // Only allow panning if zoomed in or doing a horizontal pan.\n        // This ensures vertical scrolling works for scrollable page spreads.\n        if (\n            this.transform.scale > 1 ||\n            e.direction === Hammer.DIRECTION_LEFT ||\n            e.direction === Hammer.DIRECTION_RIGHT\n        ) {\n            const {x} = e.center;\n            const edgeThreshold = 30;\n            const width = this.scrollerEl.offsetWidth;\n\n            // Prevent panning when edge-swiping on iOS.\n            if (x > edgeThreshold && x < width - edgeThreshold) {\n                this.startTransform.left = this.transform.left;\n                this.startTransform.top = this.transform.top;\n\n                this.panning = true;\n\n                this.trigger('panStart');\n            }\n        }\n    }\n\n    onPanMove(e) {\n        let x;\n        if (this.pinching === true || this.panning === false) {\n            return;\n        }\n\n        if (this.transform.scale > 1) {\n            const activePageSpread = this.getActivePageSpread();\n            const carouselOffset = activePageSpread.getLeft();\n            const carouselScaledOffset = carouselOffset * this.transform.scale;\n            const pageSpreadBounds = this.getPageSpreadBounds(activePageSpread);\n            const {scale} = this.transform;\n            x =\n                this.startTransform.left +\n                carouselScaledOffset +\n                (e.deltaX / this.scrollerEl.offsetWidth) * 100;\n            let y =\n                this.startTransform.top +\n                (e.deltaY / this.scrollerEl.offsetHeight) * 100;\n            x = this.clipCoordinate(\n                x,\n                scale,\n                pageSpreadBounds.width,\n                pageSpreadBounds.left\n            );\n            y = this.clipCoordinate(\n                y,\n                scale,\n                pageSpreadBounds.height,\n                pageSpreadBounds.top\n            );\n            x -= carouselScaledOffset;\n\n            this.transform.left = x;\n            this.transform.top = y;\n\n            this.animation.animate({\n                x: `${x}%`,\n                y: `${y}%`,\n                scale,\n                easing: 'linear'\n            });\n        } else {\n            x =\n                this.transform.left +\n                (e.deltaX / this.scrollerEl.offsetWidth) * 100;\n\n            this.animation.animate({\n                x: `${x}%`,\n                easing: 'linear'\n            });\n        }\n    }\n\n    onPanEnd(e) {\n        if (this.panning === false) {\n            return;\n        }\n\n        this.panning = false;\n        this.trigger('panEnd');\n\n        if (this.transform.scale === 1 && this.pinching === false) {\n            const position = this.getPosition();\n            const velocity = e.overallVelocityX;\n\n            if (Math.abs(velocity) >= this.swipeVelocity) {\n                if (Math.abs(e.deltaX) >= this.swipeThreshold) {\n                    if (e.offsetDirection === Hammer.DIRECTION_LEFT) {\n                        this.next({\n                            velocity,\n                            duration: this.navigationPanDuration\n                        });\n                    } else if (e.offsetDirection === Hammer.DIRECTION_RIGHT) {\n                        this.prev({\n                            velocity,\n                            duration: this.navigationPanDuration\n                        });\n                    }\n                }\n            }\n\n            if (position === this.getPosition()) {\n                this.animation.animate({\n                    x: `${this.transform.left}%`,\n                    duration: this.navigationPanDuration\n                });\n\n                this.trigger('attemptedNavigation', {\n                    position: this.getPosition()\n                });\n            }\n        }\n    }\n\n    onPinchStart() {\n        if (!this.getActivePageSpread().isZoomable()) {\n            return;\n        }\n\n        this.pinching = true;\n        this.el.setAttribute('data-pinching', true);\n        this.startTransform.scale = this.transform.scale;\n    }\n\n    onPinchMove(e) {\n        if (this.pinching === false) {\n            return;\n        }\n\n        this.zoomTo({\n            x: e.center.x,\n            y: e.center.y,\n            scale: this.startTransform.scale * e.scale,\n            bounds: false,\n            easing: 'linear'\n        });\n    }\n\n    onPinchEnd(e) {\n        if (this.pinching === false) {\n            return;\n        }\n\n        const activePageSpread = this.getActivePageSpread();\n        const maxZoomScale = activePageSpread.getMaxZoomScale();\n        const scale = Math.max(1, Math.min(this.transform.scale, maxZoomScale));\n        const position = this.getPosition();\n\n        if (this.startTransform.scale === 1 && scale > 1) {\n            this.trigger('zoomedIn', {position});\n        } else if (this.startTransform.scale > 1 && scale === 1) {\n            this.trigger('zoomedOut', {position});\n        }\n\n        this.zoomTo(\n            {\n                x: e.center.x,\n                y: e.center.y,\n                scale,\n                duration: this.zoomDuration\n            },\n            () => {\n                this.pinching = false;\n                this.el.setAttribute('data-pinching', false);\n            }\n        );\n    }\n\n    onPress(e) {\n        this.trigger(\n            'pressed',\n            this.getCoordinateInfo(\n                e.center.x,\n                e.center.y,\n                this.getActivePageSpread()\n            )\n        );\n    }\n\n    onContextmenu(e) {\n        e.preventDefault();\n\n        this.trigger(\n            'contextmenu',\n            this.getCoordinateInfo(\n                e.clientX,\n                e.clientY,\n                this.getActivePageSpread()\n            )\n        );\n\n        return false;\n    }\n\n    onWheel(e) {\n        let position, scale;\n        const activePageSpread = this.getActivePageSpread();\n\n        if (activePageSpread.isZoomable() === false) {\n            return;\n        }\n\n        // see https://stackoverflow.com/a/23668035\n        let {deltaY} = e;\n\n        if (event.webkitDirectionInvertedFromDevice) {\n            deltaY = -deltaY;\n        }\n\n        if (deltaY > 0 && this.transform.scale === 1) {\n            scale = activePageSpread.getMaxZoomScale();\n            position = this.getPosition();\n\n            this.zoomTo(\n                {\n                    x: e.clientX,\n                    y: e.clientY,\n                    scale,\n                    duration: this.zoomDuration\n                },\n                () => {\n                    this.trigger('zoomedIn', {position});\n                }\n            );\n        } else if (deltaY < 0 && this.transform.scale > 1) {\n            position = this.getPosition();\n\n            this.zoomTo(\n                {\n                    x: e.clientX,\n                    y: e.clientY,\n                    scale: 1,\n                    duration: this.zoomDuration\n                },\n                () => {\n                    this.trigger('zoomedOut', {position});\n                }\n            );\n        }\n    }\n\n    onSingletap(e) {\n        const activePageSpread = this.getActivePageSpread();\n        const coordinateInfo = this.getCoordinateInfo(\n            e.center.x,\n            e.center.y,\n            activePageSpread\n        );\n\n        clearTimeout(this.tap.timeout);\n\n        if (this.tap.count === 1) {\n            this.tap.count = 0;\n\n            this.trigger('doubleClicked', coordinateInfo);\n\n            if (activePageSpread.isZoomable()) {\n                const maxZoomScale = activePageSpread.getMaxZoomScale();\n                const zoomedIn = this.transform.scale > 1;\n                const scale = zoomedIn ? 1 : maxZoomScale;\n                const zoomEvent = zoomedIn ? 'zoomedOut' : 'zoomedIn';\n                const position = this.getPosition();\n\n                this.zoomTo(\n                    {\n                        x: e.center.x,\n                        y: e.center.y,\n                        scale,\n                        duration: this.zoomDuration\n                    },\n                    () => {\n                        this.trigger(zoomEvent, {position});\n                    }\n                );\n            }\n        } else {\n            this.tap.count++;\n            this.tap.timeout = setTimeout(() => {\n                this.tap.count = 0;\n\n                this.trigger('clicked', coordinateInfo);\n            }, this.tap.delay);\n        }\n    }\n\n    onTouchStart(e) {\n        if (!this.getActivePageSpread().isScrollable()) {\n            e.preventDefault();\n        }\n    }\n\n    onTouchEnd(e) {\n        if (!this.getActivePageSpread().isScrollable()) {\n            e.preventDefault();\n        }\n    }\n\n    onResize() {\n        if (this.transform.scale > 1) {\n            const position = this.getPosition();\n            const activePageSpread = this.getActivePageSpread();\n\n            this.transform.left = this.getLeftTransformFromPageSpread(\n                position,\n                activePageSpread\n            );\n            this.transform.top = 0;\n            this.transform.scale = 1;\n\n            this.zoomTo({\n                x: this.transform.left,\n                y: this.transform.top,\n                scale: this.transform.scale,\n                duration: 0\n            });\n\n            this.trigger('zoomedOut', {position});\n        }\n    }\n}\n"],"names":["Animation","el","options","callback","x","y","scale","easing","duration","run","transform","style","transitionEnd","removeEventListener","transition","addEventListener","PageSpread","id","type","pageIds","width","left","maxZoomScale","getMaxZoomScale","getEl","getAttribute","classList","contains","querySelectorAll","getBoundingClientRect","rect","top","right","bottom","height","_Array$from2","getPageEls","pageEl","pageRect","visibility","display","positioned","getLeft","active","setAttribute","VENDOR_PREFIXES","TEST_ELEMENT","document","createElement","TYPE_FUNCTION","round","Math","abs","now","invokeArrayArg","arg","fn","context","_Array$isArray","each","obj","iterator","i","length","undefined","call","Object","hasOwnProperty","inherit","child","base","properties","baseP","prototype","childP","_Object$create","constructor","_super","_Object$assign","boolOrFn","val","args","apply","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","removeEventListeners","hasParent","node","parent","parentNode","inStr","str","find","_indexOfInstanceProperty","_trimInstanceProperty","split","toArray","_sliceInstanceProperty","Array","uniqueArray","array","key","sort","results","values","item","push","_sortInstanceProperty","a","b","prefixed","property","camelProp","toUpperCase","_findInstanceProperty","prefix","_uniqueId","uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","window","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","self","inputTarget","domHandler","ev","enable","init","evEl","evTarget","evWin","destroy","createInputInstance","inputClass","Type","PointerEventInput","TouchInput","MouseInput","TouchMouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","last","lastInterval","velocity","velocityX","velocityY","direction","v","_mapInstanceProperty","pointer","clientX","clientY","p1","p2","xKey","yKey","sqrt","pow","atan2","PI","start","end","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","arguments","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","MSPointerEvent","PointerEvent","store","pointerEvents","removePointer","eventTypeNormalized","toLowerCase","replace","isTouch","storeIndex","_findIndexInstanceProperty","pointerId","_spliceInstanceProperty","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","_concatInstanceProperty","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","_filterInstanceProperty","touch","targetTouch","changedTouch","DEDUP_TIMEOUT","DEDUP_DISTANCE","_bindInstanceProperty","mouse","primaryTouch","lastTouches","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","recordTouches","isSyntheticEvent","eventData","setLastTouch","lastTouch","lts","removeLastTouch","PREFIXED_TOUCH_ACTION","te","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TouchAction","value","set","compute","TOUCH_ACTION_MAP","getTouchActionProps","actions","update","touchAction","recognizers","recognizer","getTouchAction","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","hasPanY","hasPanX","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","touchVals","cssSupports","CSS","supports","_reduceInstanceProperty","touchMap","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","defaults","state","simultaneous","requireFail","recognizeWith","otherRecognizer","getRecognizerByNameIfManager","dropRecognizeWith","requireFailure","dropRequireFailure","index","hasRequireFailures","canRecognizeWith","event","stateStr","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","directionStr","get","AttrRecognizer","attrTest","optionPointers","isRecognized","isValid","PanRecognizer","pX","pY","threshold","directionTest","hasMoved","PinchRecognizer","inOut","PressRecognizer","_timer","_input","time","validPointers","validMovement","validTime","_setTimeout","clearTimeout","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","Hammer","preset","Manager","VERSION","domEvents","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","handlers","oldCssProps","toggleCssProps","add","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","triggerDomEvent","prop","name","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","Tap","Pan","Swipe","Pinch","Rotate","Press","Verso","swipeVelocity","swipeThreshold","navigationDuration","navigationPanDuration","zoomDuration","doubleTapDelay","position","pinching","panning","startTransform","tap","delay","destroyed","_events","e","scrollerEl","querySelector","pageSpreadEls","pageSpreads","traversePageSpreads","buildPageIds","animation","hammer","getHammerInputClass","onPanStart","onPanMove","onPanEnd","onSingletap","onPinchStart","onPinchMove","onPinchEnd","onPress","onContextmenu","onWheel","pageId","getPageSpreadPositionFromPageId","navigateTo","resizeListener","onResize","touchStartListener","onTouchStart","touchEndListener","onTouchEnd","console","warn","getPosition","getPageSpreadCount","currentPosition","currentPageSpread","getPageSpreadFromPosition","activePageSpread","carousel","getCarouselFromPageSpread","isScrollable","deactivate","activate","visible","pageSpread","setVisibility","getLeftTransformFromPageSpread","setPosition","trigger","newPosition","animate","getActivePageSpread","gone","previousPosition","getWidth","pageSpreadSubject","els","Number","offsetLeft","offsetTop","info","contentX","contentY","pageX","pageY","overlayEls","isInsideContentX","isInsideContentY","isInsideContent","contentRect","getContentRect","getOverlayEls","pageEls","overlayEl","isCoordinateInsideElement","max","idx","pageSpreadRect","getRect","pageSpreadContentRect","coordinate","size","min","curScale","pageSpreadBounds","getPageSpreadBounds","carouselOffset","carouselScaledOffset","bounds","clipCoordinate","mobileRegex","supportTouch","edgeThreshold","offsetWidth","offsetHeight","next","prev","isZoomable","zoomTo","getCoordinateInfo","webkitDirectionInvertedFromDevice","coordinateInfo","timeout","zoomedIn","zoomEvent"],"mappings":"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"}